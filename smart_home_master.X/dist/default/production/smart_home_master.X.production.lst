

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Oct 04 21:43:15 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72   000000                     
    73                           ; Generated 12/10/2023 GMT
    74                           ; 
    75                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F46K20 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     
   108                           	psect	idataBANK0
   109   00441C                     __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for _lat_register
   113   00441C  89                 	db	137
   114   00441D  0F                 	db	15
   115   00441E  8A                 	db	138
   116   00441F  0F                 	db	15
   117   004420  8B                 	db	139
   118   004421  0F                 	db	15
   119   004422  8C                 	db	140
   120   004423  0F                 	db	15
   121   004424  8D                 	db	141
   122   004425  0F                 	db	15
   123                           
   124                           ;initializer for _port_register
   125   004426  80                 	db	128
   126   004427  0F                 	db	15
   127   004428  81                 	db	129
   128   004429  0F                 	db	15
   129   00442A  82                 	db	130
   130   00442B  0F                 	db	15
   131   00442C  83                 	db	131
   132   00442D  0F                 	db	15
   133   00442E  84                 	db	132
   134   00442F  0F                 	db	15
   135                           
   136                           ;initializer for _tris_register
   137   004430  92                 	db	146
   138   004431  0F                 	db	15
   139   004432  93                 	db	147
   140   004433  0F                 	db	15
   141   004434  94                 	db	148
   142   004435  0F                 	db	15
   143   004436  95                 	db	149
   144   004437  0F                 	db	15
   145   004438  96                 	db	150
   146   004439  0F                 	db	15
   147                           
   148                           ;initializer for _key1
   149   00443A  1E                 	db	30
   150   00443B  1F                 	db	31
   151   00443C  20                 	db	32
   152   00443D  21                 	db	33
   153   00443E  90                 	db	144
   154   00443F  8D                 	db	141
   155   004440  8E                 	db	142
   156   004441  8F                 	db	143
   157                           
   158                           ;initializer for _lcd1
   159   004442  1A                 	db	26
   160   004443  1B                 	db	27
   161   004444  1C                 	db	28
   162   004445  1D                 	db	29
   163   004446  18                 	db	24
   164   004447  19                 	db	25
   165                           
   166                           ;initializer for _Keypad_Value
   167   004448  4D                 	db	77
   168   004449  4D                 	db	77
   169   00444A  4D                 	db	77
   170   00444B  4D                 	db	77
   171                           
   172                           	psect	smallconst
   173   001000                     __psmallconst:
   174                           	callstack 0
   175   001000  00                 	db	0
   176   001001                     _btn_values:
   177                           	callstack 0
   178   001001  37                 	db	55
   179   001002  38                 	db	56
   180   001003  39                 	db	57
   181   001004  2F                 	db	47
   182   001005  34                 	db	52
   183   001006  35                 	db	53
   184   001007  36                 	db	54
   185   001008  2A                 	db	42
   186   001009  31                 	db	49
   187   00100A  32                 	db	50
   188   00100B  33                 	db	51
   189   00100C  2D                 	db	45
   190   00100D  23                 	db	35
   191   00100E  30                 	db	48
   192   00100F  3D                 	db	61
   193   001010  2B                 	db	43
   194   001011                     __end_of_btn_values:
   195                           	callstack 0
   196   000000                     _EEDATA	set	4008
   197   000000                     _EEADR	set	4009
   198   000000                     _EEADRH	set	4010
   199   000000                     _EECON2	set	4007
   200   000000                     _ANSELH	set	3967
   201   000000                     _WPUB	set	3964
   202   000000                     _ANSEL	set	3966
   203   000000                     _PORTA	set	3968
   204   000000                     _TRISA	set	3986
   205   000000                     _OSCTUNE	set	3995
   206   000000                     _OSCCON	set	4051
   207   000000                     _INTCON2bits	set	4081
   208   000000                     _TRISE	set	3990
   209   000000                     _TRISD	set	3989
   210   000000                     _TRISC	set	3988
   211   000000                     _TRISB	set	3987
   212   000000                     _LATA	set	3977
   213   000000                     _PORTE	set	3972
   214   000000                     _PORTD	set	3971
   215   000000                     _PORTC	set	3970
   216   000000                     _PORTB	set	3969
   217   000000                     _LATE	set	3981
   218   000000                     _LATD	set	3980
   219   000000                     _LATC	set	3979
   220   000000                     _LATB	set	3978
   221   000000                     _TABLAT	set	4085
   222   000000                     _TBLPTRL	set	4086
   223   000000                     _TBLPTRH	set	4087
   224   000000                     _TBLPTRU	set	4088
   225   000000                     _INTCONbits	set	4082
   226   000000                     _PIR2bits	set	4001
   227   000000                     _EECON1bits	set	4006
   228   001011                     STR_7:
   229   001011  50                 	db	80	;'P'
   230   001012  4C                 	db	76	;'L'
   231   001013  65                 	db	101	;'e'
   232   001014  61                 	db	97	;'a'
   233   001015  73                 	db	115	;'s'
   234   001016  65                 	db	101	;'e'
   235   001017  20                 	db	32
   236   001018  53                 	db	83	;'S'
   237   001019  65                 	db	101	;'e'
   238   00101A  74                 	db	116	;'t'
   239   00101B  20                 	db	32
   240   00101C  50                 	db	80	;'P'
   241   00101D  61                 	db	97	;'a'
   242   00101E  73                 	db	115	;'s'
   243   00101F  73                 	db	115	;'s'
   244   001020  77                 	db	119	;'w'
   245   001021  6F                 	db	111	;'o'
   246   001022  72                 	db	114	;'r'
   247   001023  64                 	db	100	;'d'
   248   001024  00                 	db	0
   249   001025                     STR_6:
   250   001025  20                 	db	32
   251   001026  57                 	db	87	;'W'
   252   001027  65                 	db	101	;'e'
   253   001028  6C                 	db	108	;'l'
   254   001029  63                 	db	99	;'c'
   255   00102A  6F                 	db	111	;'o'
   256   00102B  6D                 	db	109	;'m'
   257   00102C  00                 	db	0
   258   00102D  25                 	db	37
   259   00102E  2E                 	db	46
   260   00102F  31                 	db	49	;'1'
   261   001030  66                 	db	102	;'f'
   262   001031  00                 	db	0
   263   001032  25                 	db	37
   264   001033  2E                 	db	46
   265   001034  36                 	db	54	;'6'
   266   001035  66                 	db	102	;'f'
   267   001036  00                 	db	0
   268   001037                     STR_10:
   269   001037  69                 	db	105	;'i'
   270   001038  6E                 	db	110	;'n'
   271   001039  66                 	db	102	;'f'
   272   00103A  00                 	db	0
   273   00103B                     STR_13:
   274   00103B  6E                 	db	110	;'n'
   275   00103C  61                 	db	97	;'a'
   276   00103D  6E                 	db	110	;'n'
   277   00103E  00                 	db	0
   278   00103F                     STR_1:
   279   00103F  25                 	db	37
   280   001040  69                 	db	105	;'i'
   281   001041  00                 	db	0
   282   001042                     STR_8:
   283   001042  20                 	db	32
   284   001043  00                 	db	0
   285   001044                     STR_9:
   286   001044  2A                 	db	42
   287   001045  00                 	db	0
   288   001046  00                 	db	0	; dummy byte at the end
   289   000000                     
   290                           ; #config settings
   291                           
   292                           	psect	cinit
   293   00416A                     __pcinit:
   294                           	callstack 0
   295   00416A                     start_initialization:
   296                           	callstack 0
   297   00416A                     __initialization:
   298                           	callstack 0
   299                           
   300                           ; Initialize objects allocated to BANK0 (48 bytes)
   301                           ; load TBLPTR registers with __pidataBANK0
   302   00416A  0E1C               	movlw	low __pidataBANK0
   303   00416C  6EF6               	movwf	tblptrl,c
   304   00416E  0E44               	movlw	high __pidataBANK0
   305   004170  6EF7               	movwf	tblptrh,c
   306   004172  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   307   004174  6EF8               	movwf	tblptru,c
   308   004176  EE00  F0A0         	lfsr	0,__pdataBANK0
   309   00417A  EE10 F030          	lfsr	1,48
   310   00417E                     copy_data0:
   311   00417E  0009               	tblrd		*+
   312   004180  CFF5 FFEE          	movff	tablat,postinc0
   313   004184  50E5               	movf	postdec1,w,c
   314   004186  50E1               	movf	fsr1l,w,c
   315   004188  E1FA               	bnz	copy_data0
   316                           
   317                           ; Clear objects allocated to BANK1 (80 bytes)
   318   00418A  EE01  F000         	lfsr	0,__pbssBANK1
   319   00418E  0E50               	movlw	80
   320   004190                     clear_0:
   321   004190  6AEE               	clrf	postinc0,c
   322   004192  06E8               	decf	wreg,f,c
   323   004194  E1FD               	bnz	clear_0
   324                           
   325                           ; Clear objects allocated to BANK0 (20 bytes)
   326   004196  EE00  F0D0         	lfsr	0,__pbssBANK0
   327   00419A  0E14               	movlw	20
   328   00419C                     clear_1:
   329   00419C  6AEE               	clrf	postinc0,c
   330   00419E  06E8               	decf	wreg,f,c
   331   0041A0  E1FD               	bnz	clear_1
   332                           
   333                           ; Clear objects allocated to COMRAM (10 bytes)
   334   0041A2  EE00  F04F         	lfsr	0,__pbssCOMRAM
   335   0041A6  0E0A               	movlw	10
   336   0041A8                     clear_2:
   337   0041A8  6AEE               	clrf	postinc0,c
   338   0041AA  06E8               	decf	wreg,f,c
   339   0041AC  E1FD               	bnz	clear_2
   340   0041AE                     end_of_initialization:
   341                           	callstack 0
   342   0041AE                     __end_of__initialization:
   343                           	callstack 0
   344   0041AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   345   0041B0  6EF8               	movwf	tblptru,c
   346   0041B2  0100               	movlb	0
   347   0041B4  EF02  F017         	goto	_main	;jump to C main() function
   348                           
   349                           	psect	bssCOMRAM
   350   00004F                     __pbssCOMRAM:
   351                           	callstack 0
   352   00004F                     _width:
   353                           	callstack 0
   354   00004F                     	ds	2
   355   000051                     _prec:
   356                           	callstack 0
   357   000051                     	ds	2
   358   000053                     _Password:
   359                           	callstack 0
   360   000053                     	ds	2
   361   000055                     _flags:
   362                           	callstack 0
   363   000055                     	ds	1
   364   000056                     _Program_Count:
   365                           	callstack 0
   366   000056                     	ds	1
   367   000057                     _ret:
   368                           	callstack 0
   369   000057                     	ds	1
   370   000058                     _led_1:
   371                           	callstack 0
   372   000058                     	ds	1
   373                           
   374                           	psect	bssBANK0
   375   0000D0                     __pbssBANK0:
   376                           	callstack 0
   377   0000D0                     	ds	6
   378   0000D6                     floorf@F521:
   379                           	callstack 0
   380   0000D6                     	ds	4
   381   0000DA                     ___fpclassifyf@F465:
   382                           	callstack 0
   383   0000DA                     	ds	4
   384   0000DE                     _Password_text:
   385                           	callstack 0
   386   0000DE                     	ds	6
   387                           
   388                           	psect	dataBANK0
   389   0000A0                     __pdataBANK0:
   390                           	callstack 0
   391   0000A0                     _lat_register:
   392                           	callstack 0
   393   0000A0                     	ds	10
   394   0000AA                     _port_register:
   395                           	callstack 0
   396   0000AA                     	ds	10
   397   0000B4                     _tris_register:
   398                           	callstack 0
   399   0000B4                     	ds	10
   400   0000BE                     _key1:
   401                           	callstack 0
   402   0000BE                     	ds	8
   403   0000C6                     _lcd1:
   404                           	callstack 0
   405   0000C6                     	ds	6
   406   0000CC                     _Keypad_Value:
   407                           	callstack 0
   408   0000CC                     	ds	4
   409                           
   410                           	psect	bssBANK1
   411   000100                     __pbssBANK1:
   412                           	callstack 0
   413   000100                     _dbuf:
   414                           	callstack 0
   415   000100                     	ds	80
   416                           
   417                           	psect	cstackBANK0
   418   000060                     __pcstackBANK0:
   419                           	callstack 0
   420   000060                     efgtoa@ne:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x0
   424   000060                     	ds	2
   425   000062                     efgtoa@p:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x2
   429   000062                     	ds	2
   430   000064                     efgtoa@t:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x4
   434   000064                     	ds	2
   435   000066                     _efgtoa$1580:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x6
   439   000066                     	ds	2
   440   000068                     efgtoa@pp:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x8
   444   000068                     	ds	1
   445   000069                     efgtoa@mode:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x9
   449   000069                     	ds	1
   450   00006A                     efgtoa@nmode:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0xA
   454   00006A                     	ds	1
   455   00006B                     efgtoa@d:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0xB
   459   00006B                     	ds	2
   460   00006D                     efgtoa@m:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xD
   464   00006D                     	ds	2
   465   00006F                     efgtoa@e:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0xF
   469   00006F                     	ds	2
   470   000071                     efgtoa@w:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x11
   474   000071                     	ds	2
   475   000073                     efgtoa@ou:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x13
   479   000073                     	ds	4
   480   000077                     efgtoa@i:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x17
   484   000077                     	ds	2
   485   000079                     efgtoa@h:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0x19
   489   000079                     	ds	4
   490   00007D                     efgtoa@l:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x1D
   494   00007D                     	ds	4
   495   000081                     efgtoa@sign:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x21
   499   000081                     	ds	1
   500   000082                     efgtoa@g:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x22
   504   000082                     	ds	4
   505   000086                     efgtoa@n:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x26
   509   000086                     	ds	2
   510   000088                     efgtoa@u:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x28
   514   000088                     	ds	4
   515   00008C                     ?_vfprintf:
   516                           	callstack 0
   517   00008C                     vfprintf@fp:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x2C
   521   00008C                     	ds	1
   522   00008D                     vfprintf@fmt:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x2D
   526   00008D                     	ds	1
   527   00008E                     vfprintf@ap:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x2E
   531   00008E                     	ds	1
   532   00008F                     ?_sprintf:
   533                           	callstack 0
   534   00008F                     sprintf@s:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x2F
   538   00008F                     	ds	1
   539   000090                     sprintf@fmt:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x30
   543   000090                     	ds	5
   544   000095                     convert_uint16_to_string@value:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x35
   548   000095                     	ds	2
   549   000097                     convert_uint16_to_string@str:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x37
   553   000097                     	ds	1
   554   000098                     convert_uint16_to_string@temp_str:
   555                           	callstack 0
   556                           
   557                           ; 6 bytes @ 0x38
   558   000098                     	ds	6
   559   00009E                     convert_uint16_to_string@Ret:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x3E
   563   00009E                     	ds	1
   564   00009F                     convert_uint16_to_string@Data_Counter:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x3F
   568   00009F                     	ds	1
   569                           
   570                           	psect	cstackCOMRAM
   571   000001                     __pcstackCOMRAM:
   572                           	callstack 0
   573   000001                     ?___fpclassifyf:
   574                           	callstack 0
   575   000001                     ?___wmul:
   576                           	callstack 0
   577   000001                     ?___awdiv:
   578                           	callstack 0
   579   000001                     ?___awmod:
   580                           	callstack 0
   581   000001                     ?___fladd:
   582                           	callstack 0
   583   000001                     ?___fldiv:
   584                           	callstack 0
   585   000001                     ?___flmul:
   586                           	callstack 0
   587   000001                     ?_labs:
   588                           	callstack 0
   589   000001                     ?___flneg:
   590                           	callstack 0
   591   000001                     ?___fltol:
   592                           	callstack 0
   593   000001                     gpio_pin_direction_initialize@pin_config:
   594                           	callstack 0
   595   000001                     gpio_pin_write_logic@pin_config:
   596                           	callstack 0
   597   000001                     gpio_pin_read_logic@pin_config:
   598                           	callstack 0
   599   000001                     memset@dest:
   600                           	callstack 0
   601   000001                     DATAEE_WriteByte@bAdd:
   602                           	callstack 0
   603   000001                     DATAEE_ReadByte@bAdd:
   604                           	callstack 0
   605   000001                     ___wmul@multiplier:
   606                           	callstack 0
   607   000001                     ___awdiv@dividend:
   608                           	callstack 0
   609   000001                     ___awmod@dividend:
   610                           	callstack 0
   611   000001                     memcpy@d1:
   612                           	callstack 0
   613   000001                     fputc@c:
   614                           	callstack 0
   615   000001                     strcpy@dest:
   616                           	callstack 0
   617   000001                     ___fleq@ff1:
   618                           	callstack 0
   619   000001                     ___flneg@f1:
   620                           	callstack 0
   621   000001                     ___fltol@f1:
   622                           	callstack 0
   623   000001                     ___fladd@b:
   624                           	callstack 0
   625   000001                     ___fldiv@b:
   626                           	callstack 0
   627   000001                     ___flmul@b:
   628                           	callstack 0
   629   000001                     ___fpclassifyf@x:
   630                           	callstack 0
   631   000001                     labs@a:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x0
   635   000001                     	ds	1
   636   000002                     ??_gpio_pin_direction_initialize:
   637   000002                     gpio_pin_write_logic@logic:
   638                           	callstack 0
   639   000002                     gpio_pin_read_logic@logic:
   640                           	callstack 0
   641   000002                     memset@c:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x1
   645   000002                     	ds	1
   646   000003                     ??_gpio_pin_write_logic:
   647   000003                     ??_gpio_pin_read_logic:
   648   000003                     ?_Read_Password_EEPROM:
   649                           	callstack 0
   650   000003                     DATAEE_WriteByte@bData:
   651                           	callstack 0
   652   000003                     fputc@fp:
   653                           	callstack 0
   654   000003                     strcpy@src:
   655                           	callstack 0
   656   000003                     ___wmul@multiplicand:
   657                           	callstack 0
   658   000003                     ___awdiv@divisor:
   659                           	callstack 0
   660   000003                     ___awmod@divisor:
   661                           	callstack 0
   662   000003                     memcpy@s1:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x2
   666   000003                     	ds	1
   667   000004                     ??_fputc:
   668   000004                     ??_strcpy:
   669   000004                     DATAEE_WriteByte@GIEBitValue:
   670                           	callstack 0
   671   000004                     memset@n:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x3
   675   000004                     	ds	1
   676   000005                     ??_Read_Password_EEPROM:
   677   000005                     ??___fpclassifyf:
   678   000005                     ??_labs:
   679   000005                     ??___fltol:
   680   000005                     ___awdiv@counter:
   681                           	callstack 0
   682   000005                     ___awmod@counter:
   683                           	callstack 0
   684   000005                     ___wmul@product:
   685                           	callstack 0
   686   000005                     memcpy@n:
   687                           	callstack 0
   688   000005                     strcpy@d:
   689                           	callstack 0
   690   000005                     ___fleq@ff2:
   691                           	callstack 0
   692   000005                     ___fladd@a:
   693                           	callstack 0
   694   000005                     ___fldiv@a:
   695                           	callstack 0
   696   000005                     ___flmul@a:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x4
   700   000005                     	ds	1
   701   000006                     ___awdiv@sign:
   702                           	callstack 0
   703   000006                     ___awmod@sign:
   704                           	callstack 0
   705   000006                     memset@p:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x5
   709   000006                     	ds	1
   710   000007                     ?_abs:
   711                           	callstack 0
   712   000007                     ?_read_prec_or_width:
   713                           	callstack 0
   714   000007                     gpio_pin_direction_initialize@Ret:
   715                           	callstack 0
   716   000007                     gpio_pin_read_logic@Ret:
   717                           	callstack 0
   718   000007                     read_prec_or_width@fmt:
   719                           	callstack 0
   720   000007                     memcpy@tmp:
   721                           	callstack 0
   722   000007                     ___awdiv@quotient:
   723                           	callstack 0
   724   000007                     abs@a:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x6
   728   000007                     	ds	1
   729   000008                     gpio_pin_write_logic@Ret:
   730                           	callstack 0
   731   000008                     read_prec_or_width@ap:
   732                           	callstack 0
   733   000008                     Read_Password_EEPROM@Return_Value:
   734                           	callstack 0
   735   000008                     memcpy@d:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x7
   739   000008                     	ds	1
   740   000009                     ??___fladd:
   741   000009                     ??___fldiv:
   742   000009                     ??___flmul:
   743   000009                     ??_abs:
   744   000009                     ??___fleq:
   745   000009                     keypad_get_value@obj:
   746                           	callstack 0
   747   000009                     lcd_send_4bit@lcd:
   748                           	callstack 0
   749   000009                     lcd_4bit_send_enable_signal@lcd:
   750                           	callstack 0
   751   000009                     gpio_pin_initialize@pin_config:
   752                           	callstack 0
   753   000009                     led_on@led:
   754                           	callstack 0
   755   000009                     ___fltol@sign1:
   756                           	callstack 0
   757   000009                     read_prec_or_width@c:
   758                           	callstack 0
   759   000009                     ___fpclassifyf@e:
   760                           	callstack 0
   761   000009                     fputs@s:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x8
   765   000009                     	ds	1
   766   00000A                     ??_gpio_pin_initialize:
   767   00000A                     ??_led_on:
   768   00000A                     keypad_get_value@value:
   769                           	callstack 0
   770   00000A                     lcd_send_4bit@value:
   771                           	callstack 0
   772   00000A                     lcd_4bit_send_enable_signal@Ret:
   773                           	callstack 0
   774   00000A                     ___fltol@exp1:
   775                           	callstack 0
   776   00000A                     read_prec_or_width@n:
   777                           	callstack 0
   778   00000A                     memcpy@s:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x9
   782   00000A                     	ds	1
   783   00000B                     ??_lcd_send_4bit:
   784   00000B                     ??_keypad_get_value:
   785   00000B                     gpio_pin_initialize@Ret:
   786                           	callstack 0
   787   00000B                     led_on@ret:
   788                           	callstack 0
   789   00000B                     fputs@fp:
   790                           	callstack 0
   791   00000B                     ___fpclassifyf@u:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0xA
   795   00000B                     	ds	1
   796   00000C                     keypad_initialize@obj:
   797                           	callstack 0
   798   00000C                     keypad_get_value@ret:
   799                           	callstack 0
   800   00000C                     led_initialize@led:
   801                           	callstack 0
   802   00000C                     led_on@pin_obj:
   803                           	callstack 0
   804   00000C                     fputs@c:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0xB
   808   00000C                     	ds	1
   809   00000D                     ??_led_initialize:
   810   00000D                     keypad_initialize@ret:
   811                           	callstack 0
   812   00000D                     keypad_get_value@column_logic:
   813                           	callstack 0
   814   00000D                     lcd_send_4bit@Ret:
   815                           	callstack 0
   816   00000D                     ___fladd@signs:
   817                           	callstack 0
   818   00000D                     ___flmul@sign:
   819                           	callstack 0
   820   00000D                     fputs@i:
   821                           	callstack 0
   822   00000D                     ___fldiv@rem:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0xC
   826   00000D                     	ds	1
   827   00000E                     keypad_initialize@num_row:
   828                           	callstack 0
   829   00000E                     keypad_get_value@count:
   830                           	callstack 0
   831   00000E                     lcd_send_4bit@l_counter:
   832                           	callstack 0
   833   00000E                     led_initialize@ret:
   834                           	callstack 0
   835   00000E                     ___fladd@aexp:
   836                           	callstack 0
   837   00000E                     ___flmul@aexp:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0xD
   841   00000E                     	ds	1
   842   00000F                     keypad_initialize@num_col:
   843                           	callstack 0
   844   00000F                     keypad_get_value@rows_counter:
   845                           	callstack 0
   846   00000F                     lcd_4bit_send_command@lcd:
   847                           	callstack 0
   848   00000F                     lcd_4bit_send_char_data@lcd:
   849                           	callstack 0
   850   00000F                     led_initialize@pin_obj:
   851                           	callstack 0
   852   00000F                     ___fladd@bexp:
   853                           	callstack 0
   854   00000F                     pad@fp:
   855                           	callstack 0
   856   00000F                     ___flmul@grs:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0xE
   860   00000F                     	ds	1
   861   000010                     keypad_get_value@cols_counter:
   862                           	callstack 0
   863   000010                     lcd_4bit_send_command@command:
   864                           	callstack 0
   865   000010                     lcd_4bit_send_char_data@data:
   866                           	callstack 0
   867   000010                     ___fladd@grs:
   868                           	callstack 0
   869   000010                     pad@buf:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0xF
   873   000010                     	ds	1
   874   000011                     lcd_4bit_send_command@Ret:
   875                           	callstack 0
   876   000011                     lcd_4bit_send_char_data@Ret:
   877                           	callstack 0
   878   000011                     ___fldiv@sign:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x10
   882   000011                     	ds	1
   883   000012                     lcd_4bit_initialze@lcd:
   884                           	callstack 0
   885   000012                     lcd_4bit_send_string_data@lcd:
   886                           	callstack 0
   887   000012                     lcd_4bit_set_cursor@lcd:
   888                           	callstack 0
   889   000012                     ___fldiv@new_exp:
   890                           	callstack 0
   891   000012                     pad@p:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x11
   895   000012                     	ds	1
   896   000013                     ??_lcd_4bit_initialze:
   897   000013                     lcd_4bit_set_cursor@row:
   898                           	callstack 0
   899   000013                     ___flmul@bexp:
   900                           	callstack 0
   901   000013                     lcd_4bit_send_string_data@str_data:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x12
   905   000013                     	ds	1
   906   000014                     ??_pad:
   907   000014                     lcd_4bit_initialze@l_counter:
   908                           	callstack 0
   909   000014                     lcd_4bit_set_cursor@coulmn:
   910                           	callstack 0
   911   000014                     ___fldiv@grs:
   912                           	callstack 0
   913   000014                     ___flmul@prod:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x13
   917   000014                     	ds	1
   918   000015                     ??_lcd_4bit_set_cursor:
   919   000015                     ??_lcd_4bit_send_string_data:
   920   000015                     lcd_4bit_initialze@Ret:
   921                           	callstack 0
   922   000015                     pad@i:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x14
   926   000015                     	ds	1
   927   000016                     
   928                           ; 1 bytes @ 0x15
   929   000016                     	ds	1
   930   000017                     lcd_4bit_send_string_data@Ret:
   931                           	callstack 0
   932   000017                     lcd_4bit_set_cursor@Ret:
   933                           	callstack 0
   934   000017                     dtoa@fp:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x16
   938   000017                     	ds	1
   939   000018                     lcd_4bit_send_string_data@l_counter:
   940                           	callstack 0
   941   000018                     ___fldiv@bexp:
   942                           	callstack 0
   943   000018                     ___flmul@temp:
   944                           	callstack 0
   945   000018                     dtoa@d:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x17
   949   000018                     	ds	1
   950   000019                     ??_Welcom:
   951   000019                     lcd_4bit_send_string_data_pos@lcd:
   952                           	callstack 0
   953   000019                     ___fldiv@aexp:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x18
   957   000019                     	ds	1
   958   00001A                     ?___flsub:
   959                           	callstack 0
   960   00001A                     ?_floorf:
   961                           	callstack 0
   962   00001A                     lcd_4bit_send_string_data_pos@row:
   963                           	callstack 0
   964   00001A                     _dtoa$1549:
   965                           	callstack 0
   966   00001A                     ___flge@ff1:
   967                           	callstack 0
   968   00001A                     ___flsub@b:
   969                           	callstack 0
   970   00001A                     floorf@x:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x19
   974   00001A                     	ds	1
   975   00001B                     lcd_4bit_send_string_data_pos@coulmn:
   976                           	callstack 0
   977   00001B                     Welcom@l_welcom_counter:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x1A
   981   00001B                     	ds	1
   982   00001C                     lcd_4bit_send_string_data_pos@str_data:
   983                           	callstack 0
   984   00001C                     dtoa@w:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x1B
   988   00001C                     	ds	2
   989   00001E                     ??_floorf:
   990   00001E                     lcd_4bit_send_string_data_pos@Ret:
   991                           	callstack 0
   992   00001E                     dtoa@p:
   993                           	callstack 0
   994   00001E                     ___flge@ff2:
   995                           	callstack 0
   996   00001E                     ___flsub@a:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x1D
  1000   00001E                     	ds	1
  1001   00001F                     ?_Set_Password:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x1E
  1005   00001F                     	ds	1
  1006   000020                     dtoa@s:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x1F
  1010   000020                     	ds	1
  1011   000021                     ??_Set_Password:
  1012   000021                     dtoa@i:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x20
  1016   000021                     	ds	1
  1017   000022                     ??___flge:
  1018                           
  1019                           ; 1 bytes @ 0x21
  1020   000022                     	ds	2
  1021   000024                     floorf@m:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x23
  1025   000024                     	ds	4
  1026   000028                     floorf@e:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x27
  1030   000028                     	ds	1
  1031   000029                     Set_Password@Return_Value:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x28
  1035   000029                     	ds	1
  1036   00002A                     floorf@u:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x29
  1040   00002A                     	ds	1
  1041   00002B                     Set_Password@l_Counter:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x2A
  1045   00002B                     	ds	3
  1046   00002E                     efgtoa@fp:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x2D
  1050   00002E                     	ds	1
  1051   00002F                     efgtoa@f:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x2E
  1055   00002F                     	ds	4
  1056   000033                     efgtoa@c:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x32
  1060   000033                     	ds	1
  1061   000034                     ??_efgtoa:
  1062                           
  1063                           ; 1 bytes @ 0x33
  1064   000034                     	ds	2
  1065   000036                     vfpfcnvrt@fp:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x35
  1069   000036                     	ds	1
  1070   000037                     vfpfcnvrt@fmt:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x36
  1074   000037                     	ds	1
  1075   000038                     vfpfcnvrt@ap:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x37
  1079   000038                     	ds	1
  1080   000039                     ??_vfpfcnvrt:
  1081                           
  1082                           ; 1 bytes @ 0x38
  1083   000039                     	ds	2
  1084   00003B                     vfpfcnvrt@convarg:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x3A
  1088   00003B                     	ds	4
  1089   00003F                     vfpfcnvrt@c:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x3E
  1093   00003F                     	ds	1
  1094   000040                     vfpfcnvrt@cp:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x3F
  1098   000040                     	ds	1
  1099   000041                     vfprintf@cfmt:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x40
  1103   000041                     	ds	1
  1104   000042                     sprintf@ap:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x41
  1108   000042                     	ds	1
  1109   000043                     sprintf@f:
  1110                           	callstack 0
  1111                           
  1112                           ; 12 bytes @ 0x42
  1113   000043                     	ds	12
  1114   00004F                     
  1115                           ; 1 bytes @ 0x4E
  1116 ;;
  1117 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1118 ;;
  1119 ;; *************** function _main *****************
  1120 ;; Defined at:
  1121 ;;		line 88 in file "main.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels required when called: 9
  1141 ;; This function calls:
  1142 ;;		_APP_Init
  1143 ;;		_DATAEE_ReadByte
  1144 ;;		_DATAEE_WriteByte
  1145 ;;		_Read_Password_EEPROM
  1146 ;;		_SYSTEM_Initialize
  1147 ;;		_Set_Password
  1148 ;;		_Welcom
  1149 ;;		_convert_uint16_to_string
  1150 ;;		_lcd_4bit_send_command
  1151 ;;		_lcd_4bit_send_string_data_pos
  1152 ;;		_led_on
  1153 ;; This function is called by:
  1154 ;;		Startup code after reset
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text0
  1159   002E04                     __ptext0:
  1160                           	callstack 0
  1161   002E04                     _main:
  1162                           	callstack 22
  1163   002E04                     
  1164                           ;main.c: 90:     DATAEE_WriteByte(0x0000, 0xFF);
  1165   002E04  0E00               	movlw	0
  1166   002E06  6E02               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  1167   002E08  0E00               	movlw	0
  1168   002E0A  6E01               	movwf	DATAEE_WriteByte@bAdd^0,c
  1169   002E0C  0EFF               	movlw	255
  1170   002E0E  6E03               	movwf	DATAEE_WriteByte@bData^0,c
  1171   002E10  ECFF  F020         	call	_DATAEE_WriteByte	;wreg free
  1172   002E14                     
  1173                           ;main.c: 92:     SYSTEM_Initialize();
  1174   002E14  EC85  F022         	call	_SYSTEM_Initialize	;wreg free
  1175   002E18                     
  1176                           ;main.c: 93:     APP_Init();
  1177   002E18  EC69  F022         	call	_APP_Init	;wreg free
  1178   002E1C                     
  1179                           ;main.c: 95:     Welcom();
  1180   002E1C  EC1E  F01B         	call	_Welcom	;wreg free
  1181   002E20                     
  1182                           ;main.c: 97:     Program_Count = DATAEE_ReadByte(0x0000);
  1183   002E20  0E00               	movlw	0
  1184   002E22  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  1185   002E24  0E00               	movlw	0
  1186   002E26  6E01               	movwf	DATAEE_ReadByte@bAdd^0,c
  1187   002E28  EC79  F022         	call	_DATAEE_ReadByte	;wreg free
  1188   002E2C  6E56               	movwf	_Program_Count^0,c
  1189   002E2E                     
  1190                           ;main.c: 99:     if (Program_Count == 0xFF)
  1191   002E2E  2856               	incf	_Program_Count^0,w,c
  1192   002E30  A4D8               	btfss	status,2,c
  1193   002E32  EF1D  F017         	goto	u7961
  1194   002E36  EF1F  F017         	goto	u7960
  1195   002E3A                     u7961:
  1196   002E3A  EF3A  F017         	goto	l7297
  1197   002E3E                     u7960:
  1198   002E3E                     
  1199                           ;main.c: 100:     {;main.c: 101:         Password = Set_Password();
  1200   002E3E  EC24  F018         	call	_Set_Password	;wreg free
  1201   002E42  C01F  F053         	movff	?_Set_Password,_Password
  1202   002E46  C020  F054         	movff	?_Set_Password+1,_Password+1
  1203   002E4A                     
  1204                           ;main.c: 103:         DATAEE_WriteByte(0x0120, (uint8)Password);
  1205   002E4A  0E01               	movlw	1
  1206   002E4C  6E02               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  1207   002E4E  0E20               	movlw	32
  1208   002E50  6E01               	movwf	DATAEE_WriteByte@bAdd^0,c
  1209   002E52  C053  F003         	movff	_Password,DATAEE_WriteByte@bData
  1210   002E56  ECFF  F020         	call	_DATAEE_WriteByte	;wreg free
  1211   002E5A                     
  1212                           ;main.c: 104:         DATAEE_WriteByte(0x0121, (uint8)( (Password >> 8) &0x0F));
  1213   002E5A  0E01               	movlw	1
  1214   002E5C  6E02               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  1215   002E5E  0E21               	movlw	33
  1216   002E60  6E01               	movwf	DATAEE_WriteByte@bAdd^0,c
  1217   002E62  5054               	movf	(_Password+1)^0,w,c
  1218   002E64  0B0F               	andlw	15
  1219   002E66  6E03               	movwf	DATAEE_WriteByte@bData^0,c
  1220   002E68  ECFF  F020         	call	_DATAEE_WriteByte	;wreg free
  1221   002E6C                     
  1222                           ;main.c: 105:         Program_Count = 1;
  1223   002E6C  0E01               	movlw	1
  1224   002E6E  6E56               	movwf	_Program_Count^0,c
  1225                           
  1226                           ;main.c: 106:     }
  1227   002E70  EF54  F017         	goto	l7307
  1228   002E74                     l7297:
  1229   002E74  0EFE               	movlw	254
  1230   002E76  1856               	xorwf	_Program_Count^0,w,c
  1231   002E78  A4D8               	btfss	status,2,c
  1232   002E7A  EF41  F017         	goto	u7971
  1233   002E7E  EF43  F017         	goto	u7970
  1234   002E82                     u7971:
  1235   002E82  EF4D  F017         	goto	l7303
  1236   002E86                     u7970:
  1237   002E86                     
  1238                           ;main.c: 108:     {;main.c: 109:         Password = Read_Password_EEPROM();
  1239   002E86  EC9F  F021         	call	_Read_Password_EEPROM	;wreg free
  1240   002E8A  C003  F053         	movff	?_Read_Password_EEPROM,_Password
  1241   002E8E  C004  F054         	movff	?_Read_Password_EEPROM+1,_Password+1
  1242   002E92                     
  1243                           ;main.c: 111:         Program_Count = 0;
  1244   002E92  0E00               	movlw	0
  1245   002E94  6E56               	movwf	_Program_Count^0,c
  1246                           
  1247                           ;main.c: 112:     }
  1248   002E96  EF54  F017         	goto	l7307
  1249   002E9A                     l7303:
  1250                           
  1251                           ;main.c: 114:     {;main.c: 115:         Password = Read_Password_EEPROM();
  1252   002E9A  EC9F  F021         	call	_Read_Password_EEPROM	;wreg free
  1253   002E9E  C003  F053         	movff	?_Read_Password_EEPROM,_Password
  1254   002EA2  C004  F054         	movff	?_Read_Password_EEPROM+1,_Password+1
  1255   002EA6                     
  1256                           ;main.c: 116:         Program_Count++;
  1257   002EA6  2A56               	incf	_Program_Count^0,f,c
  1258   002EA8                     l7307:
  1259                           
  1260                           ;main.c: 119:     DATAEE_WriteByte(0x0000, Program_Count);
  1261   002EA8  0E00               	movlw	0
  1262   002EAA  6E02               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  1263   002EAC  0E00               	movlw	0
  1264   002EAE  6E01               	movwf	DATAEE_WriteByte@bAdd^0,c
  1265   002EB0  C056  F003         	movff	_Program_Count,DATAEE_WriteByte@bData
  1266   002EB4  ECFF  F020         	call	_DATAEE_WriteByte	;wreg free
  1267   002EB8                     
  1268                           ;main.c: 120:     ret = lcd_4bit_send_command(&lcd1, 0X01);
  1269   002EB8  0EC6               	movlw	low _lcd1
  1270   002EBA  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1271   002EBC  0E01               	movlw	1
  1272   002EBE  6E10               	movwf	lcd_4bit_send_command@command^0,c
  1273   002EC0  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  1274   002EC4  6E57               	movwf	_ret^0,c
  1275   002EC6                     
  1276                           ;main.c: 121:     ret = lcd_4bit_send_command(&lcd1, 0X02);
  1277   002EC6  0EC6               	movlw	low _lcd1
  1278   002EC8  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1279   002ECA  0E02               	movlw	2
  1280   002ECC  6E10               	movwf	lcd_4bit_send_command@command^0,c
  1281   002ECE  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  1282   002ED2  6E57               	movwf	_ret^0,c
  1283   002ED4                     l7313:
  1284                           
  1285                           ;main.c: 123:     {;main.c: 129:         ret = convert_uint16_to_string(Password, Passwo
      +                          rd_text);
  1286   002ED4  C053  F095         	movff	_Password,convert_uint16_to_string@value
  1287   002ED8  C054  F096         	movff	_Password+1,convert_uint16_to_string@value+1
  1288   002EDC  0EDE               	movlw	low _Password_text
  1289   002EDE  0100               	movlb	0	; () banked
  1290   002EE0  6F97               	movwf	convert_uint16_to_string@str& (0+255),b
  1291   002EE2  EC4E  F01E         	call	_convert_uint16_to_string	;wreg free
  1292   002EE6  6E57               	movwf	_ret^0,c
  1293   002EE8                     
  1294                           ;main.c: 130:         ret = lcd_4bit_send_string_data_pos(&lcd1, 1, 1, Password_text);
  1295   002EE8  0EC6               	movlw	low _lcd1
  1296   002EEA  6E19               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1297   002EEC  0E01               	movlw	1
  1298   002EEE  6E1A               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1299   002EF0  0E01               	movlw	1
  1300   002EF2  6E1B               	movwf	lcd_4bit_send_string_data_pos@coulmn^0,c
  1301   002EF4  0EDE               	movlw	low _Password_text
  1302   002EF6  6E1C               	movwf	lcd_4bit_send_string_data_pos@str_data^0,c
  1303   002EF8  6A1D               	clrf	(lcd_4bit_send_string_data_pos@str_data+1)^0,c
  1304   002EFA  EC8D  F020         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1305   002EFE  6E57               	movwf	_ret^0,c
  1306   002F00                     
  1307                           ;main.c: 132:         if (2222 == Password)
  1308   002F00  0EAE               	movlw	174
  1309   002F02  1853               	xorwf	_Password^0,w,c
  1310   002F04  E107               	bnz	u7981
  1311   002F06  0E08               	movlw	8
  1312   002F08  1854               	xorwf	(_Password+1)^0,w,c
  1313   002F0A  A4D8               	btfss	status,2,c
  1314   002F0C  EF8A  F017         	goto	u7981
  1315   002F10  EF8C  F017         	goto	u7980
  1316   002F14                     u7981:
  1317   002F14  EF6A  F017         	goto	l7313
  1318   002F18                     u7980:
  1319   002F18                     
  1320                           ;main.c: 133:         {;main.c: 134:             ret = led_on(&led_1);
  1321   002F18  0E58               	movlw	low _led_1
  1322   002F1A  6E09               	movwf	led_on@led^0,c
  1323   002F1C  ECDB  F01E         	call	_led_on	;wreg free
  1324   002F20  6E57               	movwf	_ret^0,c
  1325   002F22  EF6A  F017         	goto	l7313
  1326   002F26  EF00  F000         	goto	start
  1327   002F2A                     __end_of_main:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function _led_on *****************
  1331 ;; Defined at:
  1332 ;;		line 51 in file "ECU/LED/ecu_led.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  led             1    8[COMRAM] PTR const struct .
  1335 ;;		 -> led_1(1), 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  pin_obj         1   11[COMRAM] struct .
  1338 ;;  ret             1   10[COMRAM] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      unsigned char 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1348 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;Total ram usage:        4 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 1
  1355 ;; This function calls:
  1356 ;;		_gpio_pin_write_logic
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text1
  1363   003DB6                     __ptext1:
  1364                           	callstack 0
  1365   003DB6                     _led_on:
  1366                           	callstack 29
  1367   003DB6                     
  1368                           ;ECU/LED/ecu_led.c: 56:     if(((void*)0) == led)
  1369   003DB6  5009               	movf	led_on@led^0,w,c
  1370   003DB8  A4D8               	btfss	status,2,c
  1371   003DBA  EFE1  F01E         	goto	u5671
  1372   003DBE  EFE3  F01E         	goto	u5670
  1373   003DC2                     u5671:
  1374   003DC2  EFE7  F01E         	goto	l5593
  1375   003DC6                     u5670:
  1376   003DC6                     
  1377                           ;ECU/LED/ecu_led.c: 57:     {;ECU/LED/ecu_led.c: 58:         ret = (Std_ReturnType)0X00;
  1378   003DC6  0E00               	movlw	0
  1379   003DC8  6E0B               	movwf	led_on@ret^0,c
  1380                           
  1381                           ;ECU/LED/ecu_led.c: 59:     }
  1382   003DCA  EF10  F01F         	goto	l5601
  1383   003DCE                     l5593:
  1384                           
  1385                           ;ECU/LED/ecu_led.c: 61:     {;ECU/LED/ecu_led.c: 62:         pin_config_t pin_obj;;ECU/L
      +                          ED/ecu_led.c: 63:         pin_obj.Port = led->port_name;
  1386   003DCE  5009               	movf	led_on@led^0,w,c
  1387   003DD0  6ED9               	movwf	fsr2l,c
  1388   003DD2  6ADA               	clrf	fsr2h,c
  1389   003DD4  50DF               	movf	223,w,c
  1390   003DD6  0B0F               	andlw	15
  1391   003DD8  6E0A               	movwf	??_led_on^0,c
  1392   003DDA  460A               	rlncf	??_led_on^0,f,c
  1393   003DDC  460A               	rlncf	??_led_on^0,f,c
  1394   003DDE  460A               	rlncf	??_led_on^0,f,c
  1395   003DE0  500C               	movf	led_on@pin_obj^0,w,c
  1396   003DE2  180A               	xorwf	??_led_on^0,w,c
  1397   003DE4  0BC7               	andlw	-57
  1398   003DE6  180A               	xorwf	??_led_on^0,w,c
  1399   003DE8  6E0C               	movwf	led_on@pin_obj^0,c
  1400                           
  1401                           ;ECU/LED/ecu_led.c: 64:         pin_obj.Pin = led->pin_name;
  1402   003DEA  5009               	movf	led_on@led^0,w,c
  1403   003DEC  6ED9               	movwf	fsr2l,c
  1404   003DEE  6ADA               	clrf	fsr2h,c
  1405   003DF0  38DF               	swapf	223,w,c
  1406   003DF2  0B07               	andlw	7
  1407   003DF4  6E0A               	movwf	??_led_on^0,c
  1408   003DF6  500C               	movf	led_on@pin_obj^0,w,c
  1409   003DF8  180A               	xorwf	??_led_on^0,w,c
  1410   003DFA  0BF8               	andlw	-8
  1411   003DFC  180A               	xorwf	??_led_on^0,w,c
  1412   003DFE  6E0C               	movwf	led_on@pin_obj^0,c
  1413   003E00                     
  1414                           ;ECU/LED/ecu_led.c: 65:         pin_obj.Logic = led->led_state;
  1415   003E00  5009               	movf	led_on@led^0,w,c
  1416   003E02  6ED9               	movwf	fsr2l,c
  1417   003E04  6ADA               	clrf	fsr2h,c
  1418   003E06  AEDF               	btfss	indf2,7,c
  1419   003E08  D002               	bra	u5685
  1420   003E0A  8C0C               	bsf	led_on@pin_obj^0,6,c
  1421   003E0C  D001               	bra	u5687
  1422   003E0E                     u5685:
  1423   003E0E  9C0C               	bcf	led_on@pin_obj^0,6,c
  1424   003E10                     u5687:
  1425   003E10                     
  1426                           ;ECU/LED/ecu_led.c: 66:         pin_obj.Direction = GPIO_OUTPUT;
  1427   003E10  9E0C               	bcf	led_on@pin_obj^0,7,c
  1428   003E12                     
  1429                           ;ECU/LED/ecu_led.c: 68:         ret = gpio_pin_write_logic(&pin_obj,GPIO_HIGH);
  1430   003E12  0E0C               	movlw	low led_on@pin_obj
  1431   003E14  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  1432   003E16  0E01               	movlw	1
  1433   003E18  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  1434   003E1A  EC95  F017         	call	_gpio_pin_write_logic	;wreg free
  1435   003E1E  6E0B               	movwf	led_on@ret^0,c
  1436   003E20                     l5601:
  1437                           
  1438                           ;ECU/LED/ecu_led.c: 73:     return ret;
  1439   003E20  500B               	movf	led_on@ret^0,w,c
  1440   003E22  0012               	return		;funcret
  1441   003E24                     __end_of_led_on:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function _convert_uint16_to_string *****************
  1445 ;; Defined at:
  1446 ;;		line 691 in file "ECU/LCD/ecu_chr_lcd.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  value           2   53[BANK0 ] unsigned short 
  1449 ;;  str             1   55[BANK0 ] PTR unsigned char 
  1450 ;;		 -> Password_text(6), 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  temp_str        6   56[BANK0 ] unsigned char [6]
  1453 ;;  Data_Counter    1   63[BANK0 ] unsigned char 
  1454 ;;  Ret             1   62[BANK0 ] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      unsigned char 
  1457 ;; Registers used:
  1458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1464 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;Total ram usage:       11 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 8
  1471 ;; This function calls:
  1472 ;;		_memset
  1473 ;;		_sprintf
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text2
  1480   003C9C                     __ptext2:
  1481                           	callstack 0
  1482   003C9C                     _convert_uint16_to_string:
  1483                           	callstack 22
  1484   003C9C                     
  1485                           ;ECU/LCD/ecu_chr_lcd.c: 691: Std_ReturnType convert_uint16_to_string(uint16 value, uint8
      +                          * str);ECU/LCD/ecu_chr_lcd.c: 692: {;ECU/LCD/ecu_chr_lcd.c: 694:  Std_ReturnType Ret = (
      +                          Std_ReturnType)0X01;
  1486   003C9C  0E01               	movlw	1
  1487   003C9E  0100               	movlb	0	; () banked
  1488   003CA0  6F9E               	movwf	convert_uint16_to_string@Ret& (0+255),b
  1489                           
  1490                           ;ECU/LCD/ecu_chr_lcd.c: 696:     if( ((void*)0) == str )
  1491   003CA2  5197               	movf	convert_uint16_to_string@str& (0+255),w,b
  1492   003CA4  A4D8               	btfss	status,2,c
  1493   003CA6  EF57  F01E         	goto	u7871
  1494   003CAA  EF59  F01E         	goto	u7870
  1495   003CAE                     u7871:
  1496   003CAE  EF5D  F01E         	goto	l7183
  1497   003CB2                     u7870:
  1498   003CB2                     
  1499                           ; BSR set to: 0
  1500                           ;ECU/LCD/ecu_chr_lcd.c: 697:     {;ECU/LCD/ecu_chr_lcd.c: 698:         Ret = (Std_Return
      +                          Type)0X00;
  1501   003CB2  0E00               	movlw	0
  1502   003CB4  6F9E               	movwf	convert_uint16_to_string@Ret& (0+255),b
  1503                           
  1504                           ;ECU/LCD/ecu_chr_lcd.c: 699:     }
  1505   003CB6  EF9C  F01E         	goto	l7199
  1506   003CBA                     l7183:
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;ECU/LCD/ecu_chr_lcd.c: 702:     {;ECU/LCD/ecu_chr_lcd.c: 703:   uint8 temp_str[6] = {0}
      +                          ;
  1510   003CBA  EE20  F098         	lfsr	2,convert_uint16_to_string@temp_str
  1511   003CBE  0E05               	movlw	5
  1512   003CC0                     u7881:
  1513   003CC0  6ADE               	clrf	postinc2,c
  1514   003CC2  06E8               	decf	wreg,f,c
  1515   003CC4  E2FD               	bc	u7881
  1516   003CC6                     
  1517                           ; BSR set to: 0
  1518                           ;ECU/LCD/ecu_chr_lcd.c: 704:   uint8 Data_Counter =0;
  1519   003CC6  0E00               	movlw	0
  1520   003CC8  6F9F               	movwf	convert_uint16_to_string@Data_Counter& (0+255),b
  1521   003CCA                     
  1522                           ; BSR set to: 0
  1523                           ;ECU/LCD/ecu_chr_lcd.c: 706:   memset(str, ' ', 5);
  1524   003CCA  C097  F001         	movff	convert_uint16_to_string@str,memset@dest
  1525   003CCE  0E00               	movlw	0
  1526   003CD0  6E03               	movwf	(memset@c+1)^0,c
  1527   003CD2  0E20               	movlw	32
  1528   003CD4  6E02               	movwf	memset@c^0,c
  1529   003CD6  0E00               	movlw	0
  1530   003CD8  6E05               	movwf	(memset@n+1)^0,c
  1531   003CDA  0E05               	movlw	5
  1532   003CDC  6E04               	movwf	memset@n^0,c
  1533   003CDE  EC26  F022         	call	_memset	;wreg free
  1534   003CE2                     
  1535                           ;ECU/LCD/ecu_chr_lcd.c: 707:   str[5] = '\0';
  1536   003CE2  0100               	movlb	0	; () banked
  1537   003CE4  5197               	movf	convert_uint16_to_string@str& (0+255),w,b
  1538   003CE6  6ED9               	movwf	fsr2l,c
  1539   003CE8  6ADA               	clrf	fsr2h,c
  1540   003CEA  0E05               	movlw	5
  1541   003CEC  26D9               	addwf	fsr2l,f,c
  1542   003CEE  6ADF               	clrf	indf2,c
  1543   003CF0                     
  1544                           ; BSR set to: 0
  1545                           ;ECU/LCD/ecu_chr_lcd.c: 709:   sprintf(temp_str, "%i", value);
  1546   003CF0  0E98               	movlw	low convert_uint16_to_string@temp_str
  1547   003CF2  6F8F               	movwf	sprintf@s& (0+255),b
  1548   003CF4  0E3F               	movlw	low STR_1
  1549   003CF6  6F90               	movwf	sprintf@fmt& (0+255),b
  1550   003CF8  C095  F091         	movff	convert_uint16_to_string@value,?_sprintf+2
  1551   003CFC  C096  F092         	movff	convert_uint16_to_string@value+1,?_sprintf+3
  1552   003D00  ECBC  F021         	call	_sprintf	;wreg free
  1553                           
  1554                           ;ECU/LCD/ecu_chr_lcd.c: 711:   while(temp_str[Data_Counter] != '\0')
  1555   003D04  EF8F  F01E         	goto	l7197
  1556   003D08                     l7193:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;ECU/LCD/ecu_chr_lcd.c: 712:   {;ECU/LCD/ecu_chr_lcd.c: 713:    str[Data_Counter] = temp
      +                          _str[Data_Counter];
  1560   003D08  519F               	movf	convert_uint16_to_string@Data_Counter& (0+255),w,b
  1561   003D0A  0F98               	addlw	low convert_uint16_to_string@temp_str
  1562   003D0C  6ED9               	movwf	fsr2l,c
  1563   003D0E  6ADA               	clrf	fsr2h,c
  1564   003D10  5197               	movf	convert_uint16_to_string@str& (0+255),w,b
  1565   003D12  259F               	addwf	convert_uint16_to_string@Data_Counter& (0+255),w,b
  1566   003D14  6EE1               	movwf	fsr1l,c
  1567   003D16  6AE2               	clrf	fsr1h,c
  1568   003D18  CFDF FFE7          	movff	indf2,indf1
  1569   003D1C                     
  1570                           ; BSR set to: 0
  1571                           ;ECU/LCD/ecu_chr_lcd.c: 715:    Data_Counter++;
  1572   003D1C  2B9F               	incf	convert_uint16_to_string@Data_Counter& (0+255),f,b
  1573   003D1E                     l7197:
  1574                           
  1575                           ;ECU/LCD/ecu_chr_lcd.c: 711:   while(temp_str[Data_Counter] != '\0')
  1576   003D1E  0100               	movlb	0	; () banked
  1577   003D20  519F               	movf	convert_uint16_to_string@Data_Counter& (0+255),w,b
  1578   003D22  0F98               	addlw	low convert_uint16_to_string@temp_str
  1579   003D24  6ED9               	movwf	fsr2l,c
  1580   003D26  6ADA               	clrf	fsr2h,c
  1581   003D28  50DF               	movf	indf2,w,c
  1582   003D2A  A4D8               	btfss	status,2,c
  1583   003D2C  EF9A  F01E         	goto	u7891
  1584   003D30  EF9C  F01E         	goto	u7890
  1585   003D34                     u7891:
  1586   003D34  EF84  F01E         	goto	l7193
  1587   003D38                     u7890:
  1588   003D38                     l7199:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;ECU/LCD/ecu_chr_lcd.c: 720:  return Ret;
  1592   003D38  519E               	movf	convert_uint16_to_string@Ret& (0+255),w,b
  1593   003D3A                     
  1594                           ; BSR set to: 0
  1595   003D3A  0012               	return		;funcret
  1596   003D3C                     __end_of_convert_uint16_to_string:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _sprintf *****************
  1600 ;; Defined at:
  1601 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  s               1   47[BANK0 ] PTR unsigned char 
  1604 ;;		 -> convert_uint16_to_string@temp_str(6), 
  1605 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  1606 ;;		 -> STR_5(5), STR_4(5), STR_3(3), STR_2(3), 
  1607 ;;		 -> STR_1(3), 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  f              12   66[COMRAM] struct _IO_FILE
  1610 ;;  ret             2    0        int 
  1611 ;;  ap              1   65[COMRAM] PTR void [1]
  1612 ;;		 -> ?_sprintf(2), 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  2   47[BANK0 ] int 
  1615 ;; Registers used:
  1616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1622 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Totals:        13       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;Total ram usage:       19 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 7
  1629 ;; This function calls:
  1630 ;;		_vfprintf
  1631 ;; This function is called by:
  1632 ;;		_convert_uint16_to_string
  1633 ;;		_convert_uint8_to_string
  1634 ;;		_convert_uint32_to_string
  1635 ;;		_convert_float32_to_string
  1636 ;;		_convert_float64_to_string
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text3
  1641   004378                     __ptext3:
  1642                           	callstack 0
  1643   004378                     _sprintf:
  1644                           	callstack 22
  1645   004378  0E91               	movlw	low (?_sprintf+2)
  1646   00437A  6E42               	movwf	sprintf@ap^0,c
  1647   00437C  C08F  F043         	movff	sprintf@s,sprintf@f
  1648   004380  0E00               	movlw	0
  1649   004382  6E47               	movwf	(sprintf@f+4)^0,c
  1650   004384  0E00               	movlw	0
  1651   004386  6E46               	movwf	(sprintf@f+3)^0,c
  1652   004388  0E00               	movlw	0
  1653   00438A  6E4E               	movwf	(sprintf@f+11)^0,c
  1654   00438C  0E00               	movlw	0
  1655   00438E  6E4D               	movwf	(sprintf@f+10)^0,c
  1656   004390  0E43               	movlw	low sprintf@f
  1657   004392  0100               	movlb	0	; () banked
  1658   004394  6F8C               	movwf	vfprintf@fp& (0+255),b
  1659   004396  C090  F08D         	movff	sprintf@fmt,vfprintf@fmt
  1660   00439A  0E42               	movlw	low sprintf@ap
  1661   00439C  6F8E               	movwf	vfprintf@ap& (0+255),b
  1662   00439E  EC42  F021         	call	_vfprintf	;wreg free
  1663   0043A2  0100               	movlb	0	; () banked
  1664   0043A4  518F               	movf	sprintf@s& (0+255),w,b
  1665   0043A6  2446               	addwf	(sprintf@f+3)^0,w,c
  1666   0043A8  6ED9               	movwf	fsr2l,c
  1667   0043AA  6ADA               	clrf	fsr2h,c
  1668   0043AC  6ADF               	clrf	indf2,c
  1669   0043AE                     
  1670                           ; BSR set to: 0
  1671   0043AE  0012               	return		;funcret
  1672   0043B0                     __end_of_sprintf:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _vfprintf *****************
  1676 ;; Defined at:
  1677 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  1680 ;;		 -> sprintf@f(12), 
  1681 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1682 ;;		 -> STR_5(5), STR_4(5), STR_3(3), STR_2(3), 
  1683 ;;		 -> STR_1(3), 
  1684 ;;  ap              1   46[BANK0 ] PTR PTR void 
  1685 ;;		 -> sprintf@ap(1), 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  cfmt            1   64[COMRAM] PTR unsigned char 
  1688 ;;		 -> STR_5(5), STR_4(5), STR_3(3), STR_2(3), 
  1689 ;;		 -> STR_1(3), 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2   44[BANK0 ] int 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1699 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;Total ram usage:        4 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 6
  1706 ;; This function calls:
  1707 ;;		_vfpfcnvrt
  1708 ;; This function is called by:
  1709 ;;		_sprintf
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text4
  1714   004284                     __ptext4:
  1715                           	callstack 0
  1716   004284                     _vfprintf:
  1717                           	callstack 22
  1718   004284                     
  1719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1720   004284  C08D  F041         	movff	vfprintf@fmt,vfprintf@cfmt
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1723   004288  EF4E  F021         	goto	l7153
  1724   00428C                     l7151:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1727   00428C  C08C  F036         	movff	vfprintf@fp,vfpfcnvrt@fp
  1728   004290  0E41               	movlw	low vfprintf@cfmt
  1729   004292  6E37               	movwf	vfpfcnvrt@fmt^0,c
  1730   004294  C08E  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
  1731   004298  EC5B  F013         	call	_vfpfcnvrt	;wreg free
  1732   00429C                     l7153:
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1735   00429C  C041  FFF6         	movff	vfprintf@cfmt,tblptrl
  1736   0042A0                     	if	1	;There is more than 1 active tblptr byte
  1737   0042A0  0E10               	movlw	high __smallconst
  1738   0042A2  6EF7               	movwf	tblptrh,c
  1739   0042A4                     	endif
  1740   0042A4                     	if	0	;tblptru may be non-zero
  1741   0042A4                     	endif
  1742   0042A4                     	if	0	;tblptru may be non-zero
  1743   0042A4                     	endif
  1744   0042A4  0008               	tblrd		*
  1745   0042A6  50F5               	movf	tablat,w,c
  1746   0042A8  0900               	iorlw	0
  1747   0042AA  A4D8               	btfss	status,2,c
  1748   0042AC  EF5A  F021         	goto	u7851
  1749   0042B0  EF5C  F021         	goto	u7850
  1750   0042B4                     u7851:
  1751   0042B4  EF46  F021         	goto	l7151
  1752   0042B8                     u7850:
  1753   0042B8                     
  1754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1755   0042B8  0E00               	movlw	0
  1756   0042BA  0100               	movlb	0	; () banked
  1757   0042BC  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1758   0042BE  0E00               	movlw	0
  1759   0042C0  6F8C               	movwf	?_vfprintf& (0+255),b
  1760   0042C2                     
  1761                           ; BSR set to: 0
  1762   0042C2  0012               	return		;funcret
  1763   0042C4                     __end_of_vfprintf:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _vfpfcnvrt *****************
  1767 ;; Defined at:
  1768 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  fp              1   53[COMRAM] PTR struct _IO_FILE
  1771 ;;		 -> sprintf@f(12), 
  1772 ;;  fmt             1   54[COMRAM] PTR PTR unsigned char 
  1773 ;;		 -> vfprintf@cfmt(1), 
  1774 ;;  ap              1   55[COMRAM] PTR PTR void 
  1775 ;;		 -> sprintf@ap(1), 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  convarg         4   58[COMRAM] struct .
  1778 ;;  cp              1   63[COMRAM] PTR unsigned char 
  1779 ;;		 -> STR_5(5), STR_4(5), STR_3(3), STR_2(3), 
  1780 ;;		 -> STR_1(3), 
  1781 ;;  c               1   62[COMRAM] unsigned char 
  1782 ;;  done            1    0        _Bool 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1792 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;Total ram usage:       11 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 5
  1799 ;; This function calls:
  1800 ;;		_dtoa
  1801 ;;		_efgtoa
  1802 ;;		_fputc
  1803 ;;		_read_prec_or_width
  1804 ;; This function is called by:
  1805 ;;		_vfprintf
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text5
  1810   0026B6                     __ptext5:
  1811                           	callstack 0
  1812   0026B6                     _vfpfcnvrt:
  1813                           	callstack 22
  1814   0026B6                     
  1815                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1816   0026B6  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1817   0026B8  6ED9               	movwf	fsr2l,c
  1818   0026BA  6ADA               	clrf	fsr2h,c
  1819   0026BC  CFDF FFF6          	movff	indf2,tblptrl
  1820   0026C0                     	if	1	;There is more than 1 active tblptr byte
  1821   0026C0  0E10               	movlw	high __smallconst
  1822   0026C2  6EF7               	movwf	tblptrh,c
  1823   0026C4                     	endif
  1824   0026C4                     	if	0	;tblptru may be non-zero
  1825   0026C4                     	endif
  1826   0026C4                     	if	0	;tblptru may be non-zero
  1827   0026C4                     	endif
  1828   0026C4  0008               	tblrd		*
  1829   0026C6  50F5               	movf	tablat,w,c
  1830   0026C8  0A25               	xorlw	37
  1831   0026CA  A4D8               	btfss	status,2,c
  1832   0026CC  EF6A  F013         	goto	u7801
  1833   0026D0  EF6C  F013         	goto	u7800
  1834   0026D4                     u7801:
  1835   0026D4  EF8A  F014         	goto	l7131
  1836   0026D8                     u7800:
  1837   0026D8                     
  1838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1839   0026D8  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1840   0026DA  6ED9               	movwf	fsr2l,c
  1841   0026DC  6ADA               	clrf	fsr2h,c
  1842   0026DE  2ADF               	incf	indf2,f,c
  1843   0026E0                     
  1844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1845   0026E0  0E00               	movlw	0
  1846   0026E2  6E50               	movwf	(_width+1)^0,c
  1847   0026E4  0E00               	movlw	0
  1848   0026E6  6E4F               	movwf	_width^0,c
  1849   0026E8  C04F  F055         	movff	_width,_flags
  1850   0026EC                     
  1851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1852   0026EC  6851               	setf	_prec^0,c
  1853   0026EE  6852               	setf	(_prec+1)^0,c
  1854   0026F0                     
  1855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1856   0026F0  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1857   0026F2  6ED9               	movwf	fsr2l,c
  1858   0026F4  6ADA               	clrf	fsr2h,c
  1859   0026F6  CFDF FFF6          	movff	indf2,tblptrl
  1860   0026FA                     	if	1	;There is more than 1 active tblptr byte
  1861   0026FA  0E10               	movlw	high __smallconst
  1862   0026FC  6EF7               	movwf	tblptrh,c
  1863   0026FE                     	endif
  1864   0026FE                     	if	0	;tblptru may be non-zero
  1865   0026FE                     	endif
  1866   0026FE                     	if	0	;tblptru may be non-zero
  1867   0026FE                     	endif
  1868   0026FE  0008               	tblrd		*
  1869   002700  50F5               	movf	tablat,w,c
  1870   002702  0A2E               	xorlw	46
  1871   002704  A4D8               	btfss	status,2,c
  1872   002706  EF87  F013         	goto	u7811
  1873   00270A  EF89  F013         	goto	u7810
  1874   00270E                     u7811:
  1875   00270E  EF97  F013         	goto	l7079
  1876   002712                     u7810:
  1877   002712                     
  1878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1879   002712  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1880   002714  6ED9               	movwf	fsr2l,c
  1881   002716  6ADA               	clrf	fsr2h,c
  1882   002718  2ADF               	incf	indf2,f,c
  1883   00271A                     
  1884                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1885   00271A  C037  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1886   00271E  C038  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1887   002722  ECFB  F01D         	call	_read_prec_or_width	;wreg free
  1888   002726  C007  F051         	movff	?_read_prec_or_width,_prec
  1889   00272A  C008  F052         	movff	?_read_prec_or_width+1,_prec+1
  1890   00272E                     l7079:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1893   00272E  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1894   002730  6ED9               	movwf	fsr2l,c
  1895   002732  6ADA               	clrf	fsr2h,c
  1896   002734  50DF               	movf	indf2,w,c
  1897   002736  6E40               	movwf	vfpfcnvrt@cp^0,c
  1898   002738                     
  1899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1900   002738  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1901   00273C                     	if	1	;There is more than 1 active tblptr byte
  1902   00273C  0E10               	movlw	high __smallconst
  1903   00273E  6EF7               	movwf	tblptrh,c
  1904   002740                     	endif
  1905   002740                     	if	0	;tblptru may be non-zero
  1906   002740                     	endif
  1907   002740                     	if	0	;tblptru may be non-zero
  1908   002740                     	endif
  1909   002740  0008               	tblrd		*
  1910   002742  50F5               	movf	tablat,w,c
  1911   002744  0A64               	xorlw	100
  1912   002746  B4D8               	btfsc	status,2,c
  1913   002748  EFA8  F013         	goto	u7821
  1914   00274C  EFAA  F013         	goto	u7820
  1915   002750                     u7821:
  1916   002750  EFB8  F013         	goto	l7085
  1917   002754                     u7820:
  1918   002754  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1919   002758                     	if	1	;There is more than 1 active tblptr byte
  1920   002758  0E10               	movlw	high __smallconst
  1921   00275A  6EF7               	movwf	tblptrh,c
  1922   00275C                     	endif
  1923   00275C                     	if	0	;tblptru may be non-zero
  1924   00275C                     	endif
  1925   00275C                     	if	0	;tblptru may be non-zero
  1926   00275C                     	endif
  1927   00275C  0008               	tblrd		*
  1928   00275E  50F5               	movf	tablat,w,c
  1929   002760  0A69               	xorlw	105
  1930   002762  A4D8               	btfss	status,2,c
  1931   002764  EFB6  F013         	goto	u7831
  1932   002768  EFB8  F013         	goto	u7830
  1933   00276C                     u7831:
  1934   00276C  EFD3  F013         	goto	l7093
  1935   002770                     u7830:
  1936   002770                     l7085:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1939   002770  5038               	movf	vfpfcnvrt@ap^0,w,c
  1940   002772  6ED9               	movwf	fsr2l,c
  1941   002774  6ADA               	clrf	fsr2h,c
  1942   002776  0E02               	movlw	2
  1943   002778  26DF               	addwf	indf2,f,c
  1944   00277A  5CDF               	subwf	indf2,w,c
  1945   00277C  6ED9               	movwf	fsr2l,c
  1946   00277E  6ADA               	clrf	fsr2h,c
  1947   002780  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg
  1948   002784  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg+1
  1949   002788                     
  1950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1951   002788  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1952   00278A  6ED9               	movwf	fsr2l,c
  1953   00278C  6ADA               	clrf	fsr2h,c
  1954   00278E  2840               	incf	vfpfcnvrt@cp^0,w,c
  1955   002790  6EDF               	movwf	indf2,c
  1956   002792                     
  1957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1958   002792  C036  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  1959   002796  C03B  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  1960   00279A  C03C  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1961   00279E  ECA5  F015         	call	_dtoa	;wreg free
  1962   0027A2  EF9B  F014         	goto	l1382
  1963   0027A6                     l7093:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1966   0027A6  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1967   0027A8  6ED9               	movwf	fsr2l,c
  1968   0027AA  6ADA               	clrf	fsr2h,c
  1969   0027AC  50DF               	movf	indf2,w,c
  1970   0027AE  6E40               	movwf	vfpfcnvrt@cp^0,c
  1971   0027B0                     
  1972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1973   0027B0  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1974   0027B4                     	if	1	;There is more than 1 active tblptr byte
  1975   0027B4  0E10               	movlw	high __smallconst
  1976   0027B6  6EF7               	movwf	tblptrh,c
  1977   0027B8                     	endif
  1978   0027B8                     	if	0	;tblptru may be non-zero
  1979   0027B8                     	endif
  1980   0027B8                     	if	0	;tblptru may be non-zero
  1981   0027B8                     	endif
  1982   0027B8  0008               	tblrd		*
  1983   0027BA  CFF5 F03F          	movff	tablat,vfpfcnvrt@c
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1986   0027BE  EFEC  F013         	goto	l7105
  1987   0027C2                     l7097:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  1990   0027C2  2A40               	incf	vfpfcnvrt@cp^0,f,c
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  1993   0027C4  EF05  F014         	goto	l7107
  1994   0027C8                     l7099:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  1997   0027C8  0E6C               	movlw	108
  1998   0027CA  6E3F               	movwf	vfpfcnvrt@c^0,c
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  2001   0027CC  EF05  F014         	goto	l7107
  2002   0027D0                     l7101:
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2005   0027D0  0E00               	movlw	0
  2006   0027D2  6E3F               	movwf	vfpfcnvrt@c^0,c
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  2009   0027D4  EF05  F014         	goto	l7107
  2010   0027D8                     l7105:
  2011   0027D8  503F               	movf	vfpfcnvrt@c^0,w,c
  2012   0027DA  6E39               	movwf	??_vfpfcnvrt^0,c
  2013   0027DC  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  2014                           
  2015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2016                           ; Switch size 1, requested type "simple"
  2017                           ; Number of cases is 1, Range of values is 0 to 0
  2018                           ; switch strategies available:
  2019                           ; Name         Instructions Cycles
  2020                           ; simple_byte            4     3 (average)
  2021                           ;	Chosen strategy is simple_byte
  2022   0027DE  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2023   0027E0  0A00               	xorlw	0	; case 0
  2024   0027E2  B4D8               	btfsc	status,2,c
  2025   0027E4  EFF6  F013         	goto	l7421
  2026   0027E8  EFE8  F013         	goto	l7101
  2027   0027EC                     l7421:
  2028                           
  2029                           ; Switch size 1, requested type "simple"
  2030                           ; Number of cases is 3, Range of values is 76 to 108
  2031                           ; switch strategies available:
  2032                           ; Name         Instructions Cycles
  2033                           ; simple_byte           10     6 (average)
  2034                           ;	Chosen strategy is simple_byte
  2035   0027EC  5039               	movf	??_vfpfcnvrt^0,w,c
  2036   0027EE  0A4C               	xorlw	76	; case 76
  2037   0027F0  B4D8               	btfsc	status,2,c
  2038   0027F2  EFE1  F013         	goto	l7097
  2039   0027F6  0A2A               	xorlw	42	; case 102
  2040   0027F8  B4D8               	btfsc	status,2,c
  2041   0027FA  EFE4  F013         	goto	l7099
  2042   0027FE  0A0A               	xorlw	10	; case 108
  2043   002800  B4D8               	btfsc	status,2,c
  2044   002802  EFE1  F013         	goto	l7097
  2045   002806  EFE8  F013         	goto	l7101
  2046   00280A                     l7107:
  2047   00280A  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2048   00280E                     	if	1	;There is more than 1 active tblptr byte
  2049   00280E  0E10               	movlw	high __smallconst
  2050   002810  6EF7               	movwf	tblptrh,c
  2051   002812                     	endif
  2052   002812                     	if	0	;tblptru may be non-zero
  2053   002812                     	endif
  2054   002812                     	if	0	;tblptru may be non-zero
  2055   002812                     	endif
  2056   002812  0008               	tblrd		*
  2057   002814  50F5               	movf	tablat,w,c
  2058   002816  0A66               	xorlw	102
  2059   002818  A4D8               	btfss	status,2,c
  2060   00281A  EF11  F014         	goto	u7841
  2061   00281E  EF13  F014         	goto	u7840
  2062   002822                     u7841:
  2063   002822  EF84  F014         	goto	l7127
  2064   002826                     u7840:
  2065   002826  EF3D  F014         	goto	l7115
  2066   00282A                     l7109:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2069   00282A  5038               	movf	vfpfcnvrt@ap^0,w,c
  2070   00282C  6ED9               	movwf	fsr2l,c
  2071   00282E  6ADA               	clrf	fsr2h,c
  2072   002830  CFDF F039          	movff	indf2,??_vfpfcnvrt
  2073   002834  0E04               	movlw	4
  2074   002836  26DF               	addwf	indf2,f,c
  2075   002838  5039               	movf	??_vfpfcnvrt^0,w,c
  2076   00283A  6ED9               	movwf	fsr2l,c
  2077   00283C  6ADA               	clrf	fsr2h,c
  2078   00283E  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg
  2079   002842  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg+1
  2080   002846  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+2
  2081   00284A  CFDE F03E          	movff	postinc2,vfpfcnvrt@convarg+3
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  2084   00284E  EF52  F014         	goto	l7117
  2085   002852                     l7111:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2088   002852  5038               	movf	vfpfcnvrt@ap^0,w,c
  2089   002854  6ED9               	movwf	fsr2l,c
  2090   002856  6ADA               	clrf	fsr2h,c
  2091   002858  CFDF F039          	movff	indf2,??_vfpfcnvrt
  2092   00285C  0E04               	movlw	4
  2093   00285E  26DF               	addwf	indf2,f,c
  2094   002860  5039               	movf	??_vfpfcnvrt^0,w,c
  2095   002862  6ED9               	movwf	fsr2l,c
  2096   002864  6ADA               	clrf	fsr2h,c
  2097   002866  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg
  2098   00286A  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg+1
  2099   00286E  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+2
  2100   002872  CFDE F03E          	movff	postinc2,vfpfcnvrt@convarg+3
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  2103   002876  EF52  F014         	goto	l7117
  2104   00287A                     l7115:
  2105   00287A  503F               	movf	vfpfcnvrt@c^0,w,c
  2106   00287C  6E39               	movwf	??_vfpfcnvrt^0,c
  2107   00287E  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  2108                           
  2109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2110                           ; Switch size 1, requested type "simple"
  2111                           ; Number of cases is 1, Range of values is 0 to 0
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte            4     3 (average)
  2115                           ;	Chosen strategy is simple_byte
  2116   002880  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2117   002882  0A00               	xorlw	0	; case 0
  2118   002884  B4D8               	btfsc	status,2,c
  2119   002886  EF47  F014         	goto	l7423
  2120   00288A  EF52  F014         	goto	l7117
  2121   00288E                     l7423:
  2122                           
  2123                           ; Switch size 1, requested type "simple"
  2124                           ; Number of cases is 2, Range of values is 76 to 108
  2125                           ; switch strategies available:
  2126                           ; Name         Instructions Cycles
  2127                           ; simple_byte            7     4 (average)
  2128                           ;	Chosen strategy is simple_byte
  2129   00288E  5039               	movf	??_vfpfcnvrt^0,w,c
  2130   002890  0A4C               	xorlw	76	; case 76
  2131   002892  B4D8               	btfsc	status,2,c
  2132   002894  EF29  F014         	goto	l7111
  2133   002898  0A20               	xorlw	32	; case 108
  2134   00289A  B4D8               	btfsc	status,2,c
  2135   00289C  EF15  F014         	goto	l7109
  2136   0028A0  EF52  F014         	goto	l7117
  2137   0028A4                     l7117:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2140   0028A4  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2141   0028A6  6ED9               	movwf	fsr2l,c
  2142   0028A8  6ADA               	clrf	fsr2h,c
  2143   0028AA  2840               	incf	vfpfcnvrt@cp^0,w,c
  2144   0028AC  6EDF               	movwf	indf2,c
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2147   0028AE  EF6E  F014         	goto	l7125
  2148   0028B2                     l7119:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2151   0028B2  C036  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2152   0028B6  C03B  F02F         	movff	vfpfcnvrt@convarg,efgtoa@f
  2153   0028BA  C03C  F030         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2154   0028BE  C03D  F031         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2155   0028C2  C03E  F032         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2156   0028C6  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2157   0028CA                     	if	1	;There is more than 1 active tblptr byte
  2158   0028CA  0E10               	movlw	high __smallconst
  2159   0028CC  6EF7               	movwf	tblptrh,c
  2160   0028CE                     	endif
  2161   0028CE                     	if	0	;tblptru may be non-zero
  2162   0028CE                     	endif
  2163   0028CE                     	if	0	;tblptru may be non-zero
  2164   0028CE                     	endif
  2165   0028CE  0008               	tblrd		*
  2166   0028D0  CFF5 F033          	movff	tablat,efgtoa@c
  2167   0028D4  EC24  F008         	call	_efgtoa	;wreg free
  2168   0028D8  EF9B  F014         	goto	l1382
  2169   0028DC                     l7125:
  2170   0028DC  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2171   0028E0                     	if	1	;There is more than 1 active tblptr byte
  2172   0028E0  0E10               	movlw	high __smallconst
  2173   0028E2  6EF7               	movwf	tblptrh,c
  2174   0028E4                     	endif
  2175   0028E4                     	if	0	;tblptru may be non-zero
  2176   0028E4                     	endif
  2177   0028E4                     	if	0	;tblptru may be non-zero
  2178   0028E4                     	endif
  2179   0028E4  0008               	tblrd		*
  2180   0028E6  50F5               	movf	tablat,w,c
  2181   0028E8  6E39               	movwf	??_vfpfcnvrt^0,c
  2182   0028EA  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  2183                           
  2184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2185                           ; Switch size 1, requested type "simple"
  2186                           ; Number of cases is 1, Range of values is 0 to 0
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte            4     3 (average)
  2190                           ;	Chosen strategy is simple_byte
  2191   0028EC  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2192   0028EE  0A00               	xorlw	0	; case 0
  2193   0028F0  B4D8               	btfsc	status,2,c
  2194   0028F2  EF7D  F014         	goto	l7425
  2195   0028F6  EF84  F014         	goto	l7127
  2196   0028FA                     l7425:
  2197                           
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 1, Range of values is 102 to 102
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte            4     3 (average)
  2203                           ;	Chosen strategy is simple_byte
  2204   0028FA  5039               	movf	??_vfpfcnvrt^0,w,c
  2205   0028FC  0A66               	xorlw	102	; case 102
  2206   0028FE  B4D8               	btfsc	status,2,c
  2207   002900  EF59  F014         	goto	l7119
  2208   002904  EF84  F014         	goto	l7127
  2209   002908                     l7127:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2212   002908  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2213   00290A  6ED9               	movwf	fsr2l,c
  2214   00290C  6ADA               	clrf	fsr2h,c
  2215   00290E  2ADF               	incf	indf2,f,c
  2216   002910  EF9B  F014         	goto	l1382
  2217   002914                     l7131:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2220   002914  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2221   002916  6ED9               	movwf	fsr2l,c
  2222   002918  6ADA               	clrf	fsr2h,c
  2223   00291A  CFDF FFF6          	movff	indf2,tblptrl
  2224   00291E                     	if	1	;There is more than 1 active tblptr byte
  2225   00291E  0E10               	movlw	high __smallconst
  2226   002920  6EF7               	movwf	tblptrh,c
  2227   002922                     	endif
  2228   002922                     	if	0	;tblptru may be non-zero
  2229   002922                     	endif
  2230   002922                     	if	0	;tblptru may be non-zero
  2231   002922                     	endif
  2232   002922  0008               	tblrd		*
  2233   002924  50F5               	movf	tablat,w,c
  2234   002926  6E01               	movwf	fputc@c^0,c
  2235   002928  6A02               	clrf	(fputc@c+1)^0,c
  2236   00292A  C036  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2237   00292E  ECA6  F01D         	call	_fputc	;wreg free
  2238   002932  EF84  F014         	goto	l7127
  2239   002936                     l1382:
  2240   002936  0012               	return		;funcret
  2241   002938                     __end_of_vfpfcnvrt:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _read_prec_or_width *****************
  2245 ;; Defined at:
  2246 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2249 ;;		 -> vfprintf@cfmt(1), 
  2250 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2251 ;;		 -> sprintf@ap(1), 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  c               1    8[COMRAM] unsigned char 
  2254 ;;  n               2    9[COMRAM] int 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  2    6[COMRAM] int 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;Total ram usage:        5 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 1
  2271 ;; This function calls:
  2272 ;;		___wmul
  2273 ;; This function is called by:
  2274 ;;		_vfpfcnvrt
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text6
  2279   003BF6                     __ptext6:
  2280                           	callstack 0
  2281   003BF6                     _read_prec_or_width:
  2282                           	callstack 25
  2283   003BF6                     
  2284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2285   003BF6  0E00               	movlw	0
  2286   003BF8  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2287   003BFA  0E00               	movlw	0
  2288   003BFC  6E0A               	movwf	read_prec_or_width@n^0,c
  2289   003BFE                     
  2290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2291   003BFE  5007               	movf	read_prec_or_width@fmt^0,w,c
  2292   003C00  6ED9               	movwf	fsr2l,c
  2293   003C02  6ADA               	clrf	fsr2h,c
  2294   003C04  CFDF FFF6          	movff	indf2,tblptrl
  2295   003C08                     	if	1	;There is more than 1 active tblptr byte
  2296   003C08  0E10               	movlw	high __smallconst
  2297   003C0A  6EF7               	movwf	tblptrh,c
  2298   003C0C                     	endif
  2299   003C0C                     	if	0	;tblptru may be non-zero
  2300   003C0C                     	endif
  2301   003C0C                     	if	0	;tblptru may be non-zero
  2302   003C0C                     	endif
  2303   003C0C  0008               	tblrd		*
  2304   003C0E  50F5               	movf	tablat,w,c
  2305   003C10  0A2A               	xorlw	42
  2306   003C12  A4D8               	btfss	status,2,c
  2307   003C14  EF0E  F01E         	goto	u7781
  2308   003C18  EF10  F01E         	goto	u7780
  2309   003C1C                     u7781:
  2310   003C1C  EF36  F01E         	goto	l7063
  2311   003C20                     u7780:
  2312   003C20                     
  2313                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2314   003C20  5007               	movf	read_prec_or_width@fmt^0,w,c
  2315   003C22  6ED9               	movwf	fsr2l,c
  2316   003C24  6ADA               	clrf	fsr2h,c
  2317   003C26  2ADF               	incf	indf2,f,c
  2318   003C28                     
  2319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2320   003C28  5008               	movf	read_prec_or_width@ap^0,w,c
  2321   003C2A  6ED9               	movwf	fsr2l,c
  2322   003C2C  6ADA               	clrf	fsr2h,c
  2323   003C2E  0E02               	movlw	2
  2324   003C30  26DF               	addwf	indf2,f,c
  2325   003C32  5CDF               	subwf	indf2,w,c
  2326   003C34  6ED9               	movwf	fsr2l,c
  2327   003C36  6ADA               	clrf	fsr2h,c
  2328   003C38  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2329   003C3C  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2332   003C40  EF49  F01E         	goto	l1370
  2333   003C44                     l7059:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2336   003C44  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2337   003C48  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2338   003C4C  0E00               	movlw	0
  2339   003C4E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2340   003C50  0E0A               	movlw	10
  2341   003C52  6E03               	movwf	___wmul@multiplicand^0,c
  2342   003C54  EC56  F022         	call	___wmul	;wreg free
  2343   003C58  5009               	movf	read_prec_or_width@c^0,w,c
  2344   003C5A  2401               	addwf	?___wmul^0,w,c
  2345   003C5C  6E0A               	movwf	read_prec_or_width@n^0,c
  2346   003C5E  0E00               	movlw	0
  2347   003C60  2002               	addwfc	(?___wmul+1)^0,w,c
  2348   003C62  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2349   003C64                     
  2350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2351   003C64  5007               	movf	read_prec_or_width@fmt^0,w,c
  2352   003C66  6ED9               	movwf	fsr2l,c
  2353   003C68  6ADA               	clrf	fsr2h,c
  2354   003C6A  2ADF               	incf	indf2,f,c
  2355   003C6C                     l7063:
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2358   003C6C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2359   003C6E  6ED9               	movwf	fsr2l,c
  2360   003C70  6ADA               	clrf	fsr2h,c
  2361   003C72  CFDF FFF6          	movff	indf2,tblptrl
  2362   003C76                     	if	1	;There is more than 1 active tblptr byte
  2363   003C76  0E10               	movlw	high __smallconst
  2364   003C78  6EF7               	movwf	tblptrh,c
  2365   003C7A                     	endif
  2366   003C7A                     	if	0	;tblptru may be non-zero
  2367   003C7A                     	endif
  2368   003C7A                     	if	0	;tblptru may be non-zero
  2369   003C7A                     	endif
  2370   003C7A  0008               	tblrd		*
  2371   003C7C  50F5               	movf	tablat,w,c
  2372   003C7E  0FD0               	addlw	208
  2373   003C80  6E09               	movwf	read_prec_or_width@c^0,c
  2374   003C82  0E09               	movlw	9
  2375   003C84  6409               	cpfsgt	read_prec_or_width@c^0,c
  2376   003C86  EF47  F01E         	goto	u7791
  2377   003C8A  EF49  F01E         	goto	u7790
  2378   003C8E                     u7791:
  2379   003C8E  EF22  F01E         	goto	l7059
  2380   003C92                     u7790:
  2381   003C92                     l1370:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2384   003C92  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2385   003C96  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2386   003C9A  0012               	return		;funcret
  2387   003C9C                     __end_of_read_prec_or_width:
  2388                           	callstack 0
  2389                           
  2390 ;; *************** function _efgtoa *****************
  2391 ;; Defined at:
  2392 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
  2395 ;;		 -> sprintf@f(12), 
  2396 ;;  f               4   46[COMRAM] PTR struct _IO_FILE
  2397 ;;  c               1   50[COMRAM] unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  u               4   40[BANK0 ] struct flui
  2400 ;;  g               4   34[BANK0 ] struct flui
  2401 ;;  l               4   29[BANK0 ] struct flui
  2402 ;;  h               4   25[BANK0 ] struct flui
  2403 ;;  ou              4   19[BANK0 ] struct flui
  2404 ;;  n               2   38[BANK0 ] int 
  2405 ;;  i               2   23[BANK0 ] int 
  2406 ;;  w               2   17[BANK0 ] int 
  2407 ;;  e               2   15[BANK0 ] int 
  2408 ;;  m               2   13[BANK0 ] int 
  2409 ;;  d               2   11[BANK0 ] int 
  2410 ;;  t               2    4[BANK0 ] int 
  2411 ;;  p               2    2[BANK0 ] int 
  2412 ;;  ne              2    0[BANK0 ] int 
  2413 ;;  sign            1   33[BANK0 ] unsigned char 
  2414 ;;  nmode           1   10[BANK0 ] unsigned char 
  2415 ;;  mode            1    9[BANK0 ] unsigned char 
  2416 ;;  pp              1    8[BANK0 ] unsigned char 
  2417 ;;  esign           1    0        unsigned char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1    wreg      void 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2427 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;Total ram usage:       52 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; Hardware stack levels required when called: 4
  2434 ;; This function calls:
  2435 ;;		___fladd
  2436 ;;		___fldiv
  2437 ;;		___fleq
  2438 ;;		___flge
  2439 ;;		___flmul
  2440 ;;		___flneg
  2441 ;;		___flsub
  2442 ;;		___fltol
  2443 ;;		___fpclassifyf
  2444 ;;		_floorf
  2445 ;;		_labs
  2446 ;;		_memcpy
  2447 ;;		_pad
  2448 ;;		_strcpy
  2449 ;; This function is called by:
  2450 ;;		_vfpfcnvrt
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text7
  2455   001048                     __ptext7:
  2456                           	callstack 0
  2457   001048                     _efgtoa:
  2458                           	callstack 22
  2459   001048                     
  2460                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2461   001048  0E00               	movlw	0
  2462   00104A  0100               	movlb	0	; () banked
  2463   00104C  6F81               	movwf	efgtoa@sign& (0+255),b
  2464   00104E                     
  2465                           ; BSR set to: 0
  2466                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2467   00104E  C02F  F082         	movff	efgtoa@f,efgtoa@g
  2468   001052  C030  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2469   001056  C031  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2470   00105A  C032  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2471   00105E                     
  2472                           ; BSR set to: 0
  2473                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2474   00105E  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2475   001060  EF36  F008         	goto	u7460
  2476   001064  EF34  F008         	goto	u7461
  2477   001068                     u7461:
  2478   001068  EF4A  F008         	goto	l6839
  2479   00106C                     u7460:
  2480   00106C                     
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2483   00106C  0E01               	movlw	1
  2484   00106E  6F81               	movwf	efgtoa@sign& (0+255),b
  2485   001070                     
  2486                           ; BSR set to: 0
  2487                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2488   001070  C082  F001         	movff	efgtoa@g,___flneg@f1
  2489   001074  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2490   001078  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2491   00107C  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2492   001080  ECD8  F021         	call	___flneg	;wreg free
  2493   001084  C001  F082         	movff	?___flneg,efgtoa@g
  2494   001088  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2495   00108C  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2496   001090  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2497   001094                     l6839:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2500   001094  0E00               	movlw	0
  2501   001096  0100               	movlb	0	; () banked
  2502   001098  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2503   00109A  0E00               	movlw	0
  2504   00109C  6F86               	movwf	efgtoa@n& (0+255),b
  2505   00109E                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2508   00109E  C04F  F071         	movff	_width,efgtoa@w
  2509   0010A2  C050  F072         	movff	_width+1,efgtoa@w+1
  2510   0010A6                     
  2511                           ; BSR set to: 0
  2512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2513   0010A6  5181               	movf	efgtoa@sign& (0+255),w,b
  2514   0010A8  B4D8               	btfsc	status,2,c
  2515   0010AA  EF59  F008         	goto	u7471
  2516   0010AE  EF5B  F008         	goto	u7470
  2517   0010B2                     u7471:
  2518   0010B2  EF6F  F008         	goto	l6853
  2519   0010B6                     u7470:
  2520   0010B6                     
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2523   0010B6  5181               	movf	efgtoa@sign& (0+255),w,b
  2524   0010B8  A4D8               	btfss	status,2,c
  2525   0010BA  EF61  F008         	goto	u7481
  2526   0010BE  EF63  F008         	goto	u7480
  2527   0010C2                     u7481:
  2528   0010C2  EF69  F008         	goto	l6849
  2529   0010C6                     u7480:
  2530   0010C6                     
  2531                           ; BSR set to: 0
  2532   0010C6  0E00               	movlw	0
  2533   0010C8  6F67               	movwf	(_efgtoa$1580+1)& (0+255),b
  2534   0010CA  0E2B               	movlw	43
  2535   0010CC  6F66               	movwf	_efgtoa$1580& (0+255),b
  2536   0010CE  EF6D  F008         	goto	l6851
  2537   0010D2                     l6849:
  2538                           
  2539                           ; BSR set to: 0
  2540   0010D2  0E00               	movlw	0
  2541   0010D4  6F67               	movwf	(_efgtoa$1580+1)& (0+255),b
  2542   0010D6  0E2D               	movlw	45
  2543   0010D8  6F66               	movwf	_efgtoa$1580& (0+255),b
  2544   0010DA                     l6851:
  2545                           
  2546                           ; BSR set to: 0
  2547   0010DA  C066  F081         	movff	_efgtoa$1580,efgtoa@sign
  2548   0010DE                     l6853:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2552   0010DE  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2553   0010E2  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2554   0010E6  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2555   0010EA  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2556   0010EE  ECB3  F019         	call	___fpclassifyf	;wreg free
  2557   0010F2  0401               	decf	?___fpclassifyf^0,w,c
  2558   0010F4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2559   0010F6  A4D8               	btfss	status,2,c
  2560   0010F8  EF80  F008         	goto	u7491
  2561   0010FC  EF82  F008         	goto	u7490
  2562   001100                     u7491:
  2563   001100  EFB1  F008         	goto	l6871
  2564   001104                     u7490:
  2565   001104                     
  2566                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2567   001104  0100               	movlb	0	; () banked
  2568   001106  5181               	movf	efgtoa@sign& (0+255),w,b
  2569   001108  B4D8               	btfsc	status,2,c
  2570   00110A  EF89  F008         	goto	u7501
  2571   00110E  EF8B  F008         	goto	u7500
  2572   001112                     u7501:
  2573   001112  EF94  F008         	goto	l6863
  2574   001116                     u7500:
  2575   001116                     
  2576                           ; BSR set to: 0
  2577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2578   001116  C081  F100         	movff	efgtoa@sign,_dbuf
  2579   00111A                     
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2582   00111A  0771               	decf	efgtoa@w& (0+255),f,b
  2583   00111C  A0D8               	btfss	status,0,c
  2584   00111E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2585   001120                     
  2586                           ; BSR set to: 0
  2587                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2588   001120  0E00               	movlw	0
  2589   001122  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2590   001124  0E01               	movlw	1
  2591   001126  6F86               	movwf	efgtoa@n& (0+255),b
  2592   001128                     l6863:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2596   001128  0E00               	movlw	low _dbuf
  2597   00112A  2586               	addwf	efgtoa@n& (0+255),w,b
  2598   00112C  6E01               	movwf	strcpy@dest^0,c
  2599   00112E  0E01               	movlw	high _dbuf
  2600   001130  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2601   001132  6E02               	movwf	(strcpy@dest+1)^0,c
  2602   001134  0E37               	movlw	low STR_10
  2603   001136  6E03               	movwf	strcpy@src^0,c
  2604   001138  EC82  F021         	call	_strcpy	;wreg free
  2605   00113C                     l6865:
  2606                           
  2607                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2608   00113C  0100               	movlb	0	; () banked
  2609   00113E  0EFD               	movlw	253
  2610   001140  2771               	addwf	efgtoa@w& (0+255),f,b
  2611   001142  0EFF               	movlw	255
  2612   001144  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2613   001146                     
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2616   001146  C02E  F00F         	movff	efgtoa@fp,pad@fp
  2617   00114A  0E00               	movlw	low _dbuf
  2618   00114C  6E10               	movwf	pad@buf^0,c
  2619   00114E  0E01               	movlw	high _dbuf
  2620   001150  6E11               	movwf	(pad@buf+1)^0,c
  2621   001152  C071  F012         	movff	efgtoa@w,pad@p
  2622   001156  C072  F013         	movff	efgtoa@w+1,pad@p+1
  2623   00115A  EC47  F01F         	call	_pad	;wreg free
  2624   00115E  EF18  F00D         	goto	l1325
  2625   001162                     l6871:
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2628   001162  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2629   001166  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2630   00116A  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2631   00116E  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2632   001172  ECB3  F019         	call	___fpclassifyf	;wreg free
  2633   001176  5001               	movf	?___fpclassifyf^0,w,c
  2634   001178  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2635   00117A  A4D8               	btfss	status,2,c
  2636   00117C  EFC2  F008         	goto	u7511
  2637   001180  EFC4  F008         	goto	u7510
  2638   001184                     u7511:
  2639   001184  EFE2  F008         	goto	l6889
  2640   001188                     u7510:
  2641   001188                     
  2642                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2643   001188  0100               	movlb	0	; () banked
  2644   00118A  5181               	movf	efgtoa@sign& (0+255),w,b
  2645   00118C  B4D8               	btfsc	status,2,c
  2646   00118E  EFCB  F008         	goto	u7521
  2647   001192  EFCD  F008         	goto	u7520
  2648   001196                     u7521:
  2649   001196  EFD6  F008         	goto	l6881
  2650   00119A                     u7520:
  2651   00119A                     
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2654   00119A  C081  F100         	movff	efgtoa@sign,_dbuf
  2655   00119E                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2658   00119E  0771               	decf	efgtoa@w& (0+255),f,b
  2659   0011A0  A0D8               	btfss	status,0,c
  2660   0011A2  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2661   0011A4                     
  2662                           ; BSR set to: 0
  2663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2664   0011A4  0E00               	movlw	0
  2665   0011A6  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2666   0011A8  0E01               	movlw	1
  2667   0011AA  6F86               	movwf	efgtoa@n& (0+255),b
  2668   0011AC                     l6881:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2672   0011AC  0E00               	movlw	low _dbuf
  2673   0011AE  2586               	addwf	efgtoa@n& (0+255),w,b
  2674   0011B0  6E01               	movwf	strcpy@dest^0,c
  2675   0011B2  0E01               	movlw	high _dbuf
  2676   0011B4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2677   0011B6  6E02               	movwf	(strcpy@dest+1)^0,c
  2678   0011B8  0E3B               	movlw	low STR_13
  2679   0011BA  6E03               	movwf	strcpy@src^0,c
  2680   0011BC  EC82  F021         	call	_strcpy	;wreg free
  2681   0011C0  EF9E  F008         	goto	l6865
  2682   0011C4                     l6889:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2685   0011C4  0E00               	movlw	0
  2686   0011C6  0100               	movlb	0	; () banked
  2687   0011C8  6F88               	movwf	efgtoa@u& (0+255),b
  2688   0011CA  0E00               	movlw	0
  2689   0011CC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2690   0011CE  0E80               	movlw	128
  2691   0011D0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2692   0011D2  0E3F               	movlw	63
  2693   0011D4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2696   0011D6  0E00               	movlw	0
  2697   0011D8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2698   0011DA  0E00               	movlw	0
  2699   0011DC  6F6F               	movwf	efgtoa@e& (0+255),b
  2700   0011DE                     
  2701                           ; BSR set to: 0
  2702                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2703   0011DE  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2704   0011E2  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2705   0011E6  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2706   0011EA  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2707   0011EE  0E00               	movlw	0
  2708   0011F0  6E05               	movwf	___fleq@ff2^0,c
  2709   0011F2  0E00               	movlw	0
  2710   0011F4  6E06               	movwf	(___fleq@ff2+1)^0,c
  2711   0011F6  0E00               	movlw	0
  2712   0011F8  6E07               	movwf	(___fleq@ff2+2)^0,c
  2713   0011FA  0E00               	movlw	0
  2714   0011FC  6E08               	movwf	(___fleq@ff2+3)^0,c
  2715   0011FE  EC51  F01D         	call	___fleq	;wreg free
  2716   001202  B0D8               	btfsc	status,0,c
  2717   001204  EF06  F009         	goto	u7531
  2718   001208  EF08  F009         	goto	u7530
  2719   00120C                     u7531:
  2720   00120C  EFE7  F009         	goto	l1328
  2721   001210                     u7530:
  2722   001210  EF15  F009         	goto	l6897
  2723   001214                     l1330:
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2726   001214  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2727   001218  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2728   00121C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2729   001220  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2730   001224                     
  2731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2732   001224  0100               	movlb	0	; () banked
  2733   001226  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2734   001228  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2735   00122A                     l6897:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2738   00122A  C088  F001         	movff	efgtoa@u,___flmul@b
  2739   00122E  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2740   001232  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2741   001236  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  2742   00123A  0E00               	movlw	0
  2743   00123C  6E05               	movwf	___flmul@a^0,c
  2744   00123E  0E00               	movlw	0
  2745   001240  6E06               	movwf	(___flmul@a+1)^0,c
  2746   001242  0E20               	movlw	32
  2747   001244  6E07               	movwf	(___flmul@a+2)^0,c
  2748   001246  0E41               	movlw	65
  2749   001248  6E08               	movwf	(___flmul@a+3)^0,c
  2750   00124A  EC79  F00F         	call	___flmul	;wreg free
  2751   00124E  C001  F073         	movff	?___flmul,efgtoa@ou
  2752   001252  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  2753   001256  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  2754   00125A  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  2755   00125E  0100               	movlb	0	; () banked
  2756   001260  5173               	movf	efgtoa@ou& (0+255),w,b
  2757   001262  5D82               	subwf	efgtoa@g& (0+255),w,b
  2758   001264  6E01               	movwf	labs@a^0,c
  2759   001266  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2760   001268  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2761   00126A  6E02               	movwf	(labs@a+1)^0,c
  2762   00126C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2763   00126E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2764   001270  6E03               	movwf	(labs@a+2)^0,c
  2765   001272  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2766   001274  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2767   001276  6E04               	movwf	(labs@a+3)^0,c
  2768   001278  EC3A  F020         	call	_labs	;wreg free
  2769   00127C  BE04               	btfsc	(?_labs+3)^0,7,c
  2770   00127E  EF4C  F009         	goto	u7541
  2771   001282  5004               	movf	(?_labs+3)^0,w,c
  2772   001284  1003               	iorwf	(?_labs+2)^0,w,c
  2773   001286  1002               	iorwf	(?_labs+1)^0,w,c
  2774   001288  E109               	bnz	u7540
  2775   00128A  0E02               	movlw	2
  2776   00128C  5C01               	subwf	?_labs^0,w,c
  2777   00128E  A0D8               	btfss	status,0,c
  2778   001290  EF4C  F009         	goto	u7541
  2779   001294  EF4E  F009         	goto	u7540
  2780   001298                     u7541:
  2781   001298  EF0A  F009         	goto	l1330
  2782   00129C                     u7540:
  2783   00129C  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  2784   0012A0  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  2785   0012A4  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  2786   0012A8  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  2787   0012AC  C082  F01E         	movff	efgtoa@g,___flge@ff2
  2788   0012B0  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  2789   0012B4  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  2790   0012B8  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  2791   0012BC  EC31  F019         	call	___flge	;wreg free
  2792   0012C0  A0D8               	btfss	status,0,c
  2793   0012C2  EF65  F009         	goto	u7551
  2794   0012C6  EF67  F009         	goto	u7550
  2795   0012CA                     u7551:
  2796   0012CA  EF0A  F009         	goto	l1330
  2797   0012CE                     u7550:
  2798   0012CE                     
  2799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2800   0012CE  0100               	movlb	0	; () banked
  2801   0012D0  5188               	movf	efgtoa@u& (0+255),w,b
  2802   0012D2  5D82               	subwf	efgtoa@g& (0+255),w,b
  2803   0012D4  6E01               	movwf	labs@a^0,c
  2804   0012D6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2805   0012D8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2806   0012DA  6E02               	movwf	(labs@a+1)^0,c
  2807   0012DC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2808   0012DE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2809   0012E0  6E03               	movwf	(labs@a+2)^0,c
  2810   0012E2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2811   0012E4  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2812   0012E6  6E04               	movwf	(labs@a+3)^0,c
  2813   0012E8  EC3A  F020         	call	_labs	;wreg free
  2814   0012EC  BE04               	btfsc	(?_labs+3)^0,7,c
  2815   0012EE  EF86  F009         	goto	u7560
  2816   0012F2  5004               	movf	(?_labs+3)^0,w,c
  2817   0012F4  1003               	iorwf	(?_labs+2)^0,w,c
  2818   0012F6  1002               	iorwf	(?_labs+1)^0,w,c
  2819   0012F8  E107               	bnz	u7561
  2820   0012FA  0E02               	movlw	2
  2821   0012FC  5C01               	subwf	?_labs^0,w,c
  2822   0012FE  B0D8               	btfsc	status,0,c
  2823   001300  EF84  F009         	goto	u7561
  2824   001304  EF86  F009         	goto	u7560
  2825   001308                     u7561:
  2826   001308  EFCE  F009         	goto	l6915
  2827   00130C                     u7560:
  2828   00130C                     l6905:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2831   00130C  C088  F082         	movff	efgtoa@u,efgtoa@g
  2832   001310  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2833   001314  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2834   001318  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  2837   00131C  EFE7  F009         	goto	l1328
  2838   001320                     l6907:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2841   001320  C088  F001         	movff	efgtoa@u,___fldiv@b
  2842   001324  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2843   001328  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2844   00132C  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2845   001330  0E00               	movlw	0
  2846   001332  6E05               	movwf	___fldiv@a^0,c
  2847   001334  0E00               	movlw	0
  2848   001336  6E06               	movwf	(___fldiv@a+1)^0,c
  2849   001338  0E20               	movlw	32
  2850   00133A  6E07               	movwf	(___fldiv@a+2)^0,c
  2851   00133C  0E41               	movlw	65
  2852   00133E  6E08               	movwf	(___fldiv@a+3)^0,c
  2853   001340  EC8E  F011         	call	___fldiv	;wreg free
  2854   001344  C001  F088         	movff	?___fldiv,efgtoa@u
  2855   001348  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2856   00134C  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2857   001350  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2858   001354                     
  2859                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  2860   001354  0100               	movlb	0	; () banked
  2861   001356  076F               	decf	efgtoa@e& (0+255),f,b
  2862   001358  A0D8               	btfss	status,0,c
  2863   00135A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2864   00135C                     
  2865                           ; BSR set to: 0
  2866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2867   00135C  5188               	movf	efgtoa@u& (0+255),w,b
  2868   00135E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2869   001360  6E01               	movwf	labs@a^0,c
  2870   001362  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2871   001364  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2872   001366  6E02               	movwf	(labs@a+1)^0,c
  2873   001368  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2874   00136A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2875   00136C  6E03               	movwf	(labs@a+2)^0,c
  2876   00136E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2877   001370  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2878   001372  6E04               	movwf	(labs@a+3)^0,c
  2879   001374  EC3A  F020         	call	_labs	;wreg free
  2880   001378  BE04               	btfsc	(?_labs+3)^0,7,c
  2881   00137A  EFCC  F009         	goto	u7570
  2882   00137E  5004               	movf	(?_labs+3)^0,w,c
  2883   001380  1003               	iorwf	(?_labs+2)^0,w,c
  2884   001382  1002               	iorwf	(?_labs+1)^0,w,c
  2885   001384  E107               	bnz	u7571
  2886   001386  0E02               	movlw	2
  2887   001388  5C01               	subwf	?_labs^0,w,c
  2888   00138A  B0D8               	btfsc	status,0,c
  2889   00138C  EFCA  F009         	goto	u7571
  2890   001390  EFCC  F009         	goto	u7570
  2891   001394                     u7571:
  2892   001394  EFCE  F009         	goto	l6915
  2893   001398                     u7570:
  2894   001398  EF86  F009         	goto	l6905
  2895   00139C                     l6915:
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2898   00139C  C082  F01A         	movff	efgtoa@g,___flge@ff1
  2899   0013A0  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2900   0013A4  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2901   0013A8  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2902   0013AC  C088  F01E         	movff	efgtoa@u,___flge@ff2
  2903   0013B0  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2904   0013B4  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2905   0013B8  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2906   0013BC  EC31  F019         	call	___flge	;wreg free
  2907   0013C0  A0D8               	btfss	status,0,c
  2908   0013C2  EFE5  F009         	goto	u7581
  2909   0013C6  EFE7  F009         	goto	u7580
  2910   0013CA                     u7581:
  2911   0013CA  EF90  F009         	goto	l6907
  2912   0013CE                     u7580:
  2913   0013CE                     l1328:
  2914                           
  2915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  2916   0013CE  C033  F069         	movff	efgtoa@c,efgtoa@mode
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  2919   0013D2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2920   0013D6                     
  2921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  2922   0013D6  BE52               	btfsc	(_prec+1)^0,7,c
  2923   0013D8  EFF0  F009         	goto	u7591
  2924   0013DC  EFF2  F009         	goto	u7590
  2925   0013E0                     u7591:
  2926   0013E0  EFF8  F009         	goto	l6921
  2927   0013E4                     u7590:
  2928   0013E4  C051  F062         	movff	_prec,efgtoa@p
  2929   0013E8  C052  F063         	movff	_prec+1,efgtoa@p+1
  2930   0013EC  EFFD  F009         	goto	l6923
  2931   0013F0                     l6921:
  2932   0013F0  0E00               	movlw	0
  2933   0013F2  0100               	movlb	0	; () banked
  2934   0013F4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2935   0013F6  0E06               	movlw	6
  2936   0013F8  6F62               	movwf	efgtoa@p& (0+255),b
  2937   0013FA                     l6923:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  2940   0013FA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2941   0013FE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2942   001402                     
  2943                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  2944   001402  0100               	movlb	0	; () banked
  2945   001404  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2946   001406  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2947   001408                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  2950   001408  0E66               	movlw	102
  2951   00140A  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2952   00140C  A4D8               	btfss	status,2,c
  2953   00140E  EF0B  F00A         	goto	u7601
  2954   001412  EF0D  F00A         	goto	u7600
  2955   001416                     u7601:
  2956   001416  EF2D  F00A         	goto	l6937
  2957   00141A                     u7600:
  2958   00141A                     
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  2961   00141A  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2962   00141C  EF14  F00A         	goto	u7610
  2963   001420  EF12  F00A         	goto	u7611
  2964   001424                     u7611:
  2965   001424  EF20  F00A         	goto	l6933
  2966   001428                     u7610:
  2967   001428                     
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  2970   001428  0E00               	movlw	0
  2971   00142A  6F88               	movwf	efgtoa@u& (0+255),b
  2972   00142C  0E00               	movlw	0
  2973   00142E  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2974   001430  0E80               	movlw	128
  2975   001432  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2976   001434  0E3F               	movlw	63
  2977   001436  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  2980   001438  0E00               	movlw	0
  2981   00143A  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2982   00143C  0E00               	movlw	0
  2983   00143E  6F6F               	movwf	efgtoa@e& (0+255),b
  2984   001440                     l6933:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  2988   001440  0E67               	movlw	103
  2989   001442  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2990   001444  B4D8               	btfsc	status,2,c
  2991   001446  EF27  F00A         	goto	u7621
  2992   00144A  EF29  F00A         	goto	u7620
  2993   00144E                     u7621:
  2994   00144E  EF2D  F00A         	goto	l6937
  2995   001452                     u7620:
  2996   001452                     
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  2999   001452  516F               	movf	efgtoa@e& (0+255),w,b
  3000   001454  276D               	addwf	efgtoa@m& (0+255),f,b
  3001   001456  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3002   001458  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3003   00145A                     l6937:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3007   00145A  0E00               	movlw	0
  3008   00145C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3009   00145E  0E00               	movlw	0
  3010   001460  6F77               	movwf	efgtoa@i& (0+255),b
  3011   001462                     
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3014   001462  C082  F079         	movff	efgtoa@g,efgtoa@h
  3015   001466  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3016   00146A  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3017   00146E  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3018   001472                     
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3021   001472  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3022   001476  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3023   00147A  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3024   00147E  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3027   001482  EFBE  F00A         	goto	l6951
  3028   001486                     l6943:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3032   001486  C079  F001         	movff	efgtoa@h,___fldiv@b
  3033   00148A  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3034   00148E  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3035   001492  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3036   001496  C088  F005         	movff	efgtoa@u,___fldiv@a
  3037   00149A  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3038   00149E  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3039   0014A2  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3040   0014A6  EC8E  F011         	call	___fldiv	;wreg free
  3041   0014AA  C001  F01A         	movff	?___fldiv,floorf@x
  3042   0014AE  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3043   0014B2  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3044   0014B6  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3045   0014BA  EC9C  F014         	call	_floorf	;wreg free
  3046   0014BE  C01A  F07D         	movff	?_floorf,efgtoa@l
  3047   0014C2  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  3048   0014C6  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  3049   0014CA  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3052   0014CE  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3053   0014D2  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3054   0014D6  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3055   0014DA  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3056   0014DE  ECAE  F018         	call	___fltol	;wreg free
  3057   0014E2  C001  F06B         	movff	?___fltol,efgtoa@d
  3058   0014E6  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3059   0014EA                     
  3060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3061   0014EA  C079  F01A         	movff	efgtoa@h,___flsub@b
  3062   0014EE  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3063   0014F2  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3064   0014F6  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3065   0014FA  C07D  F005         	movff	efgtoa@l,___flmul@a
  3066   0014FE  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3067   001502  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3068   001506  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3069   00150A  C088  F001         	movff	efgtoa@u,___flmul@b
  3070   00150E  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3071   001512  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3072   001516  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3073   00151A  EC79  F00F         	call	___flmul	;wreg free
  3074   00151E  C001  F01E         	movff	?___flmul,___flsub@a
  3075   001522  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3076   001526  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3077   00152A  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3078   00152E  ECDC  F020         	call	___flsub	;wreg free
  3079   001532  C01A  F079         	movff	?___flsub,efgtoa@h
  3080   001536  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  3081   00153A  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  3082   00153E  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  3083   001542                     
  3084                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3085   001542  C088  F001         	movff	efgtoa@u,___fldiv@b
  3086   001546  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3087   00154A  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3088   00154E  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3089   001552  0E00               	movlw	0
  3090   001554  6E05               	movwf	___fldiv@a^0,c
  3091   001556  0E00               	movlw	0
  3092   001558  6E06               	movwf	(___fldiv@a+1)^0,c
  3093   00155A  0E20               	movlw	32
  3094   00155C  6E07               	movwf	(___fldiv@a+2)^0,c
  3095   00155E  0E41               	movlw	65
  3096   001560  6E08               	movwf	(___fldiv@a+3)^0,c
  3097   001562  EC8E  F011         	call	___fldiv	;wreg free
  3098   001566  C001  F088         	movff	?___fldiv,efgtoa@u
  3099   00156A  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3100   00156E  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3101   001572  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3102   001576                     
  3103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3104   001576  0100               	movlb	0	; () banked
  3105   001578  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3106   00157A  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3107   00157C                     l6951:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3111   00157C  516D               	movf	efgtoa@m& (0+255),w,b
  3112   00157E  5D77               	subwf	efgtoa@i& (0+255),w,b
  3113   001580  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3114   001582  0A80               	xorlw	128
  3115   001584  6E34               	movwf	??_efgtoa^0,c
  3116   001586  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3117   001588  0A80               	xorlw	128
  3118   00158A  5834               	subwfb	??_efgtoa^0,w,c
  3119   00158C  A0D8               	btfss	status,0,c
  3120   00158E  EFCB  F00A         	goto	u7631
  3121   001592  EFCD  F00A         	goto	u7630
  3122   001596                     u7631:
  3123   001596  EF43  F00A         	goto	l6943
  3124   00159A                     u7630:
  3125   00159A                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3128   00159A  C088  F001         	movff	efgtoa@u,___flmul@b
  3129   00159E  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3130   0015A2  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3131   0015A6  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3132   0015AA  0E00               	movlw	0
  3133   0015AC  6E05               	movwf	___flmul@a^0,c
  3134   0015AE  0E00               	movlw	0
  3135   0015B0  6E06               	movwf	(___flmul@a+1)^0,c
  3136   0015B2  0EA0               	movlw	160
  3137   0015B4  6E07               	movwf	(___flmul@a+2)^0,c
  3138   0015B6  0E40               	movlw	64
  3139   0015B8  6E08               	movwf	(___flmul@a+3)^0,c
  3140   0015BA  EC79  F00F         	call	___flmul	;wreg free
  3141   0015BE  C001  F07D         	movff	?___flmul,efgtoa@l
  3142   0015C2  C002  F07E         	movff	?___flmul+1,efgtoa@l+1
  3143   0015C6  C003  F07F         	movff	?___flmul+2,efgtoa@l+2
  3144   0015CA  C004  F080         	movff	?___flmul+3,efgtoa@l+3
  3145   0015CE                     
  3146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3147   0015CE  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3148   0015D2  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3149   0015D6  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3150   0015DA  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3151   0015DE  C07D  F01E         	movff	efgtoa@l,___flge@ff2
  3152   0015E2  C07E  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3153   0015E6  C07F  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3154   0015EA  C080  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3155   0015EE  EC31  F019         	call	___flge	;wreg free
  3156   0015F2  B0D8               	btfsc	status,0,c
  3157   0015F4  EFFE  F00A         	goto	u7641
  3158   0015F8  EF00  F00B         	goto	u7640
  3159   0015FC                     u7641:
  3160   0015FC  EF0B  F00B         	goto	l6959
  3161   001600                     u7640:
  3162   001600                     
  3163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3164   001600  0E00               	movlw	0
  3165   001602  0100               	movlb	0	; () banked
  3166   001604  6F7D               	movwf	efgtoa@l& (0+255),b
  3167   001606  0E00               	movlw	0
  3168   001608  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3169   00160A  0E00               	movlw	0
  3170   00160C  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3171   00160E  0E00               	movlw	0
  3172   001610  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3175   001612  EF34  F00B         	goto	l6965
  3176   001616                     l6959:
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3179   001616  C079  F001         	movff	efgtoa@h,___fleq@ff1
  3180   00161A  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3181   00161E  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3182   001622  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3183   001626  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  3184   00162A  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3185   00162E  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3186   001632  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3187   001636  EC51  F01D         	call	___fleq	;wreg free
  3188   00163A  A0D8               	btfss	status,0,c
  3189   00163C  EF22  F00B         	goto	u7651
  3190   001640  EF24  F00B         	goto	u7650
  3191   001644                     u7651:
  3192   001644  EF34  F00B         	goto	l6965
  3193   001648                     u7650:
  3194   001648  0100               	movlb	0	; () banked
  3195   00164A  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3196   00164C  EF2A  F00B         	goto	u7661
  3197   001650  EF2C  F00B         	goto	u7660
  3198   001654                     u7661:
  3199   001654  EF34  F00B         	goto	l6965
  3200   001658                     u7660:
  3201   001658                     
  3202                           ; BSR set to: 0
  3203                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3204   001658  0E00               	movlw	0
  3205   00165A  6F7D               	movwf	efgtoa@l& (0+255),b
  3206   00165C  0E00               	movlw	0
  3207   00165E  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3208   001660  0E00               	movlw	0
  3209   001662  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3210   001664  0E00               	movlw	0
  3211   001666  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3212   001668                     l6965:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3215   001668  C082  F001         	movff	efgtoa@g,___fladd@b
  3216   00166C  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  3217   001670  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  3218   001674  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  3219   001678  C07D  F005         	movff	efgtoa@l,___fladd@a
  3220   00167C  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  3221   001680  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  3222   001684  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  3223   001688  EC19  F00D         	call	___fladd	;wreg free
  3224   00168C  C001  F079         	movff	?___fladd,efgtoa@h
  3225   001690  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  3226   001694  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  3227   001698  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  3228   00169C                     
  3229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3230   00169C  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3231   0016A0  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3232   0016A4  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3233   0016A8  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3234   0016AC  0E00               	movlw	0
  3235   0016AE  6E05               	movwf	___flmul@a^0,c
  3236   0016B0  0E00               	movlw	0
  3237   0016B2  6E06               	movwf	(___flmul@a+1)^0,c
  3238   0016B4  0E20               	movlw	32
  3239   0016B6  6E07               	movwf	(___flmul@a+2)^0,c
  3240   0016B8  0E41               	movlw	65
  3241   0016BA  6E08               	movwf	(___flmul@a+3)^0,c
  3242   0016BC  C073  F001         	movff	efgtoa@ou,___flmul@b
  3243   0016C0  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3244   0016C4  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3245   0016C8  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3246   0016CC  EC79  F00F         	call	___flmul	;wreg free
  3247   0016D0  C001  F01E         	movff	?___flmul,___flge@ff2
  3248   0016D4  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3249   0016D8  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3250   0016DC  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3251   0016E0  EC31  F019         	call	___flge	;wreg free
  3252   0016E4  A0D8               	btfss	status,0,c
  3253   0016E6  EF77  F00B         	goto	u7671
  3254   0016EA  EF79  F00B         	goto	u7670
  3255   0016EE                     u7671:
  3256   0016EE  EFA2  F00B         	goto	l6977
  3257   0016F2                     u7670:
  3258   0016F2                     
  3259                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3260   0016F2  0100               	movlb	0	; () banked
  3261   0016F4  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3262   0016F6  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3263   0016F8                     
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3266   0016F8  C073  F001         	movff	efgtoa@ou,___flmul@b
  3267   0016FC  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3268   001700  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3269   001704  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3270   001708  0E00               	movlw	0
  3271   00170A  6E05               	movwf	___flmul@a^0,c
  3272   00170C  0E00               	movlw	0
  3273   00170E  6E06               	movwf	(___flmul@a+1)^0,c
  3274   001710  0E20               	movlw	32
  3275   001712  6E07               	movwf	(___flmul@a+2)^0,c
  3276   001714  0E41               	movlw	65
  3277   001716  6E08               	movwf	(___flmul@a+3)^0,c
  3278   001718  EC79  F00F         	call	___flmul	;wreg free
  3279   00171C  C001  F073         	movff	?___flmul,efgtoa@ou
  3280   001720  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  3281   001724  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  3282   001728  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  3283   00172C                     
  3284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3285   00172C  0E66               	movlw	102
  3286   00172E  0100               	movlb	0	; () banked
  3287   001730  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3288   001732  A4D8               	btfss	status,2,c
  3289   001734  EF9E  F00B         	goto	u7681
  3290   001738  EFA0  F00B         	goto	u7680
  3291   00173C                     u7681:
  3292   00173C  EFA2  F00B         	goto	l6977
  3293   001740                     u7680:
  3294   001740                     
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3297   001740  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3298   001742  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3299   001744                     l6977:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3302   001744  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3303   001748  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3304   00174C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3305   001750  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3306   001754                     
  3307                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3308   001754  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3309   001758  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3310   00175C                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3312   00175C  0E00               	movlw	0
  3313   00175E  0100               	movlb	0	; () banked
  3314   001760  6F68               	movwf	efgtoa@pp& (0+255),b
  3315   001762                     
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3318   001762  0E00               	movlw	0
  3319   001764  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3320   001766  0E00               	movlw	0
  3321   001768  6F64               	movwf	efgtoa@t& (0+255),b
  3322   00176A                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3325   00176A  0E00               	movlw	0
  3326   00176C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3327   00176E  0E00               	movlw	0
  3328   001770  6F77               	movwf	efgtoa@i& (0+255),b
  3329                           
  3330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3331   001772  EFA0  F00C         	goto	l7027
  3332   001776                     l6987:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3336   001776  C079  F001         	movff	efgtoa@h,___fldiv@b
  3337   00177A  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3338   00177E  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3339   001782  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3340   001786  C088  F005         	movff	efgtoa@u,___fldiv@a
  3341   00178A  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3342   00178E  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3343   001792  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3344   001796  EC8E  F011         	call	___fldiv	;wreg free
  3345   00179A  C001  F01A         	movff	?___fldiv,floorf@x
  3346   00179E  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3347   0017A2  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3348   0017A6  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3349   0017AA  EC9C  F014         	call	_floorf	;wreg free
  3350   0017AE  C01A  F07D         	movff	?_floorf,efgtoa@l
  3351   0017B2  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  3352   0017B6  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  3353   0017BA  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3356   0017BE  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3357   0017C2  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3358   0017C6  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3359   0017CA  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3360   0017CE  ECAE  F018         	call	___fltol	;wreg free
  3361   0017D2  BE02               	btfsc	(?___fltol+1)^0,7,c
  3362   0017D4  EFF7  F00B         	goto	u7690
  3363   0017D8  5002               	movf	(?___fltol+1)^0,w,c
  3364   0017DA  E107               	bnz	u7691
  3365   0017DC  0E0A               	movlw	10
  3366   0017DE  5C01               	subwf	?___fltol^0,w,c
  3367   0017E0  B0D8               	btfsc	status,0,c
  3368   0017E2  EFF5  F00B         	goto	u7691
  3369   0017E6  EFF7  F00B         	goto	u7690
  3370   0017EA                     u7691:
  3371   0017EA  EF07  F00C         	goto	l6991
  3372   0017EE                     u7690:
  3373   0017EE  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3374   0017F2  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3375   0017F6  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3376   0017FA  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3377   0017FE  ECAE  F018         	call	___fltol	;wreg free
  3378   001802  C001  F06B         	movff	?___fltol,efgtoa@d
  3379   001806  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3380   00180A  EF0C  F00C         	goto	l1358
  3381   00180E                     l6991:
  3382   00180E  0E00               	movlw	0
  3383   001810  0100               	movlb	0	; () banked
  3384   001812  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3385   001814  0E09               	movlw	9
  3386   001816  6F6B               	movwf	efgtoa@d& (0+255),b
  3387   001818                     l1358:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3390   001818  0100               	movlb	0	; () banked
  3391   00181A  5168               	movf	efgtoa@pp& (0+255),w,b
  3392   00181C  A4D8               	btfss	status,2,c
  3393   00181E  EF13  F00C         	goto	u7701
  3394   001822  EF15  F00C         	goto	u7700
  3395   001826                     u7701:
  3396   001826  EF3D  F00C         	goto	l7011
  3397   00182A                     u7700:
  3398   00182A                     
  3399                           ; BSR set to: 0
  3400   00182A  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3401   00182C  EF1C  F00C         	goto	u7710
  3402   001830  EF1A  F00C         	goto	u7711
  3403   001834                     u7711:
  3404   001834  EF3D  F00C         	goto	l7011
  3405   001838                     u7710:
  3406   001838                     
  3407                           ; BSR set to: 0
  3408                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3409   001838  0E00               	movlw	low _dbuf
  3410   00183A  2586               	addwf	efgtoa@n& (0+255),w,b
  3411   00183C  6ED9               	movwf	fsr2l,c
  3412   00183E  0E01               	movlw	high _dbuf
  3413   001840  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3414   001842  6EDA               	movwf	fsr2h,c
  3415   001844  0E2E               	movlw	46
  3416   001846  6EDF               	movwf	indf2,c
  3417   001848                     
  3418                           ; BSR set to: 0
  3419   001848  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3420   00184A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3421   00184C                     
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3424   00184C  0771               	decf	efgtoa@w& (0+255),f,b
  3425   00184E  A0D8               	btfss	status,0,c
  3426   001850  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3427   001852                     
  3428                           ; BSR set to: 0
  3429                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3430   001852  0E01               	movlw	1
  3431   001854  6F68               	movwf	efgtoa@pp& (0+255),b
  3432   001856  EF3D  F00C         	goto	l7011
  3433   00185A                     l7003:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3437   00185A  0E00               	movlw	low _dbuf
  3438   00185C  2586               	addwf	efgtoa@n& (0+255),w,b
  3439   00185E  6ED9               	movwf	fsr2l,c
  3440   001860  0E01               	movlw	high _dbuf
  3441   001862  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3442   001864  6EDA               	movwf	fsr2h,c
  3443   001866  0E30               	movlw	48
  3444   001868  6EDF               	movwf	indf2,c
  3445   00186A                     
  3446                           ; BSR set to: 0
  3447   00186A  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3448   00186C  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3449   00186E                     
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3452   00186E  0771               	decf	efgtoa@w& (0+255),f,b
  3453   001870  A0D8               	btfss	status,0,c
  3454   001872  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3455   001874                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3458   001874  0764               	decf	efgtoa@t& (0+255),f,b
  3459   001876  A0D8               	btfss	status,0,c
  3460   001878  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3461   00187A                     l7011:
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3465   00187A  5164               	movf	efgtoa@t& (0+255),w,b
  3466   00187C  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3467   00187E  A4D8               	btfss	status,2,c
  3468   001880  EF44  F00C         	goto	u7721
  3469   001884  EF46  F00C         	goto	u7720
  3470   001888                     u7721:
  3471   001888  EF2D  F00C         	goto	l7003
  3472   00188C                     u7720:
  3473   00188C                     
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3476   00188C  0E00               	movlw	low _dbuf
  3477   00188E  2586               	addwf	efgtoa@n& (0+255),w,b
  3478   001890  6ED9               	movwf	fsr2l,c
  3479   001892  0E01               	movlw	high _dbuf
  3480   001894  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3481   001896  6EDA               	movwf	fsr2h,c
  3482   001898  516B               	movf	efgtoa@d& (0+255),w,b
  3483   00189A  0F30               	addlw	48
  3484   00189C  6EDF               	movwf	indf2,c
  3485   00189E                     
  3486                           ; BSR set to: 0
  3487   00189E  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3488   0018A0  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3489   0018A2                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3492   0018A2  0771               	decf	efgtoa@w& (0+255),f,b
  3493   0018A4  A0D8               	btfss	status,0,c
  3494   0018A6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3495   0018A8                     
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3498   0018A8  C079  F01A         	movff	efgtoa@h,___flsub@b
  3499   0018AC  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3500   0018B0  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3501   0018B4  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3502   0018B8  C07D  F005         	movff	efgtoa@l,___flmul@a
  3503   0018BC  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3504   0018C0  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3505   0018C4  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3506   0018C8  C088  F001         	movff	efgtoa@u,___flmul@b
  3507   0018CC  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3508   0018D0  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3509   0018D4  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3510   0018D8  EC79  F00F         	call	___flmul	;wreg free
  3511   0018DC  C001  F01E         	movff	?___flmul,___flsub@a
  3512   0018E0  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3513   0018E4  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3514   0018E8  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3515   0018EC  ECDC  F020         	call	___flsub	;wreg free
  3516   0018F0  C01A  F079         	movff	?___flsub,efgtoa@h
  3517   0018F4  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  3518   0018F8  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  3519   0018FC  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  3520   001900                     
  3521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3522   001900  C088  F001         	movff	efgtoa@u,___fldiv@b
  3523   001904  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3524   001908  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3525   00190C  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3526   001910  0E00               	movlw	0
  3527   001912  6E05               	movwf	___fldiv@a^0,c
  3528   001914  0E00               	movlw	0
  3529   001916  6E06               	movwf	(___fldiv@a+1)^0,c
  3530   001918  0E20               	movlw	32
  3531   00191A  6E07               	movwf	(___fldiv@a+2)^0,c
  3532   00191C  0E41               	movlw	65
  3533   00191E  6E08               	movwf	(___fldiv@a+3)^0,c
  3534   001920  EC8E  F011         	call	___fldiv	;wreg free
  3535   001924  C001  F088         	movff	?___fldiv,efgtoa@u
  3536   001928  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3537   00192C  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3538   001930  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3539   001934                     
  3540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3541   001934  0100               	movlb	0	; () banked
  3542   001936  0760               	decf	efgtoa@ne& (0+255),f,b
  3543   001938  A0D8               	btfss	status,0,c
  3544   00193A  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3545   00193C                     
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3548   00193C  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3549   00193E  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3550   001940                     l7027:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3554   001940  516D               	movf	efgtoa@m& (0+255),w,b
  3555   001942  5D77               	subwf	efgtoa@i& (0+255),w,b
  3556   001944  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3557   001946  0A80               	xorlw	128
  3558   001948  6E34               	movwf	??_efgtoa^0,c
  3559   00194A  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3560   00194C  0A80               	xorlw	128
  3561   00194E  5834               	subwfb	??_efgtoa^0,w,c
  3562   001950  B0D8               	btfsc	status,0,c
  3563   001952  EFAD  F00C         	goto	u7731
  3564   001956  EFAF  F00C         	goto	u7730
  3565   00195A                     u7731:
  3566   00195A  EFBD  F00C         	goto	l7031
  3567   00195E                     u7730:
  3568   00195E                     
  3569                           ; BSR set to: 0
  3570   00195E  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3571   001960  EFBB  F00C         	goto	u7741
  3572   001964  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3573   001966  E109               	bnz	u7740
  3574   001968  0E4B               	movlw	75
  3575   00196A  5D86               	subwf	efgtoa@n& (0+255),w,b
  3576   00196C  A0D8               	btfss	status,0,c
  3577   00196E  EFBB  F00C         	goto	u7741
  3578   001972  EFBD  F00C         	goto	u7740
  3579   001976                     u7741:
  3580   001976  EFBB  F00B         	goto	l6987
  3581   00197A                     u7740:
  3582   00197A                     l7031:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3586   00197A  0E00               	movlw	0
  3587   00197C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3588   00197E  0E4F               	movlw	79
  3589   001980  6F77               	movwf	efgtoa@i& (0+255),b
  3590   001982                     
  3591                           ; BSR set to: 0
  3592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3593   001982  0E00               	movlw	low _dbuf
  3594   001984  2577               	addwf	efgtoa@i& (0+255),w,b
  3595   001986  6ED9               	movwf	fsr2l,c
  3596   001988  0E01               	movlw	high _dbuf
  3597   00198A  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3598   00198C  6EDA               	movwf	fsr2h,c
  3599   00198E  6ADF               	clrf	indf2,c
  3600   001990                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3603   001990  0E00               	movlw	low _dbuf
  3604   001992  6E34               	movwf	??_efgtoa^0,c
  3605   001994  0E01               	movlw	high _dbuf
  3606   001996  6E35               	movwf	(??_efgtoa+1)^0,c
  3607   001998  5186               	movf	efgtoa@n& (0+255),w,b
  3608   00199A  5E34               	subwf	??_efgtoa^0,f,c
  3609   00199C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3610   00199E  5A35               	subwfb	(??_efgtoa+1)^0,f,c
  3611   0019A0  5177               	movf	efgtoa@i& (0+255),w,b
  3612   0019A2  2434               	addwf	??_efgtoa^0,w,c
  3613   0019A4  6E01               	movwf	memcpy@d1^0,c
  3614   0019A6  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3615   0019A8  2035               	addwfc	(??_efgtoa+1)^0,w,c
  3616   0019AA  6E02               	movwf	(memcpy@d1+1)^0,c
  3617   0019AC  0E00               	movlw	low _dbuf
  3618   0019AE  6E03               	movwf	memcpy@s1^0,c
  3619   0019B0  0E01               	movlw	high _dbuf
  3620   0019B2  6E04               	movwf	(memcpy@s1+1)^0,c
  3621   0019B4  C086  F005         	movff	efgtoa@n,memcpy@n
  3622   0019B8  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3623   0019BC  EC65  F020         	call	_memcpy	;wreg free
  3624   0019C0                     
  3625                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3626   0019C0  0100               	movlb	0	; () banked
  3627   0019C2  5186               	movf	efgtoa@n& (0+255),w,b
  3628   0019C4  5D77               	subwf	efgtoa@i& (0+255),w,b
  3629   0019C6  6F86               	movwf	efgtoa@n& (0+255),b
  3630   0019C8  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3631   0019CA  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3632   0019CC  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3633   0019CE                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3636   0019CE  5181               	movf	efgtoa@sign& (0+255),w,b
  3637   0019D0  A4D8               	btfss	status,2,c
  3638   0019D2  EFED  F00C         	goto	u7751
  3639   0019D6  EFF0  F00C         	goto	u7750
  3640   0019DA                     u7751:
  3641   0019DA  0E01               	movlw	1
  3642   0019DC  EFF1  F00C         	goto	u7760
  3643   0019E0                     u7750:
  3644   0019E0  0E00               	movlw	0
  3645   0019E2                     u7760:
  3646   0019E2  6F77               	movwf	efgtoa@i& (0+255),b
  3647   0019E4  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3648   0019E6                     
  3649                           ; BSR set to: 0
  3650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3651   0019E6  5181               	movf	efgtoa@sign& (0+255),w,b
  3652   0019E8  B4D8               	btfsc	status,2,c
  3653   0019EA  EFF9  F00C         	goto	u7771
  3654   0019EE  EFFB  F00C         	goto	u7770
  3655   0019F2                     u7771:
  3656   0019F2  EF06  F00D         	goto	l7045
  3657   0019F6                     u7770:
  3658   0019F6                     
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3661   0019F6  0786               	decf	efgtoa@n& (0+255),f,b
  3662   0019F8  A0D8               	btfss	status,0,c
  3663   0019FA  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3664   0019FC  0E00               	movlw	low _dbuf
  3665   0019FE  2586               	addwf	efgtoa@n& (0+255),w,b
  3666   001A00  6ED9               	movwf	fsr2l,c
  3667   001A02  0E01               	movlw	high _dbuf
  3668   001A04  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3669   001A06  6EDA               	movwf	fsr2h,c
  3670   001A08  C081  FFDF         	movff	efgtoa@sign,indf2
  3671   001A0C                     l7045:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3675   001A0C  5177               	movf	efgtoa@i& (0+255),w,b
  3676   001A0E  5F71               	subwf	efgtoa@w& (0+255),f,b
  3677   001A10  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3678   001A12  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3679   001A14                     
  3680                           ; BSR set to: 0
  3681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3682   001A14  C02E  F00F         	movff	efgtoa@fp,pad@fp
  3683   001A18  0E00               	movlw	low _dbuf
  3684   001A1A  2586               	addwf	efgtoa@n& (0+255),w,b
  3685   001A1C  6E10               	movwf	pad@buf^0,c
  3686   001A1E  0E01               	movlw	high _dbuf
  3687   001A20  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3688   001A22  6E11               	movwf	(pad@buf+1)^0,c
  3689   001A24  C071  F012         	movff	efgtoa@w,pad@p
  3690   001A28  C072  F013         	movff	efgtoa@w+1,pad@p+1
  3691   001A2C  EC47  F01F         	call	_pad	;wreg free
  3692   001A30                     l1325:
  3693   001A30  0012               	return		;funcret
  3694   001A32                     __end_of_efgtoa:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function _strcpy *****************
  3698 ;; Defined at:
  3699 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3702 ;;		 -> dbuf(80), 
  3703 ;;  src             1    2[COMRAM] PTR const unsigned char 
  3704 ;;		 -> STR_13(4), STR_10(4), 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  d               2    4[COMRAM] PTR unsigned char 
  3707 ;;		 -> dbuf(80), 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  2    0[COMRAM] PTR unsigned char 
  3710 ;; Registers used:
  3711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3717 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;Total ram usage:        6 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_efgtoa
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text8
  3731   004304                     __ptext8:
  3732                           	callstack 0
  3733   004304                     _strcpy:
  3734                           	callstack 25
  3735   004304  C001  F005         	movff	strcpy@dest,strcpy@d
  3736   004308  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  3737   00430C                     l6735:
  3738   00430C  2A03               	incf	strcpy@src^0,f,c
  3739   00430E  0403               	decf	strcpy@src^0,w,c
  3740   004310  6E04               	movwf	??_strcpy^0,c
  3741   004312  C004  FFF6         	movff	??_strcpy,tblptrl
  3742   004316                     	if	1	;There is more than 1 active tblptr byte
  3743   004316  0E10               	movlw	high __smallconst
  3744   004318  6EF7               	movwf	tblptrh,c
  3745   00431A                     	endif
  3746   00431A                     	if	0	;tblptru may be non-zero
  3747   00431A                     	endif
  3748   00431A                     	if	0	;tblptru may be non-zero
  3749   00431A                     	endif
  3750   00431A  C005  FFD9         	movff	strcpy@d,fsr2l
  3751   00431E  C006  FFDA         	movff	strcpy@d+1,fsr2h
  3752   004322  4A05               	infsnz	strcpy@d^0,f,c
  3753   004324  2A06               	incf	(strcpy@d+1)^0,f,c
  3754   004326  0008               	tblrd		*
  3755   004328  CFF5 FFDF          	movff	tablat,indf2
  3756   00432C  50DF               	movf	indf2,w,c
  3757   00432E  A4D8               	btfss	status,2,c
  3758   004330  EF9C  F021         	goto	u7241
  3759   004334  EF9E  F021         	goto	u7240
  3760   004338                     u7241:
  3761   004338  EF86  F021         	goto	l6735
  3762   00433C                     u7240:
  3763   00433C  0012               	return		;funcret
  3764   00433E                     __end_of_strcpy:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _memcpy *****************
  3768 ;; Defined at:
  3769 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  d1              2    0[COMRAM] PTR void 
  3772 ;;		 -> dbuf(80), 
  3773 ;;  s1              2    2[COMRAM] PTR const void 
  3774 ;;		 -> dbuf(80), 
  3775 ;;  n               2    4[COMRAM] unsigned int 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3778 ;;		 -> dbuf(80), 
  3779 ;;  d               2    7[COMRAM] PTR unsigned char 
  3780 ;;		 -> dbuf(80), 
  3781 ;;  tmp             1    6[COMRAM] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    0[COMRAM] PTR void 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3791 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;Total ram usage:       11 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_efgtoa
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text9
  3805   0040CA                     __ptext9:
  3806                           	callstack 0
  3807   0040CA                     _memcpy:
  3808                           	callstack 25
  3809   0040CA  C003  F00A         	movff	memcpy@s1,memcpy@s
  3810   0040CE  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  3811   0040D2  C001  F008         	movff	memcpy@d1,memcpy@d
  3812   0040D6  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  3813   0040DA  EF7F  F020         	goto	l6783
  3814   0040DE                     l6775:
  3815   0040DE  C00A  FFD9         	movff	memcpy@s,fsr2l
  3816   0040E2  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  3817   0040E6  50DF               	movf	indf2,w,c
  3818   0040E8  6E07               	movwf	memcpy@tmp^0,c
  3819   0040EA  4A0A               	infsnz	memcpy@s^0,f,c
  3820   0040EC  2A0B               	incf	(memcpy@s+1)^0,f,c
  3821   0040EE  C008  FFD9         	movff	memcpy@d,fsr2l
  3822   0040F2  C009  FFDA         	movff	memcpy@d+1,fsr2h
  3823   0040F6  C007  FFDF         	movff	memcpy@tmp,indf2
  3824   0040FA  4A08               	infsnz	memcpy@d^0,f,c
  3825   0040FC  2A09               	incf	(memcpy@d+1)^0,f,c
  3826   0040FE                     l6783:
  3827   0040FE  0605               	decf	memcpy@n^0,f,c
  3828   004100  A0D8               	btfss	status,0,c
  3829   004102  0606               	decf	(memcpy@n+1)^0,f,c
  3830   004104  2805               	incf	memcpy@n^0,w,c
  3831   004106  E106               	bnz	u7361
  3832   004108  2806               	incf	(memcpy@n+1)^0,w,c
  3833   00410A  A4D8               	btfss	status,2,c
  3834   00410C  EF8A  F020         	goto	u7361
  3835   004110  EF8C  F020         	goto	u7360
  3836   004114                     u7361:
  3837   004114  EF6F  F020         	goto	l6775
  3838   004118                     u7360:
  3839   004118  0012               	return		;funcret
  3840   00411A                     __end_of_memcpy:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _labs *****************
  3844 ;; Defined at:
  3845 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  a               4    0[COMRAM] long 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  4    0[COMRAM] long 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;Total ram usage:        8 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_efgtoa
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text10
  3873   004074                     __ptext10:
  3874                           	callstack 0
  3875   004074                     _labs:
  3876                           	callstack 25
  3877   004074  BE04               	btfsc	(labs@a+3)^0,7,c
  3878   004076  EF3F  F020         	goto	u7251
  3879   00407A  EF41  F020         	goto	u7250
  3880   00407E                     u7251:
  3881   00407E  EF4B  F020         	goto	l6741
  3882   004082                     u7250:
  3883   004082  C001  F001         	movff	labs@a,?_labs
  3884   004086  C002  F002         	movff	labs@a+1,?_labs+1
  3885   00408A  C003  F003         	movff	labs@a+2,?_labs+2
  3886   00408E  C004  F004         	movff	labs@a+3,?_labs+3
  3887   004092  EF64  F020         	goto	l1442
  3888   004096                     l6741:
  3889   004096  C001  F005         	movff	labs@a,??_labs
  3890   00409A  C002  F006         	movff	labs@a+1,??_labs+1
  3891   00409E  C003  F007         	movff	labs@a+2,??_labs+2
  3892   0040A2  C004  F008         	movff	labs@a+3,??_labs+3
  3893   0040A6  1E05               	comf	??_labs^0,f,c
  3894   0040A8  1E06               	comf	(??_labs+1)^0,f,c
  3895   0040AA  1E07               	comf	(??_labs+2)^0,f,c
  3896   0040AC  1E08               	comf	(??_labs+3)^0,f,c
  3897   0040AE  2A05               	incf	??_labs^0,f,c
  3898   0040B0  0E00               	movlw	0
  3899   0040B2  2206               	addwfc	(??_labs+1)^0,f,c
  3900   0040B4  2207               	addwfc	(??_labs+2)^0,f,c
  3901   0040B6  2208               	addwfc	(??_labs+3)^0,f,c
  3902   0040B8  C005  F001         	movff	??_labs,?_labs
  3903   0040BC  C006  F002         	movff	??_labs+1,?_labs+1
  3904   0040C0  C007  F003         	movff	??_labs+2,?_labs+2
  3905   0040C4  C008  F004         	movff	??_labs+3,?_labs+3
  3906   0040C8                     l1442:
  3907   0040C8  0012               	return		;funcret
  3908   0040CA                     __end_of_labs:
  3909                           	callstack 0
  3910                           
  3911 ;; *************** function _floorf *****************
  3912 ;; Defined at:
  3913 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  x               4   25[COMRAM] float 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  u               4   41[COMRAM] struct .
  3918 ;;  m               4   35[COMRAM] unsigned long 
  3919 ;;  e               2   39[COMRAM] int 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  4   25[COMRAM] float 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;Total ram usage:       20 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_efgtoa
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text11
  3943   002938                     __ptext11:
  3944                           	callstack 0
  3945   002938                     _floorf:
  3946                           	callstack 25
  3947   002938  C0D6  F02A         	movff	floorf@F521,floorf@u
  3948   00293C  C0D7  F02B         	movff	floorf@F521+1,floorf@u+1
  3949   002940  C0D8  F02C         	movff	floorf@F521+2,floorf@u+2
  3950   002944  C0D9  F02D         	movff	floorf@F521+3,floorf@u+3
  3951   002948  C01A  F02A         	movff	floorf@x,floorf@u
  3952   00294C  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  3953   002950  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  3954   002954  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  3955   002958  0E81               	movlw	129
  3956   00295A  6E1E               	movwf	??_floorf^0,c
  3957   00295C  0EFF               	movlw	255
  3958   00295E  6E1F               	movwf	(??_floorf+1)^0,c
  3959   002960  C02A  F020         	movff	floorf@u,??_floorf+2
  3960   002964  C02B  F021         	movff	floorf@u+1,??_floorf+3
  3961   002968  C02C  F022         	movff	floorf@u+2,??_floorf+4
  3962   00296C  C02D  F023         	movff	floorf@u+3,??_floorf+5
  3963   002970  0E18               	movlw	24
  3964   002972  EFC0  F014         	goto	u7260
  3965   002976                     u7265:
  3966   002976  90D8               	bcf	status,0,c
  3967   002978  3223               	rrcf	(??_floorf+5)^0,f,c
  3968   00297A  3222               	rrcf	(??_floorf+4)^0,f,c
  3969   00297C  3221               	rrcf	(??_floorf+3)^0,f,c
  3970   00297E  3220               	rrcf	(??_floorf+2)^0,f,c
  3971   002980                     u7260:
  3972   002980  2EE8               	decfsz	wreg,f,c
  3973   002982  EFBB  F014         	goto	u7265
  3974   002986  5020               	movf	(??_floorf+2)^0,w,c
  3975   002988  241E               	addwf	??_floorf^0,w,c
  3976   00298A  6E28               	movwf	floorf@e^0,c
  3977   00298C  0E00               	movlw	0
  3978   00298E  201F               	addwfc	(??_floorf+1)^0,w,c
  3979   002990  6E29               	movwf	(floorf@e+1)^0,c
  3980   002992  BE29               	btfsc	(floorf@e+1)^0,7,c
  3981   002994  EFD5  F014         	goto	u7271
  3982   002998  5029               	movf	(floorf@e+1)^0,w,c
  3983   00299A  E109               	bnz	u7270
  3984   00299C  0E17               	movlw	23
  3985   00299E  5C28               	subwf	floorf@e^0,w,c
  3986   0029A0  A0D8               	btfss	status,0,c
  3987   0029A2  EFD5  F014         	goto	u7271
  3988   0029A6  EFD7  F014         	goto	u7270
  3989   0029AA                     u7271:
  3990   0029AA  EFE1  F014         	goto	l6751
  3991   0029AE                     u7270:
  3992   0029AE                     l6749:
  3993   0029AE  C01A  F01A         	movff	floorf@x,?_floorf
  3994   0029B2  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  3995   0029B6  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  3996   0029BA  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  3997   0029BE  EFA4  F015         	goto	l1428
  3998   0029C2                     l6751:
  3999   0029C2  BE29               	btfsc	(floorf@e+1)^0,7,c
  4000   0029C4  EFE6  F014         	goto	u7281
  4001   0029C8  EFE8  F014         	goto	u7280
  4002   0029CC                     u7281:
  4003   0029CC  EF58  F015         	goto	l6761
  4004   0029D0                     u7280:
  4005   0029D0  C028  F01E         	movff	floorf@e,??_floorf
  4006   0029D4  0EFF               	movlw	255
  4007   0029D6  6E1F               	movwf	(??_floorf+1)^0,c
  4008   0029D8  0EFF               	movlw	255
  4009   0029DA  6E20               	movwf	(??_floorf+2)^0,c
  4010   0029DC  0E7F               	movlw	127
  4011   0029DE  6E21               	movwf	(??_floorf+3)^0,c
  4012   0029E0  0E00               	movlw	0
  4013   0029E2  6E22               	movwf	(??_floorf+4)^0,c
  4014   0029E4                     u7295:
  4015   0029E4  661E               	tstfsz	??_floorf^0,c
  4016   0029E6  EFF7  F014         	goto	u7296
  4017   0029EA  EFFF  F014         	goto	u7297
  4018   0029EE                     u7296:
  4019   0029EE  3422               	rlcf	(??_floorf+4)^0,w,c
  4020   0029F0  3222               	rrcf	(??_floorf+4)^0,f,c
  4021   0029F2  3221               	rrcf	(??_floorf+3)^0,f,c
  4022   0029F4  3220               	rrcf	(??_floorf+2)^0,f,c
  4023   0029F6  321F               	rrcf	(??_floorf+1)^0,f,c
  4024   0029F8  2E1E               	decfsz	??_floorf^0,f,c
  4025   0029FA  EFF2  F014         	goto	u7295
  4026   0029FE                     u7297:
  4027   0029FE  C01F  F024         	movff	??_floorf+1,floorf@m
  4028   002A02  C020  F025         	movff	??_floorf+2,floorf@m+1
  4029   002A06  C021  F026         	movff	??_floorf+3,floorf@m+2
  4030   002A0A  C022  F027         	movff	??_floorf+4,floorf@m+3
  4031   002A0E  5024               	movf	floorf@m^0,w,c
  4032   002A10  142A               	andwf	floorf@u^0,w,c
  4033   002A12  6E1E               	movwf	??_floorf^0,c
  4034   002A14  5025               	movf	(floorf@m+1)^0,w,c
  4035   002A16  142B               	andwf	(floorf@u+1)^0,w,c
  4036   002A18  6E1F               	movwf	(??_floorf+1)^0,c
  4037   002A1A  5026               	movf	(floorf@m+2)^0,w,c
  4038   002A1C  142C               	andwf	(floorf@u+2)^0,w,c
  4039   002A1E  6E20               	movwf	(??_floorf+2)^0,c
  4040   002A20  5027               	movf	(floorf@m+3)^0,w,c
  4041   002A22  142D               	andwf	(floorf@u+3)^0,w,c
  4042   002A24  6E21               	movwf	(??_floorf+3)^0,c
  4043   002A26  501E               	movf	??_floorf^0,w,c
  4044   002A28  101F               	iorwf	(??_floorf+1)^0,w,c
  4045   002A2A  1020               	iorwf	(??_floorf+2)^0,w,c
  4046   002A2C  1021               	iorwf	(??_floorf+3)^0,w,c
  4047   002A2E  A4D8               	btfss	status,2,c
  4048   002A30  EF1C  F015         	goto	u7301
  4049   002A34  EF1E  F015         	goto	u7300
  4050   002A38                     u7301:
  4051   002A38  EF20  F015         	goto	l6757
  4052   002A3C                     u7300:
  4053   002A3C  EFD7  F014         	goto	l6749
  4054   002A40                     l6757:
  4055   002A40  C02A  F01E         	movff	floorf@u,??_floorf
  4056   002A44  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4057   002A48  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4058   002A4C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4059   002A50  0E20               	movlw	32
  4060   002A52  EF30  F015         	goto	u7310
  4061   002A56                     u7315:
  4062   002A56  90D8               	bcf	status,0,c
  4063   002A58  3221               	rrcf	(??_floorf+3)^0,f,c
  4064   002A5A  3220               	rrcf	(??_floorf+2)^0,f,c
  4065   002A5C  321F               	rrcf	(??_floorf+1)^0,f,c
  4066   002A5E  321E               	rrcf	??_floorf^0,f,c
  4067   002A60                     u7310:
  4068   002A60  2EE8               	decfsz	wreg,f,c
  4069   002A62  EF2B  F015         	goto	u7315
  4070   002A66  501E               	movf	??_floorf^0,w,c
  4071   002A68  101F               	iorwf	(??_floorf+1)^0,w,c
  4072   002A6A  1020               	iorwf	(??_floorf+2)^0,w,c
  4073   002A6C  1021               	iorwf	(??_floorf+3)^0,w,c
  4074   002A6E  B4D8               	btfsc	status,2,c
  4075   002A70  EF3C  F015         	goto	u7321
  4076   002A74  EF3E  F015         	goto	u7320
  4077   002A78                     u7321:
  4078   002A78  EF46  F015         	goto	l1431
  4079   002A7C                     u7320:
  4080   002A7C  5024               	movf	floorf@m^0,w,c
  4081   002A7E  262A               	addwf	floorf@u^0,f,c
  4082   002A80  5025               	movf	(floorf@m+1)^0,w,c
  4083   002A82  222B               	addwfc	(floorf@u+1)^0,f,c
  4084   002A84  5026               	movf	(floorf@m+2)^0,w,c
  4085   002A86  222C               	addwfc	(floorf@u+2)^0,f,c
  4086   002A88  5027               	movf	(floorf@m+3)^0,w,c
  4087   002A8A  222D               	addwfc	(floorf@u+3)^0,f,c
  4088   002A8C                     l1431:
  4089   002A8C  1C24               	comf	floorf@m^0,w,c
  4090   002A8E  6E1E               	movwf	??_floorf^0,c
  4091   002A90  1C25               	comf	(floorf@m+1)^0,w,c
  4092   002A92  6E1F               	movwf	(??_floorf+1)^0,c
  4093   002A94  1C26               	comf	(floorf@m+2)^0,w,c
  4094   002A96  6E20               	movwf	(??_floorf+2)^0,c
  4095   002A98  1C27               	comf	(floorf@m+3)^0,w,c
  4096   002A9A  6E21               	movwf	(??_floorf+3)^0,c
  4097   002A9C  501E               	movf	??_floorf^0,w,c
  4098   002A9E  162A               	andwf	floorf@u^0,f,c
  4099   002AA0  501F               	movf	(??_floorf+1)^0,w,c
  4100   002AA2  162B               	andwf	(floorf@u+1)^0,f,c
  4101   002AA4  5020               	movf	(??_floorf+2)^0,w,c
  4102   002AA6  162C               	andwf	(floorf@u+2)^0,f,c
  4103   002AA8  5021               	movf	(??_floorf+3)^0,w,c
  4104   002AAA  162D               	andwf	(floorf@u+3)^0,f,c
  4105   002AAC  EF9C  F015         	goto	l6769
  4106   002AB0                     l6761:
  4107   002AB0  C02A  F01E         	movff	floorf@u,??_floorf
  4108   002AB4  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4109   002AB8  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4110   002ABC  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4111   002AC0  0E20               	movlw	32
  4112   002AC2  EF68  F015         	goto	u7330
  4113   002AC6                     u7335:
  4114   002AC6  90D8               	bcf	status,0,c
  4115   002AC8  3221               	rrcf	(??_floorf+3)^0,f,c
  4116   002ACA  3220               	rrcf	(??_floorf+2)^0,f,c
  4117   002ACC  321F               	rrcf	(??_floorf+1)^0,f,c
  4118   002ACE  321E               	rrcf	??_floorf^0,f,c
  4119   002AD0                     u7330:
  4120   002AD0  2EE8               	decfsz	wreg,f,c
  4121   002AD2  EF63  F015         	goto	u7335
  4122   002AD6  501E               	movf	??_floorf^0,w,c
  4123   002AD8  101F               	iorwf	(??_floorf+1)^0,w,c
  4124   002ADA  1020               	iorwf	(??_floorf+2)^0,w,c
  4125   002ADC  1021               	iorwf	(??_floorf+3)^0,w,c
  4126   002ADE  A4D8               	btfss	status,2,c
  4127   002AE0  EF74  F015         	goto	u7341
  4128   002AE4  EF76  F015         	goto	u7340
  4129   002AE8                     u7341:
  4130   002AE8  EF80  F015         	goto	l6765
  4131   002AEC                     u7340:
  4132   002AEC  0E00               	movlw	0
  4133   002AEE  6E2A               	movwf	floorf@u^0,c
  4134   002AF0  0E00               	movlw	0
  4135   002AF2  6E2B               	movwf	(floorf@u+1)^0,c
  4136   002AF4  0E00               	movlw	0
  4137   002AF6  6E2C               	movwf	(floorf@u+2)^0,c
  4138   002AF8  0E00               	movlw	0
  4139   002AFA  6E2D               	movwf	(floorf@u+3)^0,c
  4140   002AFC  EF9C  F015         	goto	l6769
  4141   002B00                     l6765:
  4142   002B00  90D8               	bcf	status,0,c
  4143   002B02  342A               	rlcf	floorf@u^0,w,c
  4144   002B04  6E1E               	movwf	??_floorf^0,c
  4145   002B06  342B               	rlcf	(floorf@u+1)^0,w,c
  4146   002B08  6E1F               	movwf	(??_floorf+1)^0,c
  4147   002B0A  342C               	rlcf	(floorf@u+2)^0,w,c
  4148   002B0C  6E20               	movwf	(??_floorf+2)^0,c
  4149   002B0E  342D               	rlcf	(floorf@u+3)^0,w,c
  4150   002B10  6E21               	movwf	(??_floorf+3)^0,c
  4151   002B12  501E               	movf	??_floorf^0,w,c
  4152   002B14  101F               	iorwf	(??_floorf+1)^0,w,c
  4153   002B16  1020               	iorwf	(??_floorf+2)^0,w,c
  4154   002B18  1021               	iorwf	(??_floorf+3)^0,w,c
  4155   002B1A  B4D8               	btfsc	status,2,c
  4156   002B1C  EF92  F015         	goto	u7351
  4157   002B20  EF94  F015         	goto	u7350
  4158   002B24                     u7351:
  4159   002B24  EF9C  F015         	goto	l6769
  4160   002B28                     u7350:
  4161   002B28  0E00               	movlw	0
  4162   002B2A  6E2A               	movwf	floorf@u^0,c
  4163   002B2C  0E00               	movlw	0
  4164   002B2E  6E2B               	movwf	(floorf@u+1)^0,c
  4165   002B30  0E80               	movlw	128
  4166   002B32  6E2C               	movwf	(floorf@u+2)^0,c
  4167   002B34  0EBF               	movlw	191
  4168   002B36  6E2D               	movwf	(floorf@u+3)^0,c
  4169   002B38                     l6769:
  4170   002B38  C02A  F01A         	movff	floorf@u,?_floorf
  4171   002B3C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4172   002B40  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4173   002B44  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4174   002B48                     l1428:
  4175   002B48  0012               	return		;funcret
  4176   002B4A                     __end_of_floorf:
  4177                           	callstack 0
  4178                           
  4179 ;; *************** function ___fpclassifyf *****************
  4180 ;; Defined at:
  4181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  x               4    0[COMRAM] float 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  u               4   10[COMRAM] struct .
  4186 ;;  e               2    8[COMRAM] int 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2    0[COMRAM] int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;Total ram usage:       14 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_efgtoa
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text12
  4210   003366                     __ptext12:
  4211                           	callstack 0
  4212   003366                     ___fpclassifyf:
  4213                           	callstack 25
  4214   003366  C0DA  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4215   00336A  C0DB  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4216   00336E  C0DC  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4217   003372  C0DD  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4218   003376  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4219   00337A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4220   00337E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4221   003382  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4222   003386  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4223   00338A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4224   00338E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4225   003392  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4226   003396  0E18               	movlw	24
  4227   003398  EFD3  F019         	goto	u7170
  4228   00339C                     u7175:
  4229   00339C  90D8               	bcf	status,0,c
  4230   00339E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4231   0033A0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4232   0033A2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4233   0033A4  3205               	rrcf	??___fpclassifyf^0,f,c
  4234   0033A6                     u7170:
  4235   0033A6  2EE8               	decfsz	wreg,f,c
  4236   0033A8  EFCE  F019         	goto	u7175
  4237   0033AC  5005               	movf	??___fpclassifyf^0,w,c
  4238   0033AE  6E09               	movwf	___fpclassifyf@e^0,c
  4239   0033B0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4240   0033B2  5009               	movf	___fpclassifyf@e^0,w,c
  4241   0033B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4242   0033B6  A4D8               	btfss	status,2,c
  4243   0033B8  EFE0  F019         	goto	u7181
  4244   0033BC  EFE2  F019         	goto	u7180
  4245   0033C0                     u7181:
  4246   0033C0  EF02  F01A         	goto	l6723
  4247   0033C4                     u7180:
  4248   0033C4  90D8               	bcf	status,0,c
  4249   0033C6  340B               	rlcf	___fpclassifyf@u^0,w,c
  4250   0033C8  6E05               	movwf	??___fpclassifyf^0,c
  4251   0033CA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4252   0033CC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4253   0033CE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4254   0033D0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4255   0033D2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4256   0033D4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4257   0033D6  5005               	movf	??___fpclassifyf^0,w,c
  4258   0033D8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4259   0033DA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4260   0033DC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4261   0033DE  A4D8               	btfss	status,2,c
  4262   0033E0  EFF4  F019         	goto	u7191
  4263   0033E4  EFF6  F019         	goto	u7190
  4264   0033E8                     u7191:
  4265   0033E8  EFFC  F019         	goto	l6719
  4266   0033EC                     u7190:
  4267   0033EC  0E00               	movlw	0
  4268   0033EE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4269   0033F0  0E02               	movlw	2
  4270   0033F2  6E01               	movwf	?___fpclassifyf^0,c
  4271   0033F4  EF31  F01A         	goto	l1414
  4272   0033F8                     l6719:
  4273   0033F8  0E00               	movlw	0
  4274   0033FA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4275   0033FC  0E03               	movlw	3
  4276   0033FE  6E01               	movwf	?___fpclassifyf^0,c
  4277   003400  EF31  F01A         	goto	l1414
  4278   003404                     l6723:
  4279   003404  2809               	incf	___fpclassifyf@e^0,w,c
  4280   003406  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4281   003408  A4D8               	btfss	status,2,c
  4282   00340A  EF09  F01A         	goto	u7201
  4283   00340E  EF0B  F01A         	goto	u7200
  4284   003412                     u7201:
  4285   003412  EF2D  F01A         	goto	l6729
  4286   003416                     u7200:
  4287   003416  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4288   00341A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4289   00341E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4290   003422  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4291   003426  0E09               	movlw	9
  4292   003428                     u7215:
  4293   003428  90D8               	bcf	status,0,c
  4294   00342A  3605               	rlcf	??___fpclassifyf^0,f,c
  4295   00342C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4296   00342E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4297   003430  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4298   003432  2EE8               	decfsz	wreg,f,c
  4299   003434  EF14  F01A         	goto	u7215
  4300   003438  5005               	movf	??___fpclassifyf^0,w,c
  4301   00343A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4302   00343C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4303   00343E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4304   003440  B4D8               	btfsc	status,2,c
  4305   003442  EF25  F01A         	goto	u7221
  4306   003446  EF28  F01A         	goto	u7220
  4307   00344A                     u7221:
  4308   00344A  0E01               	movlw	1
  4309   00344C  EF29  F01A         	goto	u7230
  4310   003450                     u7220:
  4311   003450  0E00               	movlw	0
  4312   003452                     u7230:
  4313   003452  6E01               	movwf	?___fpclassifyf^0,c
  4314   003454  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4315   003456  EF31  F01A         	goto	l1414
  4316   00345A                     l6729:
  4317   00345A  0E00               	movlw	0
  4318   00345C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4319   00345E  0E04               	movlw	4
  4320   003460  6E01               	movwf	?___fpclassifyf^0,c
  4321   003462                     l1414:
  4322   003462  0012               	return		;funcret
  4323   003464                     __end_of___fpclassifyf:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function ___fltol *****************
  4327 ;; Defined at:
  4328 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  f1              4    0[COMRAM] int 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  exp1            1    9[COMRAM] unsigned char 
  4333 ;;  sign1           1    8[COMRAM] unsigned char 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  4    0[COMRAM] long 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;Total ram usage:       10 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_efgtoa
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text13
  4357   00315C                     __ptext13:
  4358                           	callstack 0
  4359   00315C                     ___fltol:
  4360                           	callstack 25
  4361   00315C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4362   00315E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4363   003160  6E0A               	movwf	___fltol@exp1^0,c
  4364   003162  500A               	movf	___fltol@exp1^0,w,c
  4365   003164  A4D8               	btfss	status,2,c
  4366   003166  EFB7  F018         	goto	u7071
  4367   00316A  EFB9  F018         	goto	u7070
  4368   00316E                     u7071:
  4369   00316E  EFC3  F018         	goto	l6657
  4370   003172                     u7070:
  4371   003172                     l6653:
  4372   003172  0E00               	movlw	0
  4373   003174  6E01               	movwf	?___fltol^0,c
  4374   003176  0E00               	movlw	0
  4375   003178  6E02               	movwf	(?___fltol+1)^0,c
  4376   00317A  0E00               	movlw	0
  4377   00317C  6E03               	movwf	(?___fltol+2)^0,c
  4378   00317E  0E00               	movlw	0
  4379   003180  6E04               	movwf	(?___fltol+3)^0,c
  4380   003182  EF30  F019         	goto	l876
  4381   003186                     l6657:
  4382   003186  C001  F005         	movff	___fltol@f1,??___fltol
  4383   00318A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4384   00318E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4385   003192  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4386   003196  0E20               	movlw	32
  4387   003198  EFD3  F018         	goto	u7080
  4388   00319C                     u7085:
  4389   00319C  90D8               	bcf	status,0,c
  4390   00319E  3208               	rrcf	(??___fltol+3)^0,f,c
  4391   0031A0  3207               	rrcf	(??___fltol+2)^0,f,c
  4392   0031A2  3206               	rrcf	(??___fltol+1)^0,f,c
  4393   0031A4  3205               	rrcf	??___fltol^0,f,c
  4394   0031A6                     u7080:
  4395   0031A6  2EE8               	decfsz	wreg,f,c
  4396   0031A8  EFCE  F018         	goto	u7085
  4397   0031AC  5005               	movf	??___fltol^0,w,c
  4398   0031AE  6E09               	movwf	___fltol@sign1^0,c
  4399   0031B0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4400   0031B2  0EFF               	movlw	255
  4401   0031B4  1601               	andwf	___fltol@f1^0,f,c
  4402   0031B6  0EFF               	movlw	255
  4403   0031B8  1602               	andwf	(___fltol@f1+1)^0,f,c
  4404   0031BA  0EFF               	movlw	255
  4405   0031BC  1603               	andwf	(___fltol@f1+2)^0,f,c
  4406   0031BE  0E00               	movlw	0
  4407   0031C0  1604               	andwf	(___fltol@f1+3)^0,f,c
  4408   0031C2  0E96               	movlw	150
  4409   0031C4  5E0A               	subwf	___fltol@exp1^0,f,c
  4410   0031C6  BE0A               	btfsc	___fltol@exp1^0,7,c
  4411   0031C8  EFEA  F018         	goto	u7090
  4412   0031CC  EFE8  F018         	goto	u7091
  4413   0031D0                     u7091:
  4414   0031D0  EF00  F019         	goto	l6677
  4415   0031D4                     u7090:
  4416   0031D4  500A               	movf	___fltol@exp1^0,w,c
  4417   0031D6  0A80               	xorlw	128
  4418   0031D8  0F97               	addlw	151
  4419   0031DA  B0D8               	btfsc	status,0,c
  4420   0031DC  EFF2  F018         	goto	u7101
  4421   0031E0  EFF4  F018         	goto	u7100
  4422   0031E4                     u7101:
  4423   0031E4  EFF6  F018         	goto	l6673
  4424   0031E8                     u7100:
  4425   0031E8  EFB9  F018         	goto	l6653
  4426   0031EC                     l6673:
  4427   0031EC  90D8               	bcf	status,0,c
  4428   0031EE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4429   0031F0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4430   0031F2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4431   0031F4  3201               	rrcf	___fltol@f1^0,f,c
  4432   0031F6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4433   0031F8  EFF6  F018         	goto	l6673
  4434   0031FC  EF18  F019         	goto	l6687
  4435   003200                     l6677:
  4436   003200  0E1F               	movlw	31
  4437   003202  640A               	cpfsgt	___fltol@exp1^0,c
  4438   003204  EF06  F019         	goto	u7111
  4439   003208  EF08  F019         	goto	u7110
  4440   00320C                     u7111:
  4441   00320C  EF10  F019         	goto	l6685
  4442   003210                     u7110:
  4443   003210  EFB9  F018         	goto	l6653
  4444   003214                     l6683:
  4445   003214  90D8               	bcf	status,0,c
  4446   003216  3601               	rlcf	___fltol@f1^0,f,c
  4447   003218  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4448   00321A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4449   00321C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4450   00321E  060A               	decf	___fltol@exp1^0,f,c
  4451   003220                     l6685:
  4452   003220  500A               	movf	___fltol@exp1^0,w,c
  4453   003222  A4D8               	btfss	status,2,c
  4454   003224  EF16  F019         	goto	u7121
  4455   003228  EF18  F019         	goto	u7120
  4456   00322C                     u7121:
  4457   00322C  EF0A  F019         	goto	l6683
  4458   003230                     u7120:
  4459   003230                     l6687:
  4460   003230  5009               	movf	___fltol@sign1^0,w,c
  4461   003232  B4D8               	btfsc	status,2,c
  4462   003234  EF1E  F019         	goto	u7131
  4463   003238  EF20  F019         	goto	u7130
  4464   00323C                     u7131:
  4465   00323C  EF28  F019         	goto	l6691
  4466   003240                     u7130:
  4467   003240  1E04               	comf	(___fltol@f1+3)^0,f,c
  4468   003242  1E03               	comf	(___fltol@f1+2)^0,f,c
  4469   003244  1E02               	comf	(___fltol@f1+1)^0,f,c
  4470   003246  6C01               	negf	___fltol@f1^0,c
  4471   003248  0E00               	movlw	0
  4472   00324A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4473   00324C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4474   00324E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4475   003250                     l6691:
  4476   003250  C001  F001         	movff	___fltol@f1,?___fltol
  4477   003254  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4478   003258  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4479   00325C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4480   003260                     l876:
  4481   003260  0012               	return		;funcret
  4482   003262                     __end_of___fltol:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function ___flsub *****************
  4486 ;; Defined at:
  4487 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  b               4   25[COMRAM] long 
  4490 ;;  a               4   29[COMRAM] long 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  4   25[COMRAM] long 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4502 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;Total ram usage:        8 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 1
  4509 ;; This function calls:
  4510 ;;		___fladd
  4511 ;; This function is called by:
  4512 ;;		_efgtoa
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text14
  4517   0041B8                     __ptext14:
  4518                           	callstack 0
  4519   0041B8                     ___flsub:
  4520                           	callstack 24
  4521   0041B8  0E00               	movlw	0
  4522   0041BA  1A1E               	xorwf	___flsub@a^0,f,c
  4523   0041BC  0E00               	movlw	0
  4524   0041BE  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4525   0041C0  0E00               	movlw	0
  4526   0041C2  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4527   0041C4  0E80               	movlw	128
  4528   0041C6  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4529   0041C8  C01A  F001         	movff	___flsub@b,___fladd@b
  4530   0041CC  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4531   0041D0  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4532   0041D4  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4533   0041D8  C01E  F005         	movff	___flsub@a,___fladd@a
  4534   0041DC  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4535   0041E0  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4536   0041E4  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4537   0041E8  EC19  F00D         	call	___fladd	;wreg free
  4538   0041EC  C001  F01A         	movff	?___fladd,?___flsub
  4539   0041F0  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4540   0041F4  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4541   0041F8  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4542   0041FC  0012               	return		;funcret
  4543   0041FE                     __end_of___flsub:
  4544                           	callstack 0
  4545                           
  4546 ;; *************** function ___fladd *****************
  4547 ;; Defined at:
  4548 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  b               4    0[COMRAM] long 
  4551 ;;  a               4    4[COMRAM] long 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  grs             1   15[COMRAM] unsigned char 
  4554 ;;  bexp            1   14[COMRAM] unsigned char 
  4555 ;;  aexp            1   13[COMRAM] unsigned char 
  4556 ;;  signs           1   12[COMRAM] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  4    0[COMRAM] unsigned char 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4566 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;Total ram usage:       16 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		___flsub
  4576 ;;		_efgtoa
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text15
  4581   001A32                     __ptext15:
  4582                           	callstack 0
  4583   001A32                     ___fladd:
  4584                           	callstack 24
  4585   001A32  5004               	movf	(___fladd@b+3)^0,w,c
  4586   001A34  0B80               	andlw	128
  4587   001A36  6E0D               	movwf	___fladd@signs^0,c
  4588   001A38  5004               	movf	(___fladd@b+3)^0,w,c
  4589   001A3A  2404               	addwf	(___fladd@b+3)^0,w,c
  4590   001A3C  6E0F               	movwf	___fladd@bexp^0,c
  4591   001A3E  AE03               	btfss	(___fladd@b+2)^0,7,c
  4592   001A40  EF24  F00D         	goto	u6041
  4593   001A44  EF26  F00D         	goto	u6040
  4594   001A48                     u6041:
  4595   001A48  EF27  F00D         	goto	l6041
  4596   001A4C                     u6040:
  4597   001A4C  800F               	bsf	___fladd@bexp^0,0,c
  4598   001A4E                     l6041:
  4599   001A4E  500F               	movf	___fladd@bexp^0,w,c
  4600   001A50  B4D8               	btfsc	status,2,c
  4601   001A52  EF2D  F00D         	goto	u6051
  4602   001A56  EF2F  F00D         	goto	u6050
  4603   001A5A                     u6051:
  4604   001A5A  EF44  F00D         	goto	l6051
  4605   001A5E                     u6050:
  4606   001A5E  280F               	incf	___fladd@bexp^0,w,c
  4607   001A60  A4D8               	btfss	status,2,c
  4608   001A62  EF35  F00D         	goto	u6061
  4609   001A66  EF37  F00D         	goto	u6060
  4610   001A6A                     u6061:
  4611   001A6A  EF3F  F00D         	goto	l6047
  4612   001A6E                     u6060:
  4613   001A6E  0E00               	movlw	0
  4614   001A70  6E01               	movwf	___fladd@b^0,c
  4615   001A72  0E00               	movlw	0
  4616   001A74  6E02               	movwf	(___fladd@b+1)^0,c
  4617   001A76  0E00               	movlw	0
  4618   001A78  6E03               	movwf	(___fladd@b+2)^0,c
  4619   001A7A  0E00               	movlw	0
  4620   001A7C  6E04               	movwf	(___fladd@b+3)^0,c
  4621   001A7E                     l6047:
  4622   001A7E  8E03               	bsf	(___fladd@b+2)^0,7,c
  4623   001A80  0E00               	movlw	0
  4624   001A82  6E04               	movwf	(___fladd@b+3)^0,c
  4625   001A84  EF4C  F00D         	goto	l6053
  4626   001A88                     l6051:
  4627   001A88  0E00               	movlw	0
  4628   001A8A  6E01               	movwf	___fladd@b^0,c
  4629   001A8C  0E00               	movlw	0
  4630   001A8E  6E02               	movwf	(___fladd@b+1)^0,c
  4631   001A90  0E00               	movlw	0
  4632   001A92  6E03               	movwf	(___fladd@b+2)^0,c
  4633   001A94  0E00               	movlw	0
  4634   001A96  6E04               	movwf	(___fladd@b+3)^0,c
  4635   001A98                     l6053:
  4636   001A98  5008               	movf	(___fladd@a+3)^0,w,c
  4637   001A9A  0B80               	andlw	128
  4638   001A9C  6E0E               	movwf	___fladd@aexp^0,c
  4639   001A9E  500D               	movf	___fladd@signs^0,w,c
  4640   001AA0  180E               	xorwf	___fladd@aexp^0,w,c
  4641   001AA2  B4D8               	btfsc	status,2,c
  4642   001AA4  EF56  F00D         	goto	u6071
  4643   001AA8  EF58  F00D         	goto	u6070
  4644   001AAC                     u6071:
  4645   001AAC  EF59  F00D         	goto	l6059
  4646   001AB0                     u6070:
  4647   001AB0  8C0D               	bsf	___fladd@signs^0,6,c
  4648   001AB2                     l6059:
  4649   001AB2  5008               	movf	(___fladd@a+3)^0,w,c
  4650   001AB4  2408               	addwf	(___fladd@a+3)^0,w,c
  4651   001AB6  6E0E               	movwf	___fladd@aexp^0,c
  4652   001AB8  AE07               	btfss	(___fladd@a+2)^0,7,c
  4653   001ABA  EF61  F00D         	goto	u6081
  4654   001ABE  EF63  F00D         	goto	u6080
  4655   001AC2                     u6081:
  4656   001AC2  EF64  F00D         	goto	l6065
  4657   001AC6                     u6080:
  4658   001AC6  800E               	bsf	___fladd@aexp^0,0,c
  4659   001AC8                     l6065:
  4660   001AC8  500E               	movf	___fladd@aexp^0,w,c
  4661   001ACA  B4D8               	btfsc	status,2,c
  4662   001ACC  EF6A  F00D         	goto	u6091
  4663   001AD0  EF6C  F00D         	goto	u6090
  4664   001AD4                     u6091:
  4665   001AD4  EF81  F00D         	goto	l6075
  4666   001AD8                     u6090:
  4667   001AD8  280E               	incf	___fladd@aexp^0,w,c
  4668   001ADA  A4D8               	btfss	status,2,c
  4669   001ADC  EF72  F00D         	goto	u6101
  4670   001AE0  EF74  F00D         	goto	u6100
  4671   001AE4                     u6101:
  4672   001AE4  EF7C  F00D         	goto	l6071
  4673   001AE8                     u6100:
  4674   001AE8  0E00               	movlw	0
  4675   001AEA  6E05               	movwf	___fladd@a^0,c
  4676   001AEC  0E00               	movlw	0
  4677   001AEE  6E06               	movwf	(___fladd@a+1)^0,c
  4678   001AF0  0E00               	movlw	0
  4679   001AF2  6E07               	movwf	(___fladd@a+2)^0,c
  4680   001AF4  0E00               	movlw	0
  4681   001AF6  6E08               	movwf	(___fladd@a+3)^0,c
  4682   001AF8                     l6071:
  4683   001AF8  8E07               	bsf	(___fladd@a+2)^0,7,c
  4684   001AFA  0E00               	movlw	0
  4685   001AFC  6E08               	movwf	(___fladd@a+3)^0,c
  4686   001AFE  EF89  F00D         	goto	l6077
  4687   001B02                     l6075:
  4688   001B02  0E00               	movlw	0
  4689   001B04  6E05               	movwf	___fladd@a^0,c
  4690   001B06  0E00               	movlw	0
  4691   001B08  6E06               	movwf	(___fladd@a+1)^0,c
  4692   001B0A  0E00               	movlw	0
  4693   001B0C  6E07               	movwf	(___fladd@a+2)^0,c
  4694   001B0E  0E00               	movlw	0
  4695   001B10  6E08               	movwf	(___fladd@a+3)^0,c
  4696   001B12                     l6077:
  4697   001B12  500F               	movf	___fladd@bexp^0,w,c
  4698   001B14  5C0E               	subwf	___fladd@aexp^0,w,c
  4699   001B16  B0D8               	btfsc	status,0,c
  4700   001B18  EF90  F00D         	goto	u6111
  4701   001B1C  EF92  F00D         	goto	u6110
  4702   001B20                     u6111:
  4703   001B20  EFB9  F00D         	goto	l6113
  4704   001B24                     u6110:
  4705   001B24  AC0D               	btfss	___fladd@signs^0,6,c
  4706   001B26  EF97  F00D         	goto	u6121
  4707   001B2A  EF99  F00D         	goto	u6120
  4708   001B2E                     u6121:
  4709   001B2E  EF9B  F00D         	goto	l6083
  4710   001B32                     u6120:
  4711   001B32  0E80               	movlw	128
  4712   001B34  1A0D               	xorwf	___fladd@signs^0,f,c
  4713   001B36                     l6083:
  4714   001B36  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4715   001B3A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4716   001B3E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4717   001B42  C001  F010         	movff	___fladd@b,___fladd@grs
  4718   001B46  C005  F001         	movff	___fladd@a,___fladd@b
  4719   001B4A  C010  F005         	movff	___fladd@grs,___fladd@a
  4720   001B4E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4721   001B52  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4722   001B56  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4723   001B5A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4724   001B5E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4725   001B62  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4726   001B66  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4727   001B6A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4728   001B6E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4729   001B72                     l6113:
  4730   001B72  0E00               	movlw	0
  4731   001B74  6E10               	movwf	___fladd@grs^0,c
  4732   001B76  500F               	movf	___fladd@bexp^0,w,c
  4733   001B78  C00E  F009         	movff	___fladd@aexp,??___fladd
  4734   001B7C  6A0A               	clrf	(??___fladd+1)^0,c
  4735   001B7E  5E09               	subwf	??___fladd^0,f,c
  4736   001B80  0E00               	movlw	0
  4737   001B82  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4738   001B84  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4739   001B86  EFCE  F00D         	goto	u6131
  4740   001B8A  500A               	movf	(??___fladd+1)^0,w,c
  4741   001B8C  E109               	bnz	u6130
  4742   001B8E  0E1A               	movlw	26
  4743   001B90  5C09               	subwf	??___fladd^0,w,c
  4744   001B92  A0D8               	btfss	status,0,c
  4745   001B94  EFCE  F00D         	goto	u6131
  4746   001B98  EFD0  F00D         	goto	u6130
  4747   001B9C                     u6131:
  4748   001B9C  EF07  F00E         	goto	l1108
  4749   001BA0                     u6130:
  4750   001BA0  5001               	movf	___fladd@b^0,w,c
  4751   001BA2  1002               	iorwf	(___fladd@b+1)^0,w,c
  4752   001BA4  1003               	iorwf	(___fladd@b+2)^0,w,c
  4753   001BA6  1004               	iorwf	(___fladd@b+3)^0,w,c
  4754   001BA8  A4D8               	btfss	status,2,c
  4755   001BAA  EFD9  F00D         	goto	u6141
  4756   001BAE  EFDC  F00D         	goto	u6140
  4757   001BB2                     u6141:
  4758   001BB2  0E01               	movlw	1
  4759   001BB4  EFDD  F00D         	goto	u6150
  4760   001BB8                     u6140:
  4761   001BB8  0E00               	movlw	0
  4762   001BBA                     u6150:
  4763   001BBA  6E10               	movwf	___fladd@grs^0,c
  4764   001BBC  0E00               	movlw	0
  4765   001BBE  6E01               	movwf	___fladd@b^0,c
  4766   001BC0  0E00               	movlw	0
  4767   001BC2  6E02               	movwf	(___fladd@b+1)^0,c
  4768   001BC4  0E00               	movlw	0
  4769   001BC6  6E03               	movwf	(___fladd@b+2)^0,c
  4770   001BC8  0E00               	movlw	0
  4771   001BCA  6E04               	movwf	(___fladd@b+3)^0,c
  4772   001BCC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4773   001BD0  EF10  F00E         	goto	l1107
  4774   001BD4                     l1109:
  4775   001BD4  A010               	btfss	___fladd@grs^0,0,c
  4776   001BD6  EFEF  F00D         	goto	u6161
  4777   001BDA  EFF1  F00D         	goto	u6160
  4778   001BDE                     u6161:
  4779   001BDE  EFF7  F00D         	goto	l6125
  4780   001BE2                     u6160:
  4781   001BE2  90D8               	bcf	status,0,c
  4782   001BE4  3010               	rrcf	___fladd@grs^0,w,c
  4783   001BE6  0901               	iorlw	1
  4784   001BE8  6E10               	movwf	___fladd@grs^0,c
  4785   001BEA  EFF9  F00D         	goto	l6127
  4786   001BEE                     l6125:
  4787   001BEE  90D8               	bcf	status,0,c
  4788   001BF0  3210               	rrcf	___fladd@grs^0,f,c
  4789   001BF2                     l6127:
  4790   001BF2  A001               	btfss	___fladd@b^0,0,c
  4791   001BF4  EFFE  F00D         	goto	u6171
  4792   001BF8  EF00  F00E         	goto	u6170
  4793   001BFC                     u6171:
  4794   001BFC  EF01  F00E         	goto	l6131
  4795   001C00                     u6170:
  4796   001C00  8E10               	bsf	___fladd@grs^0,7,c
  4797   001C02                     l6131:
  4798   001C02  3404               	rlcf	(___fladd@b+3)^0,w,c
  4799   001C04  3204               	rrcf	(___fladd@b+3)^0,f,c
  4800   001C06  3203               	rrcf	(___fladd@b+2)^0,f,c
  4801   001C08  3202               	rrcf	(___fladd@b+1)^0,f,c
  4802   001C0A  3201               	rrcf	___fladd@b^0,f,c
  4803   001C0C  2A0F               	incf	___fladd@bexp^0,f,c
  4804   001C0E                     l1108:
  4805   001C0E  500E               	movf	___fladd@aexp^0,w,c
  4806   001C10  5C0F               	subwf	___fladd@bexp^0,w,c
  4807   001C12  A0D8               	btfss	status,0,c
  4808   001C14  EF0E  F00E         	goto	u6181
  4809   001C18  EF10  F00E         	goto	u6180
  4810   001C1C                     u6181:
  4811   001C1C  EFEA  F00D         	goto	l1109
  4812   001C20                     u6180:
  4813   001C20                     l1107:
  4814   001C20  BC0D               	btfsc	___fladd@signs^0,6,c
  4815   001C22  EF15  F00E         	goto	u6191
  4816   001C26  EF17  F00E         	goto	u6190
  4817   001C2A                     u6191:
  4818   001C2A  EF57  F00E         	goto	l6159
  4819   001C2E                     u6190:
  4820   001C2E  500F               	movf	___fladd@bexp^0,w,c
  4821   001C30  A4D8               	btfss	status,2,c
  4822   001C32  EF1D  F00E         	goto	u6201
  4823   001C36  EF1F  F00E         	goto	u6200
  4824   001C3A                     u6201:
  4825   001C3A  EF29  F00E         	goto	l6141
  4826   001C3E                     u6200:
  4827   001C3E  0E00               	movlw	0
  4828   001C40  6E01               	movwf	?___fladd^0,c
  4829   001C42  0E00               	movlw	0
  4830   001C44  6E02               	movwf	(?___fladd+1)^0,c
  4831   001C46  0E00               	movlw	0
  4832   001C48  6E03               	movwf	(?___fladd+2)^0,c
  4833   001C4A  0E00               	movlw	0
  4834   001C4C  6E04               	movwf	(?___fladd+3)^0,c
  4835   001C4E  EF78  F00F         	goto	l1116
  4836   001C52                     l6141:
  4837   001C52  5005               	movf	___fladd@a^0,w,c
  4838   001C54  2601               	addwf	___fladd@b^0,f,c
  4839   001C56  5006               	movf	(___fladd@a+1)^0,w,c
  4840   001C58  2202               	addwfc	(___fladd@b+1)^0,f,c
  4841   001C5A  5007               	movf	(___fladd@a+2)^0,w,c
  4842   001C5C  2203               	addwfc	(___fladd@b+2)^0,f,c
  4843   001C5E  5008               	movf	(___fladd@a+3)^0,w,c
  4844   001C60  2204               	addwfc	(___fladd@b+3)^0,f,c
  4845   001C62  A004               	btfss	(___fladd@b+3)^0,0,c
  4846   001C64  EF36  F00E         	goto	u6211
  4847   001C68  EF38  F00E         	goto	u6210
  4848   001C6C                     u6211:
  4849   001C6C  EFE4  F00E         	goto	l6195
  4850   001C70                     u6210:
  4851   001C70  A010               	btfss	___fladd@grs^0,0,c
  4852   001C72  EF3D  F00E         	goto	u6221
  4853   001C76  EF3F  F00E         	goto	u6220
  4854   001C7A                     u6221:
  4855   001C7A  EF45  F00E         	goto	l6149
  4856   001C7E                     u6220:
  4857   001C7E  90D8               	bcf	status,0,c
  4858   001C80  3010               	rrcf	___fladd@grs^0,w,c
  4859   001C82  0901               	iorlw	1
  4860   001C84  6E10               	movwf	___fladd@grs^0,c
  4861   001C86  EF47  F00E         	goto	l6151
  4862   001C8A                     l6149:
  4863   001C8A  90D8               	bcf	status,0,c
  4864   001C8C  3210               	rrcf	___fladd@grs^0,f,c
  4865   001C8E                     l6151:
  4866   001C8E  A001               	btfss	___fladd@b^0,0,c
  4867   001C90  EF4C  F00E         	goto	u6231
  4868   001C94  EF4E  F00E         	goto	u6230
  4869   001C98                     u6231:
  4870   001C98  EF4F  F00E         	goto	l6155
  4871   001C9C                     u6230:
  4872   001C9C  8E10               	bsf	___fladd@grs^0,7,c
  4873   001C9E                     l6155:
  4874   001C9E  3404               	rlcf	(___fladd@b+3)^0,w,c
  4875   001CA0  3204               	rrcf	(___fladd@b+3)^0,f,c
  4876   001CA2  3203               	rrcf	(___fladd@b+2)^0,f,c
  4877   001CA4  3202               	rrcf	(___fladd@b+1)^0,f,c
  4878   001CA6  3201               	rrcf	___fladd@b^0,f,c
  4879   001CA8  2A0F               	incf	___fladd@bexp^0,f,c
  4880   001CAA  EFE4  F00E         	goto	l6195
  4881   001CAE                     l6159:
  4882   001CAE  5005               	movf	___fladd@a^0,w,c
  4883   001CB0  5C01               	subwf	___fladd@b^0,w,c
  4884   001CB2  5006               	movf	(___fladd@a+1)^0,w,c
  4885   001CB4  5802               	subwfb	(___fladd@b+1)^0,w,c
  4886   001CB6  5007               	movf	(___fladd@a+2)^0,w,c
  4887   001CB8  5803               	subwfb	(___fladd@b+2)^0,w,c
  4888   001CBA  5004               	movf	(___fladd@b+3)^0,w,c
  4889   001CBC  0A80               	xorlw	128
  4890   001CBE  6E09               	movwf	??___fladd^0,c
  4891   001CC0  5008               	movf	(___fladd@a+3)^0,w,c
  4892   001CC2  0A80               	xorlw	128
  4893   001CC4  5809               	subwfb	??___fladd^0,w,c
  4894   001CC6  B0D8               	btfsc	status,0,c
  4895   001CC8  EF68  F00E         	goto	u6241
  4896   001CCC  EF6A  F00E         	goto	u6240
  4897   001CD0                     u6241:
  4898   001CD0  EF95  F00E         	goto	l6169
  4899   001CD4                     u6240:
  4900   001CD4  5001               	movf	___fladd@b^0,w,c
  4901   001CD6  5C05               	subwf	___fladd@a^0,w,c
  4902   001CD8  6E09               	movwf	??___fladd^0,c
  4903   001CDA  5002               	movf	(___fladd@b+1)^0,w,c
  4904   001CDC  5806               	subwfb	(___fladd@a+1)^0,w,c
  4905   001CDE  6E0A               	movwf	(??___fladd+1)^0,c
  4906   001CE0  5003               	movf	(___fladd@b+2)^0,w,c
  4907   001CE2  5807               	subwfb	(___fladd@a+2)^0,w,c
  4908   001CE4  6E0B               	movwf	(??___fladd+2)^0,c
  4909   001CE6  5004               	movf	(___fladd@b+3)^0,w,c
  4910   001CE8  5808               	subwfb	(___fladd@a+3)^0,w,c
  4911   001CEA  6E0C               	movwf	(??___fladd+3)^0,c
  4912   001CEC  0EFF               	movlw	255
  4913   001CEE  2409               	addwf	??___fladd^0,w,c
  4914   001CF0  6E01               	movwf	___fladd@b^0,c
  4915   001CF2  0EFF               	movlw	255
  4916   001CF4  200A               	addwfc	(??___fladd+1)^0,w,c
  4917   001CF6  6E02               	movwf	(___fladd@b+1)^0,c
  4918   001CF8  0EFF               	movlw	255
  4919   001CFA  200B               	addwfc	(??___fladd+2)^0,w,c
  4920   001CFC  6E03               	movwf	(___fladd@b+2)^0,c
  4921   001CFE  0EFF               	movlw	255
  4922   001D00  200C               	addwfc	(??___fladd+3)^0,w,c
  4923   001D02  6E04               	movwf	(___fladd@b+3)^0,c
  4924   001D04  0E80               	movlw	128
  4925   001D06  1A0D               	xorwf	___fladd@signs^0,f,c
  4926   001D08  6C10               	negf	___fladd@grs^0,c
  4927   001D0A  5010               	movf	___fladd@grs^0,w,c
  4928   001D0C  A4D8               	btfss	status,2,c
  4929   001D0E  EF8B  F00E         	goto	u6251
  4930   001D12  EF8D  F00E         	goto	u6250
  4931   001D16                     u6251:
  4932   001D16  EF9D  F00E         	goto	l1124
  4933   001D1A                     u6250:
  4934   001D1A  0E01               	movlw	1
  4935   001D1C  2601               	addwf	___fladd@b^0,f,c
  4936   001D1E  0E00               	movlw	0
  4937   001D20  2202               	addwfc	(___fladd@b+1)^0,f,c
  4938   001D22  2203               	addwfc	(___fladd@b+2)^0,f,c
  4939   001D24  2204               	addwfc	(___fladd@b+3)^0,f,c
  4940   001D26  EF9D  F00E         	goto	l1124
  4941   001D2A                     l6169:
  4942   001D2A  5005               	movf	___fladd@a^0,w,c
  4943   001D2C  5E01               	subwf	___fladd@b^0,f,c
  4944   001D2E  5006               	movf	(___fladd@a+1)^0,w,c
  4945   001D30  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4946   001D32  5007               	movf	(___fladd@a+2)^0,w,c
  4947   001D34  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4948   001D36  5008               	movf	(___fladd@a+3)^0,w,c
  4949   001D38  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4950   001D3A                     l1124:
  4951   001D3A  5001               	movf	___fladd@b^0,w,c
  4952   001D3C  1002               	iorwf	(___fladd@b+1)^0,w,c
  4953   001D3E  1003               	iorwf	(___fladd@b+2)^0,w,c
  4954   001D40  1004               	iorwf	(___fladd@b+3)^0,w,c
  4955   001D42  A4D8               	btfss	status,2,c
  4956   001D44  EFA6  F00E         	goto	u6261
  4957   001D48  EFA8  F00E         	goto	u6260
  4958   001D4C                     u6261:
  4959   001D4C  EFDD  F00E         	goto	l6193
  4960   001D50                     u6260:
  4961   001D50  5010               	movf	___fladd@grs^0,w,c
  4962   001D52  A4D8               	btfss	status,2,c
  4963   001D54  EFAE  F00E         	goto	u6271
  4964   001D58  EFB0  F00E         	goto	u6270
  4965   001D5C                     u6271:
  4966   001D5C  EFDD  F00E         	goto	l6193
  4967   001D60                     u6270:
  4968   001D60  0E00               	movlw	0
  4969   001D62  6E01               	movwf	?___fladd^0,c
  4970   001D64  0E00               	movlw	0
  4971   001D66  6E02               	movwf	(?___fladd+1)^0,c
  4972   001D68  0E00               	movlw	0
  4973   001D6A  6E03               	movwf	(?___fladd+2)^0,c
  4974   001D6C  0E00               	movlw	0
  4975   001D6E  6E04               	movwf	(?___fladd+3)^0,c
  4976   001D70  EF78  F00F         	goto	l1116
  4977   001D74                     l6177:
  4978   001D74  90D8               	bcf	status,0,c
  4979   001D76  3601               	rlcf	___fladd@b^0,f,c
  4980   001D78  3602               	rlcf	(___fladd@b+1)^0,f,c
  4981   001D7A  3603               	rlcf	(___fladd@b+2)^0,f,c
  4982   001D7C  3604               	rlcf	(___fladd@b+3)^0,f,c
  4983   001D7E  AE10               	btfss	___fladd@grs^0,7,c
  4984   001D80  EFC4  F00E         	goto	u6281
  4985   001D84  EFC6  F00E         	goto	u6280
  4986   001D88                     u6281:
  4987   001D88  EFC7  F00E         	goto	l6183
  4988   001D8C                     u6280:
  4989   001D8C  8001               	bsf	___fladd@b^0,0,c
  4990   001D8E                     l6183:
  4991   001D8E  A010               	btfss	___fladd@grs^0,0,c
  4992   001D90  EFCC  F00E         	goto	u6291
  4993   001D94  EFCE  F00E         	goto	u6290
  4994   001D98                     u6291:
  4995   001D98  EFD2  F00E         	goto	l6187
  4996   001D9C                     u6290:
  4997   001D9C  80D8               	bsf	status,0,c
  4998   001D9E  3610               	rlcf	___fladd@grs^0,f,c
  4999   001DA0  EFD4  F00E         	goto	l6189
  5000   001DA4                     l6187:
  5001   001DA4  90D8               	bcf	status,0,c
  5002   001DA6  3610               	rlcf	___fladd@grs^0,f,c
  5003   001DA8                     l6189:
  5004   001DA8  500F               	movf	___fladd@bexp^0,w,c
  5005   001DAA  B4D8               	btfsc	status,2,c
  5006   001DAC  EFDA  F00E         	goto	u6301
  5007   001DB0  EFDC  F00E         	goto	u6300
  5008   001DB4                     u6301:
  5009   001DB4  EFDD  F00E         	goto	l6193
  5010   001DB8                     u6300:
  5011   001DB8  060F               	decf	___fladd@bexp^0,f,c
  5012   001DBA                     l6193:
  5013   001DBA  AE03               	btfss	(___fladd@b+2)^0,7,c
  5014   001DBC  EFE2  F00E         	goto	u6311
  5015   001DC0  EFE4  F00E         	goto	u6310
  5016   001DC4                     u6311:
  5017   001DC4  EFBA  F00E         	goto	l6177
  5018   001DC8                     u6310:
  5019   001DC8                     l6195:
  5020   001DC8  0E00               	movlw	0
  5021   001DCA  6E0E               	movwf	___fladd@aexp^0,c
  5022   001DCC  AE10               	btfss	___fladd@grs^0,7,c
  5023   001DCE  EFEB  F00E         	goto	u6321
  5024   001DD2  EFED  F00E         	goto	u6320
  5025   001DD6                     u6321:
  5026   001DD6  EF05  F00F         	goto	l1133
  5027   001DDA                     u6320:
  5028   001DDA  C010  F009         	movff	___fladd@grs,??___fladd
  5029   001DDE  0E7F               	movlw	127
  5030   001DE0  1609               	andwf	??___fladd^0,f,c
  5031   001DE2  B4D8               	btfsc	status,2,c
  5032   001DE4  EFF6  F00E         	goto	u6331
  5033   001DE8  EFF8  F00E         	goto	u6330
  5034   001DEC                     u6331:
  5035   001DEC  EFFC  F00E         	goto	l1134
  5036   001DF0                     u6330:
  5037   001DF0                     l6201:
  5038   001DF0  0E01               	movlw	1
  5039   001DF2  6E0E               	movwf	___fladd@aexp^0,c
  5040   001DF4  EF05  F00F         	goto	l1133
  5041   001DF8                     l1134:
  5042   001DF8  A001               	btfss	___fladd@b^0,0,c
  5043   001DFA  EF01  F00F         	goto	u6341
  5044   001DFE  EF03  F00F         	goto	u6340
  5045   001E02                     u6341:
  5046   001E02  EF05  F00F         	goto	l1133
  5047   001E06                     u6340:
  5048   001E06  EFF8  F00E         	goto	l6201
  5049   001E0A                     l1133:
  5050   001E0A  500E               	movf	___fladd@aexp^0,w,c
  5051   001E0C  B4D8               	btfsc	status,2,c
  5052   001E0E  EF0B  F00F         	goto	u6351
  5053   001E12  EF0D  F00F         	goto	u6350
  5054   001E16                     u6351:
  5055   001E16  EF38  F00F         	goto	l6213
  5056   001E1A                     u6350:
  5057   001E1A  0E01               	movlw	1
  5058   001E1C  2601               	addwf	___fladd@b^0,f,c
  5059   001E1E  0E00               	movlw	0
  5060   001E20  2202               	addwfc	(___fladd@b+1)^0,f,c
  5061   001E22  2203               	addwfc	(___fladd@b+2)^0,f,c
  5062   001E24  2204               	addwfc	(___fladd@b+3)^0,f,c
  5063   001E26  A004               	btfss	(___fladd@b+3)^0,0,c
  5064   001E28  EF18  F00F         	goto	u6361
  5065   001E2C  EF1A  F00F         	goto	u6360
  5066   001E30                     u6361:
  5067   001E30  EF38  F00F         	goto	l6213
  5068   001E34                     u6360:
  5069   001E34  C001  F009         	movff	___fladd@b,??___fladd
  5070   001E38  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5071   001E3C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5072   001E40  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5073   001E44  340C               	rlcf	(??___fladd+3)^0,w,c
  5074   001E46  320C               	rrcf	(??___fladd+3)^0,f,c
  5075   001E48  320B               	rrcf	(??___fladd+2)^0,f,c
  5076   001E4A  320A               	rrcf	(??___fladd+1)^0,f,c
  5077   001E4C  3209               	rrcf	??___fladd^0,f,c
  5078   001E4E  C009  F001         	movff	??___fladd,___fladd@b
  5079   001E52  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5080   001E56  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5081   001E5A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5082   001E5E  280F               	incf	___fladd@bexp^0,w,c
  5083   001E60  B4D8               	btfsc	status,2,c
  5084   001E62  EF35  F00F         	goto	u6371
  5085   001E66  EF37  F00F         	goto	u6370
  5086   001E6A                     u6371:
  5087   001E6A  EF38  F00F         	goto	l6213
  5088   001E6E                     u6370:
  5089   001E6E  2A0F               	incf	___fladd@bexp^0,f,c
  5090   001E70                     l6213:
  5091   001E70  280F               	incf	___fladd@bexp^0,w,c
  5092   001E72  B4D8               	btfsc	status,2,c
  5093   001E74  EF3E  F00F         	goto	u6381
  5094   001E78  EF40  F00F         	goto	u6380
  5095   001E7C                     u6381:
  5096   001E7C  EF48  F00F         	goto	l6217
  5097   001E80                     u6380:
  5098   001E80  500F               	movf	___fladd@bexp^0,w,c
  5099   001E82  A4D8               	btfss	status,2,c
  5100   001E84  EF46  F00F         	goto	u6391
  5101   001E88  EF48  F00F         	goto	u6390
  5102   001E8C                     u6391:
  5103   001E8C  EF5A  F00F         	goto	l6221
  5104   001E90                     u6390:
  5105   001E90                     l6217:
  5106   001E90  0E00               	movlw	0
  5107   001E92  6E01               	movwf	___fladd@b^0,c
  5108   001E94  0E00               	movlw	0
  5109   001E96  6E02               	movwf	(___fladd@b+1)^0,c
  5110   001E98  0E00               	movlw	0
  5111   001E9A  6E03               	movwf	(___fladd@b+2)^0,c
  5112   001E9C  0E00               	movlw	0
  5113   001E9E  6E04               	movwf	(___fladd@b+3)^0,c
  5114   001EA0  500F               	movf	___fladd@bexp^0,w,c
  5115   001EA2  A4D8               	btfss	status,2,c
  5116   001EA4  EF56  F00F         	goto	u6401
  5117   001EA8  EF58  F00F         	goto	u6400
  5118   001EAC                     u6401:
  5119   001EAC  EF5A  F00F         	goto	l6221
  5120   001EB0                     u6400:
  5121   001EB0  0E00               	movlw	0
  5122   001EB2  6E0D               	movwf	___fladd@signs^0,c
  5123   001EB4                     l6221:
  5124   001EB4  A00F               	btfss	___fladd@bexp^0,0,c
  5125   001EB6  EF5F  F00F         	goto	u6411
  5126   001EBA  EF61  F00F         	goto	u6410
  5127   001EBE                     u6411:
  5128   001EBE  EF64  F00F         	goto	l6225
  5129   001EC2                     u6410:
  5130   001EC2  8E03               	bsf	(___fladd@b+2)^0,7,c
  5131   001EC4  EF65  F00F         	goto	l6227
  5132   001EC8                     l6225:
  5133   001EC8  9E03               	bcf	(___fladd@b+2)^0,7,c
  5134   001ECA                     l6227:
  5135   001ECA  90D8               	bcf	status,0,c
  5136   001ECC  300F               	rrcf	___fladd@bexp^0,w,c
  5137   001ECE  6E04               	movwf	(___fladd@b+3)^0,c
  5138   001ED0  AE0D               	btfss	___fladd@signs^0,7,c
  5139   001ED2  EF6D  F00F         	goto	u6421
  5140   001ED6  EF6F  F00F         	goto	u6420
  5141   001EDA                     u6421:
  5142   001EDA  EF70  F00F         	goto	l6233
  5143   001EDE                     u6420:
  5144   001EDE  8E04               	bsf	(___fladd@b+3)^0,7,c
  5145   001EE0                     l6233:
  5146   001EE0  C001  F001         	movff	___fladd@b,?___fladd
  5147   001EE4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5148   001EE8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5149   001EEC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5150   001EF0                     l1116:
  5151   001EF0  0012               	return		;funcret
  5152   001EF2                     __end_of___fladd:
  5153                           	callstack 0
  5154                           
  5155 ;; *************** function ___flneg *****************
  5156 ;; Defined at:
  5157 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  f1              4    0[COMRAM] unsigned char 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  4    0[COMRAM] unsigned char 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;Total ram usage:        4 bytes
  5176 ;; Hardware stack levels used: 1
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_efgtoa
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text16
  5185   0043B0                     __ptext16:
  5186                           	callstack 0
  5187   0043B0                     ___flneg:
  5188                           	callstack 25
  5189   0043B0  5001               	movf	___flneg@f1^0,w,c
  5190   0043B2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5191   0043B4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5192   0043B6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5193   0043B8  B4D8               	btfsc	status,2,c
  5194   0043BA  EFE1  F021         	goto	u7061
  5195   0043BE  EFE3  F021         	goto	u7060
  5196   0043C2                     u7061:
  5197   0043C2  EFEB  F021         	goto	l6647
  5198   0043C6                     u7060:
  5199   0043C6  0E00               	movlw	0
  5200   0043C8  1A01               	xorwf	___flneg@f1^0,f,c
  5201   0043CA  0E00               	movlw	0
  5202   0043CC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5203   0043CE  0E00               	movlw	0
  5204   0043D0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5205   0043D2  0E80               	movlw	128
  5206   0043D4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5207   0043D6                     l6647:
  5208   0043D6  C001  F001         	movff	___flneg@f1,?___flneg
  5209   0043DA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5210   0043DE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5211   0043E2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5212   0043E6  0012               	return		;funcret
  5213   0043E8                     __end_of___flneg:
  5214                           	callstack 0
  5215                           
  5216 ;; *************** function ___flmul *****************
  5217 ;; Defined at:
  5218 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  b               4    0[COMRAM] unsigned char 
  5221 ;;  a               4    4[COMRAM] unsigned char 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  prod            4   19[COMRAM] struct .
  5224 ;;  grs             4   14[COMRAM] unsigned long 
  5225 ;;  temp            2   23[COMRAM] struct .
  5226 ;;  bexp            1   18[COMRAM] unsigned char 
  5227 ;;  aexp            1   13[COMRAM] unsigned char 
  5228 ;;  sign            1   12[COMRAM] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  4    0[COMRAM] unsigned char 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0, prodl, prodh
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5238 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;Total ram usage:       25 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_efgtoa
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text17
  5252   001EF2                     __ptext17:
  5253                           	callstack 0
  5254   001EF2                     ___flmul:
  5255                           	callstack 25
  5256   001EF2  5004               	movf	(___flmul@b+3)^0,w,c
  5257   001EF4  0B80               	andlw	128
  5258   001EF6  6E0D               	movwf	___flmul@sign^0,c
  5259   001EF8  5004               	movf	(___flmul@b+3)^0,w,c
  5260   001EFA  2404               	addwf	(___flmul@b+3)^0,w,c
  5261   001EFC  6E13               	movwf	___flmul@bexp^0,c
  5262   001EFE  AE03               	btfss	(___flmul@b+2)^0,7,c
  5263   001F00  EF84  F00F         	goto	u6671
  5264   001F04  EF86  F00F         	goto	u6670
  5265   001F08                     u6671:
  5266   001F08  EF87  F00F         	goto	l6395
  5267   001F0C                     u6670:
  5268   001F0C  8013               	bsf	___flmul@bexp^0,0,c
  5269   001F0E                     l6395:
  5270   001F0E  5013               	movf	___flmul@bexp^0,w,c
  5271   001F10  B4D8               	btfsc	status,2,c
  5272   001F12  EF8D  F00F         	goto	u6681
  5273   001F16  EF8F  F00F         	goto	u6680
  5274   001F1A                     u6681:
  5275   001F1A  EFA2  F00F         	goto	l6403
  5276   001F1E                     u6680:
  5277   001F1E  2813               	incf	___flmul@bexp^0,w,c
  5278   001F20  A4D8               	btfss	status,2,c
  5279   001F22  EF95  F00F         	goto	u6691
  5280   001F26  EF97  F00F         	goto	u6690
  5281   001F2A                     u6691:
  5282   001F2A  EF9F  F00F         	goto	l6401
  5283   001F2E                     u6690:
  5284   001F2E  0E00               	movlw	0
  5285   001F30  6E01               	movwf	___flmul@b^0,c
  5286   001F32  0E00               	movlw	0
  5287   001F34  6E02               	movwf	(___flmul@b+1)^0,c
  5288   001F36  0E00               	movlw	0
  5289   001F38  6E03               	movwf	(___flmul@b+2)^0,c
  5290   001F3A  0E00               	movlw	0
  5291   001F3C  6E04               	movwf	(___flmul@b+3)^0,c
  5292   001F3E                     l6401:
  5293   001F3E  8E03               	bsf	(___flmul@b+2)^0,7,c
  5294   001F40  EFAA  F00F         	goto	l6405
  5295   001F44                     l6403:
  5296   001F44  0E00               	movlw	0
  5297   001F46  6E01               	movwf	___flmul@b^0,c
  5298   001F48  0E00               	movlw	0
  5299   001F4A  6E02               	movwf	(___flmul@b+1)^0,c
  5300   001F4C  0E00               	movlw	0
  5301   001F4E  6E03               	movwf	(___flmul@b+2)^0,c
  5302   001F50  0E00               	movlw	0
  5303   001F52  6E04               	movwf	(___flmul@b+3)^0,c
  5304   001F54                     l6405:
  5305   001F54  5008               	movf	(___flmul@a+3)^0,w,c
  5306   001F56  0B80               	andlw	128
  5307   001F58  1A0D               	xorwf	___flmul@sign^0,f,c
  5308   001F5A  5008               	movf	(___flmul@a+3)^0,w,c
  5309   001F5C  2408               	addwf	(___flmul@a+3)^0,w,c
  5310   001F5E  6E0E               	movwf	___flmul@aexp^0,c
  5311   001F60  AE07               	btfss	(___flmul@a+2)^0,7,c
  5312   001F62  EFB5  F00F         	goto	u6701
  5313   001F66  EFB7  F00F         	goto	u6700
  5314   001F6A                     u6701:
  5315   001F6A  EFB8  F00F         	goto	l6413
  5316   001F6E                     u6700:
  5317   001F6E  800E               	bsf	___flmul@aexp^0,0,c
  5318   001F70                     l6413:
  5319   001F70  500E               	movf	___flmul@aexp^0,w,c
  5320   001F72  B4D8               	btfsc	status,2,c
  5321   001F74  EFBE  F00F         	goto	u6711
  5322   001F78  EFC0  F00F         	goto	u6710
  5323   001F7C                     u6711:
  5324   001F7C  EFD3  F00F         	goto	l6421
  5325   001F80                     u6710:
  5326   001F80  280E               	incf	___flmul@aexp^0,w,c
  5327   001F82  A4D8               	btfss	status,2,c
  5328   001F84  EFC6  F00F         	goto	u6721
  5329   001F88  EFC8  F00F         	goto	u6720
  5330   001F8C                     u6721:
  5331   001F8C  EFD0  F00F         	goto	l6419
  5332   001F90                     u6720:
  5333   001F90  0E00               	movlw	0
  5334   001F92  6E05               	movwf	___flmul@a^0,c
  5335   001F94  0E00               	movlw	0
  5336   001F96  6E06               	movwf	(___flmul@a+1)^0,c
  5337   001F98  0E00               	movlw	0
  5338   001F9A  6E07               	movwf	(___flmul@a+2)^0,c
  5339   001F9C  0E00               	movlw	0
  5340   001F9E  6E08               	movwf	(___flmul@a+3)^0,c
  5341   001FA0                     l6419:
  5342   001FA0  8E07               	bsf	(___flmul@a+2)^0,7,c
  5343   001FA2  EFDB  F00F         	goto	l1193
  5344   001FA6                     l6421:
  5345   001FA6  0E00               	movlw	0
  5346   001FA8  6E05               	movwf	___flmul@a^0,c
  5347   001FAA  0E00               	movlw	0
  5348   001FAC  6E06               	movwf	(___flmul@a+1)^0,c
  5349   001FAE  0E00               	movlw	0
  5350   001FB0  6E07               	movwf	(___flmul@a+2)^0,c
  5351   001FB2  0E00               	movlw	0
  5352   001FB4  6E08               	movwf	(___flmul@a+3)^0,c
  5353   001FB6                     l1193:
  5354   001FB6  500E               	movf	___flmul@aexp^0,w,c
  5355   001FB8  B4D8               	btfsc	status,2,c
  5356   001FBA  EFE1  F00F         	goto	u6731
  5357   001FBE  EFE3  F00F         	goto	u6730
  5358   001FC2                     u6731:
  5359   001FC2  EFEB  F00F         	goto	l6425
  5360   001FC6                     u6730:
  5361   001FC6  5013               	movf	___flmul@bexp^0,w,c
  5362   001FC8  A4D8               	btfss	status,2,c
  5363   001FCA  EFE9  F00F         	goto	u6741
  5364   001FCE  EFEB  F00F         	goto	u6740
  5365   001FD2                     u6741:
  5366   001FD2  EFF5  F00F         	goto	l6429
  5367   001FD6                     u6740:
  5368   001FD6                     l6425:
  5369   001FD6  0E00               	movlw	0
  5370   001FD8  6E01               	movwf	?___flmul^0,c
  5371   001FDA  0E00               	movlw	0
  5372   001FDC  6E02               	movwf	(?___flmul+1)^0,c
  5373   001FDE  0E00               	movlw	0
  5374   001FE0  6E03               	movwf	(?___flmul+2)^0,c
  5375   001FE2  0E00               	movlw	0
  5376   001FE4  6E04               	movwf	(?___flmul+3)^0,c
  5377   001FE6  EF8D  F011         	goto	l1197
  5378   001FEA                     l6429:
  5379   001FEA  5007               	movf	(___flmul@a+2)^0,w,c
  5380   001FEC  0201               	mulwf	___flmul@b^0,c
  5381   001FEE  CFF3 F018          	movff	prodl,___flmul@temp
  5382   001FF2  CFF4 F019          	movff	prodh,___flmul@temp+1
  5383   001FF6  5018               	movf	___flmul@temp^0,w,c
  5384   001FF8  6E0F               	movwf	___flmul@grs^0,c
  5385   001FFA  6A10               	clrf	(___flmul@grs+1)^0,c
  5386   001FFC  6A11               	clrf	(___flmul@grs+2)^0,c
  5387   001FFE  6A12               	clrf	(___flmul@grs+3)^0,c
  5388   002000  5019               	movf	(___flmul@temp+1)^0,w,c
  5389   002002  6E14               	movwf	___flmul@prod^0,c
  5390   002004  6A15               	clrf	(___flmul@prod+1)^0,c
  5391   002006  6A16               	clrf	(___flmul@prod+2)^0,c
  5392   002008  6A17               	clrf	(___flmul@prod+3)^0,c
  5393   00200A  5006               	movf	(___flmul@a+1)^0,w,c
  5394   00200C  0202               	mulwf	(___flmul@b+1)^0,c
  5395   00200E  CFF3 F018          	movff	prodl,___flmul@temp
  5396   002012  CFF4 F019          	movff	prodh,___flmul@temp+1
  5397   002016  5018               	movf	___flmul@temp^0,w,c
  5398   002018  260F               	addwf	___flmul@grs^0,f,c
  5399   00201A  0E00               	movlw	0
  5400   00201C  2210               	addwfc	(___flmul@grs+1)^0,f,c
  5401   00201E  2211               	addwfc	(___flmul@grs+2)^0,f,c
  5402   002020  2212               	addwfc	(___flmul@grs+3)^0,f,c
  5403   002022  5019               	movf	(___flmul@temp+1)^0,w,c
  5404   002024  2614               	addwf	___flmul@prod^0,f,c
  5405   002026  0E00               	movlw	0
  5406   002028  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5407   00202A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5408   00202C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5409   00202E  5005               	movf	___flmul@a^0,w,c
  5410   002030  0203               	mulwf	(___flmul@b+2)^0,c
  5411   002032  CFF3 F018          	movff	prodl,___flmul@temp
  5412   002036  CFF4 F019          	movff	prodh,___flmul@temp+1
  5413   00203A  5018               	movf	___flmul@temp^0,w,c
  5414   00203C  260F               	addwf	___flmul@grs^0,f,c
  5415   00203E  0E00               	movlw	0
  5416   002040  2210               	addwfc	(___flmul@grs+1)^0,f,c
  5417   002042  2211               	addwfc	(___flmul@grs+2)^0,f,c
  5418   002044  2212               	addwfc	(___flmul@grs+3)^0,f,c
  5419   002046  5019               	movf	(___flmul@temp+1)^0,w,c
  5420   002048  2614               	addwf	___flmul@prod^0,f,c
  5421   00204A  0E00               	movlw	0
  5422   00204C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5423   00204E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5424   002050  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5425   002052  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  5426   002056  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  5427   00205A  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  5428   00205E  6A0F               	clrf	___flmul@grs^0,c
  5429   002060  5005               	movf	___flmul@a^0,w,c
  5430   002062  0202               	mulwf	(___flmul@b+1)^0,c
  5431   002064  CFF3 F018          	movff	prodl,___flmul@temp
  5432   002068  CFF4 F019          	movff	prodh,___flmul@temp+1
  5433   00206C  5018               	movf	___flmul@temp^0,w,c
  5434   00206E  260F               	addwf	___flmul@grs^0,f,c
  5435   002070  5019               	movf	(___flmul@temp+1)^0,w,c
  5436   002072  2210               	addwfc	(___flmul@grs+1)^0,f,c
  5437   002074  0E00               	movlw	0
  5438   002076  2211               	addwfc	(___flmul@grs+2)^0,f,c
  5439   002078  0E00               	movlw	0
  5440   00207A  2212               	addwfc	(___flmul@grs+3)^0,f,c
  5441   00207C  5006               	movf	(___flmul@a+1)^0,w,c
  5442   00207E  0201               	mulwf	___flmul@b^0,c
  5443   002080  CFF3 F018          	movff	prodl,___flmul@temp
  5444   002084  CFF4 F019          	movff	prodh,___flmul@temp+1
  5445   002088  5018               	movf	___flmul@temp^0,w,c
  5446   00208A  260F               	addwf	___flmul@grs^0,f,c
  5447   00208C  5019               	movf	(___flmul@temp+1)^0,w,c
  5448   00208E  2210               	addwfc	(___flmul@grs+1)^0,f,c
  5449   002090  0E00               	movlw	0
  5450   002092  2211               	addwfc	(___flmul@grs+2)^0,f,c
  5451   002094  0E00               	movlw	0
  5452   002096  2212               	addwfc	(___flmul@grs+3)^0,f,c
  5453   002098  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  5454   00209C  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  5455   0020A0  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  5456   0020A4  6A0F               	clrf	___flmul@grs^0,c
  5457   0020A6  5005               	movf	___flmul@a^0,w,c
  5458   0020A8  0201               	mulwf	___flmul@b^0,c
  5459   0020AA  CFF3 F018          	movff	prodl,___flmul@temp
  5460   0020AE  CFF4 F019          	movff	prodh,___flmul@temp+1
  5461   0020B2  5018               	movf	___flmul@temp^0,w,c
  5462   0020B4  260F               	addwf	___flmul@grs^0,f,c
  5463   0020B6  5019               	movf	(___flmul@temp+1)^0,w,c
  5464   0020B8  2210               	addwfc	(___flmul@grs+1)^0,f,c
  5465   0020BA  0E00               	movlw	0
  5466   0020BC  2211               	addwfc	(___flmul@grs+2)^0,f,c
  5467   0020BE  0E00               	movlw	0
  5468   0020C0  2212               	addwfc	(___flmul@grs+3)^0,f,c
  5469   0020C2  5007               	movf	(___flmul@a+2)^0,w,c
  5470   0020C4  0202               	mulwf	(___flmul@b+1)^0,c
  5471   0020C6  CFF3 F018          	movff	prodl,___flmul@temp
  5472   0020CA  CFF4 F019          	movff	prodh,___flmul@temp+1
  5473   0020CE  5018               	movf	___flmul@temp^0,w,c
  5474   0020D0  2614               	addwf	___flmul@prod^0,f,c
  5475   0020D2  5019               	movf	(___flmul@temp+1)^0,w,c
  5476   0020D4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5477   0020D6  0E00               	movlw	0
  5478   0020D8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5479   0020DA  0E00               	movlw	0
  5480   0020DC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5481   0020DE  5006               	movf	(___flmul@a+1)^0,w,c
  5482   0020E0  0203               	mulwf	(___flmul@b+2)^0,c
  5483   0020E2  CFF3 F018          	movff	prodl,___flmul@temp
  5484   0020E6  CFF4 F019          	movff	prodh,___flmul@temp+1
  5485   0020EA  5018               	movf	___flmul@temp^0,w,c
  5486   0020EC  2614               	addwf	___flmul@prod^0,f,c
  5487   0020EE  5019               	movf	(___flmul@temp+1)^0,w,c
  5488   0020F0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5489   0020F2  0E00               	movlw	0
  5490   0020F4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5491   0020F6  0E00               	movlw	0
  5492   0020F8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5493   0020FA  5007               	movf	(___flmul@a+2)^0,w,c
  5494   0020FC  0203               	mulwf	(___flmul@b+2)^0,c
  5495   0020FE  CFF3 F018          	movff	prodl,___flmul@temp
  5496   002102  CFF4 F019          	movff	prodh,___flmul@temp+1
  5497   002106  5018               	movf	___flmul@temp^0,w,c
  5498   002108  6E09               	movwf	??___flmul^0,c
  5499   00210A  5019               	movf	(___flmul@temp+1)^0,w,c
  5500   00210C  6E0A               	movwf	(??___flmul+1)^0,c
  5501   00210E  6A0B               	clrf	(??___flmul+2)^0,c
  5502   002110  6A0C               	clrf	(??___flmul+3)^0,c
  5503   002112  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5504   002116  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5505   00211A  C009  F00A         	movff	??___flmul,??___flmul+1
  5506   00211E  6A09               	clrf	??___flmul^0,c
  5507   002120  5009               	movf	??___flmul^0,w,c
  5508   002122  2614               	addwf	___flmul@prod^0,f,c
  5509   002124  500A               	movf	(??___flmul+1)^0,w,c
  5510   002126  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5511   002128  500B               	movf	(??___flmul+2)^0,w,c
  5512   00212A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5513   00212C  500C               	movf	(??___flmul+3)^0,w,c
  5514   00212E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5515   002130  C00F  F009         	movff	___flmul@grs,??___flmul
  5516   002134  C010  F00A         	movff	___flmul@grs+1,??___flmul+1
  5517   002138  C011  F00B         	movff	___flmul@grs+2,??___flmul+2
  5518   00213C  C012  F00C         	movff	___flmul@grs+3,??___flmul+3
  5519   002140  0E19               	movlw	25
  5520   002142  EFA8  F010         	goto	u6750
  5521   002146                     u6755:
  5522   002146  90D8               	bcf	status,0,c
  5523   002148  320C               	rrcf	(??___flmul+3)^0,f,c
  5524   00214A  320B               	rrcf	(??___flmul+2)^0,f,c
  5525   00214C  320A               	rrcf	(??___flmul+1)^0,f,c
  5526   00214E  3209               	rrcf	??___flmul^0,f,c
  5527   002150                     u6750:
  5528   002150  2EE8               	decfsz	wreg,f,c
  5529   002152  EFA3  F010         	goto	u6755
  5530   002156  5009               	movf	??___flmul^0,w,c
  5531   002158  2614               	addwf	___flmul@prod^0,f,c
  5532   00215A  500A               	movf	(??___flmul+1)^0,w,c
  5533   00215C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5534   00215E  500B               	movf	(??___flmul+2)^0,w,c
  5535   002160  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5536   002162  500C               	movf	(??___flmul+3)^0,w,c
  5537   002164  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5538   002166  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  5539   00216A  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  5540   00216E  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  5541   002172  6A0F               	clrf	___flmul@grs^0,c
  5542   002174  500E               	movf	___flmul@aexp^0,w,c
  5543   002176  C013  F009         	movff	___flmul@bexp,??___flmul
  5544   00217A  6A0A               	clrf	(??___flmul+1)^0,c
  5545   00217C  2609               	addwf	??___flmul^0,f,c
  5546   00217E  0E00               	movlw	0
  5547   002180  220A               	addwfc	(??___flmul+1)^0,f,c
  5548   002182  0E82               	movlw	130
  5549   002184  2409               	addwf	??___flmul^0,w,c
  5550   002186  6E18               	movwf	___flmul@temp^0,c
  5551   002188  0EFF               	movlw	255
  5552   00218A  200A               	addwfc	(??___flmul+1)^0,w,c
  5553   00218C  6E19               	movwf	(___flmul@temp+1)^0,c
  5554   00218E  EFDE  F010         	goto	l6477
  5555   002192                     l6471:
  5556   002192  90D8               	bcf	status,0,c
  5557   002194  3614               	rlcf	___flmul@prod^0,f,c
  5558   002196  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5559   002198  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5560   00219A  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5561   00219C  AE12               	btfss	(___flmul@grs+3)^0,7,c
  5562   00219E  EFD3  F010         	goto	u6761
  5563   0021A2  EFD5  F010         	goto	u6760
  5564   0021A6                     u6761:
  5565   0021A6  EFD6  F010         	goto	l1200
  5566   0021AA                     u6760:
  5567   0021AA  8014               	bsf	___flmul@prod^0,0,c
  5568   0021AC                     l1200:
  5569   0021AC  90D8               	bcf	status,0,c
  5570   0021AE  360F               	rlcf	___flmul@grs^0,f,c
  5571   0021B0  3610               	rlcf	(___flmul@grs+1)^0,f,c
  5572   0021B2  3611               	rlcf	(___flmul@grs+2)^0,f,c
  5573   0021B4  3612               	rlcf	(___flmul@grs+3)^0,f,c
  5574   0021B6  0618               	decf	___flmul@temp^0,f,c
  5575   0021B8  A0D8               	btfss	status,0,c
  5576   0021BA  0619               	decf	(___flmul@temp+1)^0,f,c
  5577   0021BC                     l6477:
  5578   0021BC  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5579   0021BE  EFE3  F010         	goto	u6771
  5580   0021C2  EFE5  F010         	goto	u6770
  5581   0021C6                     u6771:
  5582   0021C6  EFC9  F010         	goto	l6471
  5583   0021CA                     u6770:
  5584   0021CA  0E00               	movlw	0
  5585   0021CC  6E0E               	movwf	___flmul@aexp^0,c
  5586   0021CE  AE12               	btfss	(___flmul@grs+3)^0,7,c
  5587   0021D0  EFEC  F010         	goto	u6781
  5588   0021D4  EFEE  F010         	goto	u6780
  5589   0021D8                     u6781:
  5590   0021D8  EF12  F011         	goto	l1202
  5591   0021DC                     u6780:
  5592   0021DC  0EFF               	movlw	255
  5593   0021DE  140F               	andwf	___flmul@grs^0,w,c
  5594   0021E0  6E09               	movwf	??___flmul^0,c
  5595   0021E2  0EFF               	movlw	255
  5596   0021E4  1410               	andwf	(___flmul@grs+1)^0,w,c
  5597   0021E6  6E0A               	movwf	(??___flmul+1)^0,c
  5598   0021E8  0EFF               	movlw	255
  5599   0021EA  1411               	andwf	(___flmul@grs+2)^0,w,c
  5600   0021EC  6E0B               	movwf	(??___flmul+2)^0,c
  5601   0021EE  0E7F               	movlw	127
  5602   0021F0  1412               	andwf	(___flmul@grs+3)^0,w,c
  5603   0021F2  6E0C               	movwf	(??___flmul+3)^0,c
  5604   0021F4  5009               	movf	??___flmul^0,w,c
  5605   0021F6  100A               	iorwf	(??___flmul+1)^0,w,c
  5606   0021F8  100B               	iorwf	(??___flmul+2)^0,w,c
  5607   0021FA  100C               	iorwf	(??___flmul+3)^0,w,c
  5608   0021FC  B4D8               	btfsc	status,2,c
  5609   0021FE  EF03  F011         	goto	u6791
  5610   002202  EF05  F011         	goto	u6790
  5611   002206                     u6791:
  5612   002206  EF09  F011         	goto	l1203
  5613   00220A                     u6790:
  5614   00220A                     l6485:
  5615   00220A  0E01               	movlw	1
  5616   00220C  6E0E               	movwf	___flmul@aexp^0,c
  5617   00220E  EF12  F011         	goto	l1202
  5618   002212                     l1203:
  5619   002212  A014               	btfss	___flmul@prod^0,0,c
  5620   002214  EF0E  F011         	goto	u6801
  5621   002218  EF10  F011         	goto	u6800
  5622   00221C                     u6801:
  5623   00221C  EF12  F011         	goto	l1202
  5624   002220                     u6800:
  5625   002220  EF05  F011         	goto	l6485
  5626   002224                     l1202:
  5627   002224  500E               	movf	___flmul@aexp^0,w,c
  5628   002226  B4D8               	btfsc	status,2,c
  5629   002228  EF18  F011         	goto	u6811
  5630   00222C  EF1A  F011         	goto	u6810
  5631   002230                     u6811:
  5632   002230  EF3E  F011         	goto	l6497
  5633   002234                     u6810:
  5634   002234  0E01               	movlw	1
  5635   002236  2614               	addwf	___flmul@prod^0,f,c
  5636   002238  0E00               	movlw	0
  5637   00223A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5638   00223C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5639   00223E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5640   002240  A017               	btfss	(___flmul@prod+3)^0,0,c
  5641   002242  EF25  F011         	goto	u6821
  5642   002246  EF27  F011         	goto	u6820
  5643   00224A                     u6821:
  5644   00224A  EF3E  F011         	goto	l6497
  5645   00224E                     u6820:
  5646   00224E  C014  F009         	movff	___flmul@prod,??___flmul
  5647   002252  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5648   002256  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5649   00225A  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5650   00225E  340C               	rlcf	(??___flmul+3)^0,w,c
  5651   002260  320C               	rrcf	(??___flmul+3)^0,f,c
  5652   002262  320B               	rrcf	(??___flmul+2)^0,f,c
  5653   002264  320A               	rrcf	(??___flmul+1)^0,f,c
  5654   002266  3209               	rrcf	??___flmul^0,f,c
  5655   002268  C009  F014         	movff	??___flmul,___flmul@prod
  5656   00226C  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5657   002270  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5658   002274  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5659   002278  4A18               	infsnz	___flmul@temp^0,f,c
  5660   00227A  2A19               	incf	(___flmul@temp+1)^0,f,c
  5661   00227C                     l6497:
  5662   00227C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5663   00227E  EF49  F011         	goto	u6831
  5664   002282  5019               	movf	(___flmul@temp+1)^0,w,c
  5665   002284  E108               	bnz	u6830
  5666   002286  2818               	incf	___flmul@temp^0,w,c
  5667   002288  A0D8               	btfss	status,0,c
  5668   00228A  EF49  F011         	goto	u6831
  5669   00228E  EF4B  F011         	goto	u6830
  5670   002292                     u6831:
  5671   002292  EF55  F011         	goto	l6501
  5672   002296                     u6830:
  5673   002296  0E00               	movlw	0
  5674   002298  6E14               	movwf	___flmul@prod^0,c
  5675   00229A  0E00               	movlw	0
  5676   00229C  6E15               	movwf	(___flmul@prod+1)^0,c
  5677   00229E  0E80               	movlw	128
  5678   0022A0  6E16               	movwf	(___flmul@prod+2)^0,c
  5679   0022A2  0E7F               	movlw	127
  5680   0022A4  6E17               	movwf	(___flmul@prod+3)^0,c
  5681   0022A6  EF83  F011         	goto	l6513
  5682   0022AA                     l6501:
  5683   0022AA  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5684   0022AC  EF62  F011         	goto	u6840
  5685   0022B0  5019               	movf	(___flmul@temp+1)^0,w,c
  5686   0022B2  E106               	bnz	u6841
  5687   0022B4  0418               	decf	___flmul@temp^0,w,c
  5688   0022B6  B0D8               	btfsc	status,0,c
  5689   0022B8  EF60  F011         	goto	u6841
  5690   0022BC  EF62  F011         	goto	u6840
  5691   0022C0                     u6841:
  5692   0022C0  EF6E  F011         	goto	l1210
  5693   0022C4                     u6840:
  5694   0022C4  0E00               	movlw	0
  5695   0022C6  6E14               	movwf	___flmul@prod^0,c
  5696   0022C8  0E00               	movlw	0
  5697   0022CA  6E15               	movwf	(___flmul@prod+1)^0,c
  5698   0022CC  0E00               	movlw	0
  5699   0022CE  6E16               	movwf	(___flmul@prod+2)^0,c
  5700   0022D0  0E00               	movlw	0
  5701   0022D2  6E17               	movwf	(___flmul@prod+3)^0,c
  5702   0022D4  0E00               	movlw	0
  5703   0022D6  6E0D               	movwf	___flmul@sign^0,c
  5704   0022D8  EF83  F011         	goto	l6513
  5705   0022DC                     l1210:
  5706   0022DC  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5707   0022E0  0EFF               	movlw	255
  5708   0022E2  1614               	andwf	___flmul@prod^0,f,c
  5709   0022E4  0EFF               	movlw	255
  5710   0022E6  1615               	andwf	(___flmul@prod+1)^0,f,c
  5711   0022E8  0E7F               	movlw	127
  5712   0022EA  1616               	andwf	(___flmul@prod+2)^0,f,c
  5713   0022EC  0E00               	movlw	0
  5714   0022EE  1617               	andwf	(___flmul@prod+3)^0,f,c
  5715   0022F0  A013               	btfss	___flmul@bexp^0,0,c
  5716   0022F2  EF7D  F011         	goto	u6851
  5717   0022F6  EF7F  F011         	goto	u6850
  5718   0022FA                     u6851:
  5719   0022FA  EF80  F011         	goto	l6511
  5720   0022FE                     u6850:
  5721   0022FE  8E16               	bsf	(___flmul@prod+2)^0,7,c
  5722   002300                     l6511:
  5723   002300  90D8               	bcf	status,0,c
  5724   002302  3013               	rrcf	___flmul@bexp^0,w,c
  5725   002304  6E17               	movwf	(___flmul@prod+3)^0,c
  5726   002306                     l6513:
  5727   002306  500D               	movf	___flmul@sign^0,w,c
  5728   002308  1217               	iorwf	(___flmul@prod+3)^0,f,c
  5729   00230A  C014  F001         	movff	___flmul@prod,?___flmul
  5730   00230E  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  5731   002312  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  5732   002316  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  5733   00231A                     l1197:
  5734   00231A  0012               	return		;funcret
  5735   00231C                     __end_of___flmul:
  5736                           	callstack 0
  5737                           
  5738 ;; *************** function ___flge *****************
  5739 ;; Defined at:
  5740 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  ff1             4   25[COMRAM] unsigned char 
  5743 ;;  ff2             4   29[COMRAM] unsigned char 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;		None
  5746 ;; Return value:  Size  Location     Type
  5747 ;;		None               void
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5755 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;Total ram usage:       12 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_efgtoa
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text18
  5769   003262                     __ptext18:
  5770                           	callstack 0
  5771   003262                     ___flge:
  5772                           	callstack 25
  5773   003262  0E00               	movlw	0
  5774   003264  141A               	andwf	___flge@ff1^0,w,c
  5775   003266  6E22               	movwf	??___flge^0,c
  5776   003268  0E00               	movlw	0
  5777   00326A  141B               	andwf	(___flge@ff1+1)^0,w,c
  5778   00326C  6E23               	movwf	(??___flge+1)^0,c
  5779   00326E  0E80               	movlw	128
  5780   003270  141C               	andwf	(___flge@ff1+2)^0,w,c
  5781   003272  6E24               	movwf	(??___flge+2)^0,c
  5782   003274  0E7F               	movlw	127
  5783   003276  141D               	andwf	(___flge@ff1+3)^0,w,c
  5784   003278  6E25               	movwf	(??___flge+3)^0,c
  5785   00327A  5022               	movf	??___flge^0,w,c
  5786   00327C  1023               	iorwf	(??___flge+1)^0,w,c
  5787   00327E  1024               	iorwf	(??___flge+2)^0,w,c
  5788   003280  1025               	iorwf	(??___flge+3)^0,w,c
  5789   003282  A4D8               	btfss	status,2,c
  5790   003284  EF46  F019         	goto	u7011
  5791   003288  EF48  F019         	goto	u7010
  5792   00328C                     u7011:
  5793   00328C  EF50  F019         	goto	l6625
  5794   003290                     u7010:
  5795   003290  0E00               	movlw	0
  5796   003292  6E1A               	movwf	___flge@ff1^0,c
  5797   003294  0E00               	movlw	0
  5798   003296  6E1B               	movwf	(___flge@ff1+1)^0,c
  5799   003298  0E00               	movlw	0
  5800   00329A  6E1C               	movwf	(___flge@ff1+2)^0,c
  5801   00329C  0E00               	movlw	0
  5802   00329E  6E1D               	movwf	(___flge@ff1+3)^0,c
  5803   0032A0                     l6625:
  5804   0032A0  0E00               	movlw	0
  5805   0032A2  141E               	andwf	___flge@ff2^0,w,c
  5806   0032A4  6E22               	movwf	??___flge^0,c
  5807   0032A6  0E00               	movlw	0
  5808   0032A8  141F               	andwf	(___flge@ff2+1)^0,w,c
  5809   0032AA  6E23               	movwf	(??___flge+1)^0,c
  5810   0032AC  0E80               	movlw	128
  5811   0032AE  1420               	andwf	(___flge@ff2+2)^0,w,c
  5812   0032B0  6E24               	movwf	(??___flge+2)^0,c
  5813   0032B2  0E7F               	movlw	127
  5814   0032B4  1421               	andwf	(___flge@ff2+3)^0,w,c
  5815   0032B6  6E25               	movwf	(??___flge+3)^0,c
  5816   0032B8  5022               	movf	??___flge^0,w,c
  5817   0032BA  1023               	iorwf	(??___flge+1)^0,w,c
  5818   0032BC  1024               	iorwf	(??___flge+2)^0,w,c
  5819   0032BE  1025               	iorwf	(??___flge+3)^0,w,c
  5820   0032C0  A4D8               	btfss	status,2,c
  5821   0032C2  EF65  F019         	goto	u7021
  5822   0032C6  EF67  F019         	goto	u7020
  5823   0032CA                     u7021:
  5824   0032CA  EF6F  F019         	goto	l6629
  5825   0032CE                     u7020:
  5826   0032CE  0E00               	movlw	0
  5827   0032D0  6E1E               	movwf	___flge@ff2^0,c
  5828   0032D2  0E00               	movlw	0
  5829   0032D4  6E1F               	movwf	(___flge@ff2+1)^0,c
  5830   0032D6  0E00               	movlw	0
  5831   0032D8  6E20               	movwf	(___flge@ff2+2)^0,c
  5832   0032DA  0E00               	movlw	0
  5833   0032DC  6E21               	movwf	(___flge@ff2+3)^0,c
  5834   0032DE                     l6629:
  5835   0032DE  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  5836   0032E0  EF74  F019         	goto	u7031
  5837   0032E4  EF76  F019         	goto	u7030
  5838   0032E8                     u7031:
  5839   0032E8  EF7F  F019         	goto	l6633
  5840   0032EC                     u7030:
  5841   0032EC  6C1A               	negf	___flge@ff1^0,c
  5842   0032EE  1E1B               	comf	(___flge@ff1+1)^0,f,c
  5843   0032F0  B0D8               	btfsc	status,0,c
  5844   0032F2  2A1B               	incf	(___flge@ff1+1)^0,f,c
  5845   0032F4  1E1C               	comf	(___flge@ff1+2)^0,f,c
  5846   0032F6  B0D8               	btfsc	status,0,c
  5847   0032F8  2A1C               	incf	(___flge@ff1+2)^0,f,c
  5848   0032FA  0E80               	movlw	128
  5849   0032FC  561D               	subfwb	(___flge@ff1+3)^0,f,c
  5850   0032FE                     l6633:
  5851   0032FE  AE21               	btfss	(___flge@ff2+3)^0,7,c
  5852   003300  EF84  F019         	goto	u7041
  5853   003304  EF86  F019         	goto	u7040
  5854   003308                     u7041:
  5855   003308  EF8F  F019         	goto	l844
  5856   00330C                     u7040:
  5857   00330C  6C1E               	negf	___flge@ff2^0,c
  5858   00330E  1E1F               	comf	(___flge@ff2+1)^0,f,c
  5859   003310  B0D8               	btfsc	status,0,c
  5860   003312  2A1F               	incf	(___flge@ff2+1)^0,f,c
  5861   003314  1E20               	comf	(___flge@ff2+2)^0,f,c
  5862   003316  B0D8               	btfsc	status,0,c
  5863   003318  2A20               	incf	(___flge@ff2+2)^0,f,c
  5864   00331A  0E80               	movlw	128
  5865   00331C  5621               	subfwb	(___flge@ff2+3)^0,f,c
  5866   00331E                     l844:
  5867   00331E  0E00               	movlw	0
  5868   003320  1A1A               	xorwf	___flge@ff1^0,f,c
  5869   003322  0E00               	movlw	0
  5870   003324  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  5871   003326  0E00               	movlw	0
  5872   003328  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  5873   00332A  0E80               	movlw	128
  5874   00332C  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  5875   00332E  0E00               	movlw	0
  5876   003330  1A1E               	xorwf	___flge@ff2^0,f,c
  5877   003332  0E00               	movlw	0
  5878   003334  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  5879   003336  0E00               	movlw	0
  5880   003338  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  5881   00333A  0E80               	movlw	128
  5882   00333C  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  5883   00333E  501E               	movf	___flge@ff2^0,w,c
  5884   003340  5C1A               	subwf	___flge@ff1^0,w,c
  5885   003342  501F               	movf	(___flge@ff2+1)^0,w,c
  5886   003344  581B               	subwfb	(___flge@ff1+1)^0,w,c
  5887   003346  5020               	movf	(___flge@ff2+2)^0,w,c
  5888   003348  581C               	subwfb	(___flge@ff1+2)^0,w,c
  5889   00334A  5021               	movf	(___flge@ff2+3)^0,w,c
  5890   00334C  581D               	subwfb	(___flge@ff1+3)^0,w,c
  5891   00334E  B0D8               	btfsc	status,0,c
  5892   003350  EFAC  F019         	goto	u7051
  5893   003354  EFAE  F019         	goto	u7050
  5894   003358                     u7051:
  5895   003358  EFB1  F019         	goto	l6639
  5896   00335C                     u7050:
  5897   00335C  90D8               	bcf	status,0,c
  5898   00335E  EFB2  F019         	goto	l849
  5899   003362                     l6639:
  5900   003362  80D8               	bsf	status,0,c
  5901   003364                     l849:
  5902   003364  0012               	return		;funcret
  5903   003366                     __end_of___flge:
  5904                           	callstack 0
  5905                           
  5906 ;; *************** function ___fleq *****************
  5907 ;; Defined at:
  5908 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  ff1             4    0[COMRAM] unsigned char 
  5911 ;;  ff2             4    4[COMRAM] unsigned char 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;		None               void
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5923 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;Total ram usage:       12 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_efgtoa
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text19
  5937   003AA2                     __ptext19:
  5938                           	callstack 0
  5939   003AA2                     ___fleq:
  5940                           	callstack 25
  5941   003AA2  0E00               	movlw	0
  5942   003AA4  1401               	andwf	___fleq@ff1^0,w,c
  5943   003AA6  6E09               	movwf	??___fleq^0,c
  5944   003AA8  0E00               	movlw	0
  5945   003AAA  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5946   003AAC  6E0A               	movwf	(??___fleq+1)^0,c
  5947   003AAE  0E80               	movlw	128
  5948   003AB0  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5949   003AB2  6E0B               	movwf	(??___fleq+2)^0,c
  5950   003AB4  0E7F               	movlw	127
  5951   003AB6  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5952   003AB8  6E0C               	movwf	(??___fleq+3)^0,c
  5953   003ABA  5009               	movf	??___fleq^0,w,c
  5954   003ABC  100A               	iorwf	(??___fleq+1)^0,w,c
  5955   003ABE  100B               	iorwf	(??___fleq+2)^0,w,c
  5956   003AC0  100C               	iorwf	(??___fleq+3)^0,w,c
  5957   003AC2  A4D8               	btfss	status,2,c
  5958   003AC4  EF66  F01D         	goto	u6981
  5959   003AC8  EF68  F01D         	goto	u6980
  5960   003ACC                     u6981:
  5961   003ACC  EF70  F01D         	goto	l6609
  5962   003AD0                     u6980:
  5963   003AD0  0E00               	movlw	0
  5964   003AD2  6E01               	movwf	___fleq@ff1^0,c
  5965   003AD4  0E00               	movlw	0
  5966   003AD6  6E02               	movwf	(___fleq@ff1+1)^0,c
  5967   003AD8  0E00               	movlw	0
  5968   003ADA  6E03               	movwf	(___fleq@ff1+2)^0,c
  5969   003ADC  0E00               	movlw	0
  5970   003ADE  6E04               	movwf	(___fleq@ff1+3)^0,c
  5971   003AE0                     l6609:
  5972   003AE0  0E00               	movlw	0
  5973   003AE2  1405               	andwf	___fleq@ff2^0,w,c
  5974   003AE4  6E09               	movwf	??___fleq^0,c
  5975   003AE6  0E00               	movlw	0
  5976   003AE8  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5977   003AEA  6E0A               	movwf	(??___fleq+1)^0,c
  5978   003AEC  0E80               	movlw	128
  5979   003AEE  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5980   003AF0  6E0B               	movwf	(??___fleq+2)^0,c
  5981   003AF2  0E7F               	movlw	127
  5982   003AF4  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5983   003AF6  6E0C               	movwf	(??___fleq+3)^0,c
  5984   003AF8  5009               	movf	??___fleq^0,w,c
  5985   003AFA  100A               	iorwf	(??___fleq+1)^0,w,c
  5986   003AFC  100B               	iorwf	(??___fleq+2)^0,w,c
  5987   003AFE  100C               	iorwf	(??___fleq+3)^0,w,c
  5988   003B00  A4D8               	btfss	status,2,c
  5989   003B02  EF85  F01D         	goto	u6991
  5990   003B06  EF87  F01D         	goto	u6990
  5991   003B0A                     u6991:
  5992   003B0A  EF8F  F01D         	goto	l6613
  5993   003B0E                     u6990:
  5994   003B0E  0E00               	movlw	0
  5995   003B10  6E05               	movwf	___fleq@ff2^0,c
  5996   003B12  0E00               	movlw	0
  5997   003B14  6E06               	movwf	(___fleq@ff2+1)^0,c
  5998   003B16  0E00               	movlw	0
  5999   003B18  6E07               	movwf	(___fleq@ff2+2)^0,c
  6000   003B1A  0E00               	movlw	0
  6001   003B1C  6E08               	movwf	(___fleq@ff2+3)^0,c
  6002   003B1E                     l6613:
  6003   003B1E  5005               	movf	___fleq@ff2^0,w,c
  6004   003B20  1801               	xorwf	___fleq@ff1^0,w,c
  6005   003B22  E10F               	bnz	u7000
  6006   003B24  5006               	movf	(___fleq@ff2+1)^0,w,c
  6007   003B26  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6008   003B28  E10C               	bnz	u7000
  6009   003B2A  5007               	movf	(___fleq@ff2+2)^0,w,c
  6010   003B2C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6011   003B2E  E109               	bnz	u7000
  6012   003B30  5008               	movf	(___fleq@ff2+3)^0,w,c
  6013   003B32  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6014   003B34  B4D8               	btfsc	status,2,c
  6015   003B36  EF9F  F01D         	goto	u7001
  6016   003B3A  EFA1  F01D         	goto	u7000
  6017   003B3E                     u7001:
  6018   003B3E  EFA4  F01D         	goto	l6617
  6019   003B42                     u7000:
  6020   003B42  90D8               	bcf	status,0,c
  6021   003B44  EFA5  F01D         	goto	l838
  6022   003B48                     l6617:
  6023   003B48  80D8               	bsf	status,0,c
  6024   003B4A                     l838:
  6025   003B4A  0012               	return		;funcret
  6026   003B4C                     __end_of___fleq:
  6027                           	callstack 0
  6028                           
  6029 ;; *************** function ___fldiv *****************
  6030 ;; Defined at:
  6031 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  b               4    0[COMRAM] unsigned char 
  6034 ;;  a               4    4[COMRAM] unsigned char 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  grs             4   19[COMRAM] unsigned long 
  6037 ;;  rem             4   12[COMRAM] unsigned long 
  6038 ;;  new_exp         2   17[COMRAM] short 
  6039 ;;  aexp            1   24[COMRAM] unsigned char 
  6040 ;;  bexp            1   23[COMRAM] unsigned char 
  6041 ;;  sign            1   16[COMRAM] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  4    0[COMRAM] unsigned char 
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6051 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;Total ram usage:       25 bytes
  6056 ;; Hardware stack levels used: 1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_efgtoa
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text20
  6065   00231C                     __ptext20:
  6066                           	callstack 0
  6067   00231C                     ___fldiv:
  6068                           	callstack 25
  6069   00231C  5004               	movf	(___fldiv@b+3)^0,w,c
  6070   00231E  0B80               	andlw	128
  6071   002320  6E11               	movwf	___fldiv@sign^0,c
  6072   002322  5004               	movf	(___fldiv@b+3)^0,w,c
  6073   002324  2404               	addwf	(___fldiv@b+3)^0,w,c
  6074   002326  6E18               	movwf	___fldiv@bexp^0,c
  6075   002328  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6076   00232A  EF99  F011         	goto	u6441
  6077   00232E  EF9B  F011         	goto	u6440
  6078   002332                     u6441:
  6079   002332  EF9C  F011         	goto	l6257
  6080   002336                     u6440:
  6081   002336  8018               	bsf	___fldiv@bexp^0,0,c
  6082   002338                     l6257:
  6083   002338  5018               	movf	___fldiv@bexp^0,w,c
  6084   00233A  B4D8               	btfsc	status,2,c
  6085   00233C  EFA2  F011         	goto	u6451
  6086   002340  EFA4  F011         	goto	u6450
  6087   002344                     u6451:
  6088   002344  EFB9  F011         	goto	l6267
  6089   002348                     u6450:
  6090   002348  2818               	incf	___fldiv@bexp^0,w,c
  6091   00234A  A4D8               	btfss	status,2,c
  6092   00234C  EFAA  F011         	goto	u6461
  6093   002350  EFAC  F011         	goto	u6460
  6094   002354                     u6461:
  6095   002354  EFB4  F011         	goto	l6263
  6096   002358                     u6460:
  6097   002358  0E00               	movlw	0
  6098   00235A  6E01               	movwf	___fldiv@b^0,c
  6099   00235C  0E00               	movlw	0
  6100   00235E  6E02               	movwf	(___fldiv@b+1)^0,c
  6101   002360  0E00               	movlw	0
  6102   002362  6E03               	movwf	(___fldiv@b+2)^0,c
  6103   002364  0E00               	movlw	0
  6104   002366  6E04               	movwf	(___fldiv@b+3)^0,c
  6105   002368                     l6263:
  6106   002368  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6107   00236A  0E00               	movlw	0
  6108   00236C  6E04               	movwf	(___fldiv@b+3)^0,c
  6109   00236E  EFC1  F011         	goto	l6269
  6110   002372                     l6267:
  6111   002372  0E00               	movlw	0
  6112   002374  6E01               	movwf	___fldiv@b^0,c
  6113   002376  0E00               	movlw	0
  6114   002378  6E02               	movwf	(___fldiv@b+1)^0,c
  6115   00237A  0E00               	movlw	0
  6116   00237C  6E03               	movwf	(___fldiv@b+2)^0,c
  6117   00237E  0E00               	movlw	0
  6118   002380  6E04               	movwf	(___fldiv@b+3)^0,c
  6119   002382                     l6269:
  6120   002382  5008               	movf	(___fldiv@a+3)^0,w,c
  6121   002384  0B80               	andlw	128
  6122   002386  1A11               	xorwf	___fldiv@sign^0,f,c
  6123   002388  5008               	movf	(___fldiv@a+3)^0,w,c
  6124   00238A  2408               	addwf	(___fldiv@a+3)^0,w,c
  6125   00238C  6E19               	movwf	___fldiv@aexp^0,c
  6126   00238E  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6127   002390  EFCC  F011         	goto	u6471
  6128   002394  EFCE  F011         	goto	u6470
  6129   002398                     u6471:
  6130   002398  EFCF  F011         	goto	l6277
  6131   00239C                     u6470:
  6132   00239C  8019               	bsf	___fldiv@aexp^0,0,c
  6133   00239E                     l6277:
  6134   00239E  5019               	movf	___fldiv@aexp^0,w,c
  6135   0023A0  B4D8               	btfsc	status,2,c
  6136   0023A2  EFD5  F011         	goto	u6481
  6137   0023A6  EFD7  F011         	goto	u6480
  6138   0023AA                     u6481:
  6139   0023AA  EFEC  F011         	goto	l6287
  6140   0023AE                     u6480:
  6141   0023AE  2819               	incf	___fldiv@aexp^0,w,c
  6142   0023B0  A4D8               	btfss	status,2,c
  6143   0023B2  EFDD  F011         	goto	u6491
  6144   0023B6  EFDF  F011         	goto	u6490
  6145   0023BA                     u6491:
  6146   0023BA  EFE7  F011         	goto	l6283
  6147   0023BE                     u6490:
  6148   0023BE  0E00               	movlw	0
  6149   0023C0  6E05               	movwf	___fldiv@a^0,c
  6150   0023C2  0E00               	movlw	0
  6151   0023C4  6E06               	movwf	(___fldiv@a+1)^0,c
  6152   0023C6  0E00               	movlw	0
  6153   0023C8  6E07               	movwf	(___fldiv@a+2)^0,c
  6154   0023CA  0E00               	movlw	0
  6155   0023CC  6E08               	movwf	(___fldiv@a+3)^0,c
  6156   0023CE                     l6283:
  6157   0023CE  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6158   0023D0  0E00               	movlw	0
  6159   0023D2  6E08               	movwf	(___fldiv@a+3)^0,c
  6160   0023D4  EFF4  F011         	goto	l6289
  6161   0023D8                     l6287:
  6162   0023D8  0E00               	movlw	0
  6163   0023DA  6E05               	movwf	___fldiv@a^0,c
  6164   0023DC  0E00               	movlw	0
  6165   0023DE  6E06               	movwf	(___fldiv@a+1)^0,c
  6166   0023E0  0E00               	movlw	0
  6167   0023E2  6E07               	movwf	(___fldiv@a+2)^0,c
  6168   0023E4  0E00               	movlw	0
  6169   0023E6  6E08               	movwf	(___fldiv@a+3)^0,c
  6170   0023E8                     l6289:
  6171   0023E8  5005               	movf	___fldiv@a^0,w,c
  6172   0023EA  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6173   0023EC  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6174   0023EE  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6175   0023F0  A4D8               	btfss	status,2,c
  6176   0023F2  EFFD  F011         	goto	u6501
  6177   0023F6  EFFF  F011         	goto	u6500
  6178   0023FA                     u6501:
  6179   0023FA  EF17  F012         	goto	l6301
  6180   0023FE                     u6500:
  6181   0023FE  0E00               	movlw	0
  6182   002400  6E01               	movwf	___fldiv@b^0,c
  6183   002402  0E00               	movlw	0
  6184   002404  6E02               	movwf	(___fldiv@b+1)^0,c
  6185   002406  0E00               	movlw	0
  6186   002408  6E03               	movwf	(___fldiv@b+2)^0,c
  6187   00240A  0E00               	movlw	0
  6188   00240C  6E04               	movwf	(___fldiv@b+3)^0,c
  6189   00240E  0E80               	movlw	128
  6190   002410  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6191   002412  0E7F               	movlw	127
  6192   002414  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6193   002416                     l6295:
  6194   002416  5011               	movf	___fldiv@sign^0,w,c
  6195   002418  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6196   00241A  C001  F001         	movff	___fldiv@b,?___fldiv
  6197   00241E  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6198   002422  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6199   002426  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6200   00242A  EF5A  F013         	goto	l1161
  6201   00242E                     l6301:
  6202   00242E  5018               	movf	___fldiv@bexp^0,w,c
  6203   002430  A4D8               	btfss	status,2,c
  6204   002432  EF1D  F012         	goto	u6511
  6205   002436  EF1F  F012         	goto	u6510
  6206   00243A                     u6511:
  6207   00243A  EF29  F012         	goto	l6309
  6208   00243E                     u6510:
  6209   00243E  0E00               	movlw	0
  6210   002440  6E01               	movwf	?___fldiv^0,c
  6211   002442  0E00               	movlw	0
  6212   002444  6E02               	movwf	(?___fldiv+1)^0,c
  6213   002446  0E00               	movlw	0
  6214   002448  6E03               	movwf	(?___fldiv+2)^0,c
  6215   00244A  0E00               	movlw	0
  6216   00244C  6E04               	movwf	(?___fldiv+3)^0,c
  6217   00244E  EF5A  F013         	goto	l1161
  6218   002452                     l6309:
  6219   002452  5019               	movf	___fldiv@aexp^0,w,c
  6220   002454  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6221   002458  6A0A               	clrf	(??___fldiv+1)^0,c
  6222   00245A  5E09               	subwf	??___fldiv^0,f,c
  6223   00245C  0E00               	movlw	0
  6224   00245E  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6225   002460  0E7F               	movlw	127
  6226   002462  2409               	addwf	??___fldiv^0,w,c
  6227   002464  6E12               	movwf	___fldiv@new_exp^0,c
  6228   002466  0E00               	movlw	0
  6229   002468  200A               	addwfc	(??___fldiv+1)^0,w,c
  6230   00246A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6231   00246C  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6232   002470  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6233   002474  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6234   002478  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6235   00247C  0E00               	movlw	0
  6236   00247E  6E01               	movwf	___fldiv@b^0,c
  6237   002480  0E00               	movlw	0
  6238   002482  6E02               	movwf	(___fldiv@b+1)^0,c
  6239   002484  0E00               	movlw	0
  6240   002486  6E03               	movwf	(___fldiv@b+2)^0,c
  6241   002488  0E00               	movlw	0
  6242   00248A  6E04               	movwf	(___fldiv@b+3)^0,c
  6243   00248C  0E00               	movlw	0
  6244   00248E  6E14               	movwf	___fldiv@grs^0,c
  6245   002490  0E00               	movlw	0
  6246   002492  6E15               	movwf	(___fldiv@grs+1)^0,c
  6247   002494  0E00               	movlw	0
  6248   002496  6E16               	movwf	(___fldiv@grs+2)^0,c
  6249   002498  0E00               	movlw	0
  6250   00249A  6E17               	movwf	(___fldiv@grs+3)^0,c
  6251   00249C  0E00               	movlw	0
  6252   00249E  6E19               	movwf	___fldiv@aexp^0,c
  6253   0024A0  EF8A  F012         	goto	l1163
  6254   0024A4                     l6319:
  6255   0024A4  5019               	movf	___fldiv@aexp^0,w,c
  6256   0024A6  B4D8               	btfsc	status,2,c
  6257   0024A8  EF58  F012         	goto	u6521
  6258   0024AC  EF5A  F012         	goto	u6520
  6259   0024B0                     u6521:
  6260   0024B0  EF71  F012         	goto	l6327
  6261   0024B4                     u6520:
  6262   0024B4  90D8               	bcf	status,0,c
  6263   0024B6  360D               	rlcf	___fldiv@rem^0,f,c
  6264   0024B8  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6265   0024BA  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6266   0024BC  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6267   0024BE  90D8               	bcf	status,0,c
  6268   0024C0  3601               	rlcf	___fldiv@b^0,f,c
  6269   0024C2  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6270   0024C4  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6271   0024C6  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6272   0024C8  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6273   0024CA  EF69  F012         	goto	u6531
  6274   0024CE  EF6B  F012         	goto	u6530
  6275   0024D2                     u6531:
  6276   0024D2  EF6C  F012         	goto	l1166
  6277   0024D6                     u6530:
  6278   0024D6  8001               	bsf	___fldiv@b^0,0,c
  6279   0024D8                     l1166:
  6280   0024D8  90D8               	bcf	status,0,c
  6281   0024DA  3614               	rlcf	___fldiv@grs^0,f,c
  6282   0024DC  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6283   0024DE  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6284   0024E0  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6285   0024E2                     l6327:
  6286   0024E2  5005               	movf	___fldiv@a^0,w,c
  6287   0024E4  5C0D               	subwf	___fldiv@rem^0,w,c
  6288   0024E6  5006               	movf	(___fldiv@a+1)^0,w,c
  6289   0024E8  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6290   0024EA  5007               	movf	(___fldiv@a+2)^0,w,c
  6291   0024EC  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6292   0024EE  5008               	movf	(___fldiv@a+3)^0,w,c
  6293   0024F0  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6294   0024F2  A0D8               	btfss	status,0,c
  6295   0024F4  EF7E  F012         	goto	u6541
  6296   0024F8  EF80  F012         	goto	u6540
  6297   0024FC                     u6541:
  6298   0024FC  EF89  F012         	goto	l6333
  6299   002500                     u6540:
  6300   002500  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6301   002502  5005               	movf	___fldiv@a^0,w,c
  6302   002504  5E0D               	subwf	___fldiv@rem^0,f,c
  6303   002506  5006               	movf	(___fldiv@a+1)^0,w,c
  6304   002508  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6305   00250A  5007               	movf	(___fldiv@a+2)^0,w,c
  6306   00250C  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6307   00250E  5008               	movf	(___fldiv@a+3)^0,w,c
  6308   002510  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6309   002512                     l6333:
  6310   002512  2A19               	incf	___fldiv@aexp^0,f,c
  6311   002514                     l1163:
  6312   002514  0E19               	movlw	25
  6313   002516  6419               	cpfsgt	___fldiv@aexp^0,c
  6314   002518  EF90  F012         	goto	u6551
  6315   00251C  EF92  F012         	goto	u6550
  6316   002520                     u6551:
  6317   002520  EF52  F012         	goto	l6319
  6318   002524                     u6550:
  6319   002524  500D               	movf	___fldiv@rem^0,w,c
  6320   002526  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6321   002528  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6322   00252A  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6323   00252C  B4D8               	btfsc	status,2,c
  6324   00252E  EF9B  F012         	goto	u6561
  6325   002532  EF9D  F012         	goto	u6560
  6326   002536                     u6561:
  6327   002536  EFB5  F012         	goto	l6345
  6328   00253A                     u6560:
  6329   00253A  8014               	bsf	___fldiv@grs^0,0,c
  6330   00253C  EFB5  F012         	goto	l6345
  6331   002540                     l6339:
  6332   002540  90D8               	bcf	status,0,c
  6333   002542  3601               	rlcf	___fldiv@b^0,f,c
  6334   002544  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6335   002546  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6336   002548  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6337   00254A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6338   00254C  EFAA  F012         	goto	u6571
  6339   002550  EFAC  F012         	goto	u6570
  6340   002554                     u6571:
  6341   002554  EFAD  F012         	goto	l1172
  6342   002558                     u6570:
  6343   002558  8001               	bsf	___fldiv@b^0,0,c
  6344   00255A                     l1172:
  6345   00255A  90D8               	bcf	status,0,c
  6346   00255C  3614               	rlcf	___fldiv@grs^0,f,c
  6347   00255E  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6348   002560  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6349   002562  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6350   002564  0612               	decf	___fldiv@new_exp^0,f,c
  6351   002566  A0D8               	btfss	status,0,c
  6352   002568  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6353   00256A                     l6345:
  6354   00256A  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6355   00256C  EFBA  F012         	goto	u6581
  6356   002570  EFBC  F012         	goto	u6580
  6357   002574                     u6581:
  6358   002574  EFA0  F012         	goto	l6339
  6359   002578                     u6580:
  6360   002578  0E00               	movlw	0
  6361   00257A  6E19               	movwf	___fldiv@aexp^0,c
  6362   00257C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6363   00257E  EFC3  F012         	goto	u6591
  6364   002582  EFC5  F012         	goto	u6590
  6365   002586                     u6591:
  6366   002586  EFE9  F012         	goto	l1174
  6367   00258A                     u6590:
  6368   00258A  0EFF               	movlw	255
  6369   00258C  1414               	andwf	___fldiv@grs^0,w,c
  6370   00258E  6E09               	movwf	??___fldiv^0,c
  6371   002590  0EFF               	movlw	255
  6372   002592  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6373   002594  6E0A               	movwf	(??___fldiv+1)^0,c
  6374   002596  0EFF               	movlw	255
  6375   002598  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6376   00259A  6E0B               	movwf	(??___fldiv+2)^0,c
  6377   00259C  0E7F               	movlw	127
  6378   00259E  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6379   0025A0  6E0C               	movwf	(??___fldiv+3)^0,c
  6380   0025A2  5009               	movf	??___fldiv^0,w,c
  6381   0025A4  100A               	iorwf	(??___fldiv+1)^0,w,c
  6382   0025A6  100B               	iorwf	(??___fldiv+2)^0,w,c
  6383   0025A8  100C               	iorwf	(??___fldiv+3)^0,w,c
  6384   0025AA  B4D8               	btfsc	status,2,c
  6385   0025AC  EFDA  F012         	goto	u6601
  6386   0025B0  EFDC  F012         	goto	u6600
  6387   0025B4                     u6601:
  6388   0025B4  EFE0  F012         	goto	l1175
  6389   0025B8                     u6600:
  6390   0025B8                     l6353:
  6391   0025B8  0E01               	movlw	1
  6392   0025BA  6E19               	movwf	___fldiv@aexp^0,c
  6393   0025BC  EFE9  F012         	goto	l1174
  6394   0025C0                     l1175:
  6395   0025C0  A001               	btfss	___fldiv@b^0,0,c
  6396   0025C2  EFE5  F012         	goto	u6611
  6397   0025C6  EFE7  F012         	goto	u6610
  6398   0025CA                     u6611:
  6399   0025CA  EFE9  F012         	goto	l1174
  6400   0025CE                     u6610:
  6401   0025CE  EFDC  F012         	goto	l6353
  6402   0025D2                     l1174:
  6403   0025D2  5019               	movf	___fldiv@aexp^0,w,c
  6404   0025D4  B4D8               	btfsc	status,2,c
  6405   0025D6  EFEF  F012         	goto	u6621
  6406   0025DA  EFF1  F012         	goto	u6620
  6407   0025DE                     u6621:
  6408   0025DE  EF15  F013         	goto	l6365
  6409   0025E2                     u6620:
  6410   0025E2  0E01               	movlw	1
  6411   0025E4  2601               	addwf	___fldiv@b^0,f,c
  6412   0025E6  0E00               	movlw	0
  6413   0025E8  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6414   0025EA  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6415   0025EC  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6416   0025EE  A004               	btfss	(___fldiv@b+3)^0,0,c
  6417   0025F0  EFFC  F012         	goto	u6631
  6418   0025F4  EFFE  F012         	goto	u6630
  6419   0025F8                     u6631:
  6420   0025F8  EF15  F013         	goto	l6365
  6421   0025FC                     u6630:
  6422   0025FC  C001  F009         	movff	___fldiv@b,??___fldiv
  6423   002600  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6424   002604  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6425   002608  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6426   00260C  340C               	rlcf	(??___fldiv+3)^0,w,c
  6427   00260E  320C               	rrcf	(??___fldiv+3)^0,f,c
  6428   002610  320B               	rrcf	(??___fldiv+2)^0,f,c
  6429   002612  320A               	rrcf	(??___fldiv+1)^0,f,c
  6430   002614  3209               	rrcf	??___fldiv^0,f,c
  6431   002616  C009  F001         	movff	??___fldiv,___fldiv@b
  6432   00261A  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6433   00261E  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6434   002622  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6435   002626  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6436   002628  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6437   00262A                     l6365:
  6438   00262A  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6439   00262C  EF20  F013         	goto	u6641
  6440   002630  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6441   002632  E108               	bnz	u6640
  6442   002634  2812               	incf	___fldiv@new_exp^0,w,c
  6443   002636  A0D8               	btfss	status,0,c
  6444   002638  EF20  F013         	goto	u6641
  6445   00263C  EF22  F013         	goto	u6640
  6446   002640                     u6641:
  6447   002640  EF2D  F013         	goto	l6369
  6448   002644                     u6640:
  6449   002644  0E00               	movlw	0
  6450   002646  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6451   002648  6812               	setf	___fldiv@new_exp^0,c
  6452   00264A  0E00               	movlw	0
  6453   00264C  6E01               	movwf	___fldiv@b^0,c
  6454   00264E  0E00               	movlw	0
  6455   002650  6E02               	movwf	(___fldiv@b+1)^0,c
  6456   002652  0E00               	movlw	0
  6457   002654  6E03               	movwf	(___fldiv@b+2)^0,c
  6458   002656  0E00               	movlw	0
  6459   002658  6E04               	movwf	(___fldiv@b+3)^0,c
  6460   00265A                     l6369:
  6461   00265A  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6462   00265C  EF3A  F013         	goto	u6650
  6463   002660  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6464   002662  E106               	bnz	u6651
  6465   002664  0412               	decf	___fldiv@new_exp^0,w,c
  6466   002666  B0D8               	btfsc	status,0,c
  6467   002668  EF38  F013         	goto	u6651
  6468   00266C  EF3A  F013         	goto	u6650
  6469   002670                     u6651:
  6470   002670  EF48  F013         	goto	l6373
  6471   002674                     u6650:
  6472   002674  0E00               	movlw	0
  6473   002676  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6474   002678  0E00               	movlw	0
  6475   00267A  6E12               	movwf	___fldiv@new_exp^0,c
  6476   00267C  0E00               	movlw	0
  6477   00267E  6E01               	movwf	___fldiv@b^0,c
  6478   002680  0E00               	movlw	0
  6479   002682  6E02               	movwf	(___fldiv@b+1)^0,c
  6480   002684  0E00               	movlw	0
  6481   002686  6E03               	movwf	(___fldiv@b+2)^0,c
  6482   002688  0E00               	movlw	0
  6483   00268A  6E04               	movwf	(___fldiv@b+3)^0,c
  6484   00268C  0E00               	movlw	0
  6485   00268E  6E11               	movwf	___fldiv@sign^0,c
  6486   002690                     l6373:
  6487   002690  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6488   002694  A018               	btfss	___fldiv@bexp^0,0,c
  6489   002696  EF4F  F013         	goto	u6661
  6490   00269A  EF51  F013         	goto	u6660
  6491   00269E                     u6661:
  6492   00269E  EF54  F013         	goto	l6379
  6493   0026A2                     u6660:
  6494   0026A2  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6495   0026A4  EF55  F013         	goto	l6381
  6496   0026A8                     l6379:
  6497   0026A8  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6498   0026AA                     l6381:
  6499   0026AA  90D8               	bcf	status,0,c
  6500   0026AC  3018               	rrcf	___fldiv@bexp^0,w,c
  6501   0026AE  6E04               	movwf	(___fldiv@b+3)^0,c
  6502   0026B0  EF0B  F012         	goto	l6295
  6503   0026B4                     l1161:
  6504   0026B4  0012               	return		;funcret
  6505   0026B6                     __end_of___fldiv:
  6506                           	callstack 0
  6507                           
  6508 ;; *************** function _dtoa *****************
  6509 ;; Defined at:
  6510 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6513 ;;		 -> sprintf@f(12), 
  6514 ;;  d               2   23[COMRAM] int 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  i               2   32[COMRAM] int 
  6517 ;;  p               2   29[COMRAM] int 
  6518 ;;  w               2   27[COMRAM] int 
  6519 ;;  s               1   31[COMRAM] unsigned char 
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  1    wreg      void 
  6522 ;; Registers used:
  6523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6529 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6530 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6532 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;Total ram usage:       12 bytes
  6534 ;; Hardware stack levels used: 1
  6535 ;; Hardware stack levels required when called: 4
  6536 ;; This function calls:
  6537 ;;		___awdiv
  6538 ;;		___awmod
  6539 ;;		_abs
  6540 ;;		_pad
  6541 ;; This function is called by:
  6542 ;;		_vfpfcnvrt
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text21
  6547   002B4A                     __ptext21:
  6548                           	callstack 0
  6549   002B4A                     _dtoa:
  6550                           	callstack 22
  6551   002B4A                     
  6552                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  6553   002B4A  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6554   002B4C  EFAA  F015         	goto	u7371
  6555   002B50  EFAD  F015         	goto	u7370
  6556   002B54                     u7371:
  6557   002B54  0E01               	movlw	1
  6558   002B56  EFAE  F015         	goto	u7380
  6559   002B5A                     u7370:
  6560   002B5A  0E00               	movlw	0
  6561   002B5C                     u7380:
  6562   002B5C  6E20               	movwf	dtoa@s^0,c
  6563                           
  6564                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  6565   002B5E  BE52               	btfsc	(_prec+1)^0,7,c
  6566   002B60  EFB6  F015         	goto	u7390
  6567   002B64  EFB4  F015         	goto	u7391
  6568   002B68                     u7391:
  6569   002B68  EFBC  F015         	goto	l1300
  6570   002B6C                     u7390:
  6571   002B6C  0E00               	movlw	0
  6572   002B6E  6E1F               	movwf	(dtoa@p+1)^0,c
  6573   002B70  0E01               	movlw	1
  6574   002B72  6E1E               	movwf	dtoa@p^0,c
  6575   002B74  EFC0  F015         	goto	l1302
  6576   002B78                     l1300:
  6577   002B78  C051  F01E         	movff	_prec,dtoa@p
  6578   002B7C  C052  F01F         	movff	_prec+1,dtoa@p+1
  6579   002B80                     l1302:
  6580                           
  6581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6582   002B80  C04F  F01C         	movff	_width,dtoa@w
  6583   002B84  C050  F01D         	movff	_width+1,dtoa@w+1
  6584   002B88                     
  6585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6586   002B88  5020               	movf	dtoa@s^0,w,c
  6587   002B8A  B4D8               	btfsc	status,2,c
  6588   002B8C  EFCA  F015         	goto	u7401
  6589   002B90  EFCC  F015         	goto	u7400
  6590   002B94                     u7401:
  6591   002B94  EFE3  F015         	goto	l1303
  6592   002B98                     u7400:
  6593   002B98                     
  6594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6595   002B98  061C               	decf	dtoa@w^0,f,c
  6596   002B9A  A0D8               	btfss	status,0,c
  6597   002B9C  061D               	decf	(dtoa@w+1)^0,f,c
  6598   002B9E                     
  6599                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6600   002B9E  5020               	movf	dtoa@s^0,w,c
  6601   002BA0  A4D8               	btfss	status,2,c
  6602   002BA2  EFD5  F015         	goto	u7411
  6603   002BA6  EFD7  F015         	goto	u7410
  6604   002BAA                     u7411:
  6605   002BAA  EFDD  F015         	goto	l6797
  6606   002BAE                     u7410:
  6607   002BAE  0E00               	movlw	0
  6608   002BB0  6E1B               	movwf	(_dtoa$1549+1)^0,c
  6609   002BB2  0E2B               	movlw	43
  6610   002BB4  6E1A               	movwf	_dtoa$1549^0,c
  6611   002BB6  EFE1  F015         	goto	l6799
  6612   002BBA                     l6797:
  6613   002BBA  0E00               	movlw	0
  6614   002BBC  6E1B               	movwf	(_dtoa$1549+1)^0,c
  6615   002BBE  0E2D               	movlw	45
  6616   002BC0  6E1A               	movwf	_dtoa$1549^0,c
  6617   002BC2                     l6799:
  6618   002BC2  C01A  F020         	movff	_dtoa$1549,dtoa@s
  6619   002BC6                     l1303:
  6620                           
  6621                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6622   002BC6  0E00               	movlw	0
  6623   002BC8  6E22               	movwf	(dtoa@i+1)^0,c
  6624   002BCA  0E4F               	movlw	79
  6625   002BCC  6E21               	movwf	dtoa@i^0,c
  6626   002BCE                     
  6627                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6628   002BCE  0E00               	movlw	0
  6629   002BD0  0101               	movlb	1	; () banked
  6630   002BD2  6F4F               	movwf	(_dbuf+79)& (0+255),b
  6631                           
  6632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6633   002BD4  EF1C  F016         	goto	l6813
  6634   002BD8                     l6803:
  6635                           
  6636                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6637   002BD8  0621               	decf	dtoa@i^0,f,c
  6638   002BDA  A0D8               	btfss	status,0,c
  6639   002BDC  0622               	decf	(dtoa@i+1)^0,f,c
  6640   002BDE                     
  6641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6642   002BDE  0E00               	movlw	low _dbuf
  6643   002BE0  2421               	addwf	dtoa@i^0,w,c
  6644   002BE2  6ED9               	movwf	fsr2l,c
  6645   002BE4  0E01               	movlw	high _dbuf
  6646   002BE6  2022               	addwfc	(dtoa@i+1)^0,w,c
  6647   002BE8  6EDA               	movwf	fsr2h,c
  6648   002BEA  C018  F001         	movff	dtoa@d,___awmod@dividend
  6649   002BEE  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6650   002BF2  0E00               	movlw	0
  6651   002BF4  6E04               	movwf	(___awmod@divisor+1)^0,c
  6652   002BF6  0E0A               	movlw	10
  6653   002BF8  6E03               	movwf	___awmod@divisor^0,c
  6654   002BFA  ECA1  F01C         	call	___awmod	;wreg free
  6655   002BFE  C001  F007         	movff	?___awmod,abs@a
  6656   002C02  C002  F008         	movff	?___awmod+1,abs@a+1
  6657   002C06  ECF4  F021         	call	_abs	;wreg free
  6658   002C0A  5007               	movf	?_abs^0,w,c
  6659   002C0C  0F30               	addlw	48
  6660   002C0E  6EDF               	movwf	indf2,c
  6661   002C10                     
  6662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
  6663   002C10  061E               	decf	dtoa@p^0,f,c
  6664   002C12  A0D8               	btfss	status,0,c
  6665   002C14  061F               	decf	(dtoa@p+1)^0,f,c
  6666   002C16                     
  6667                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6668   002C16  061C               	decf	dtoa@w^0,f,c
  6669   002C18  A0D8               	btfss	status,0,c
  6670   002C1A  061D               	decf	(dtoa@w+1)^0,f,c
  6671   002C1C                     
  6672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6673   002C1C  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6674   002C20  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6675   002C24  0E00               	movlw	0
  6676   002C26  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6677   002C28  0E0A               	movlw	10
  6678   002C2A  6E03               	movwf	___awdiv@divisor^0,c
  6679   002C2C  EC83  F01B         	call	___awdiv	;wreg free
  6680   002C30  C001  F018         	movff	?___awdiv,dtoa@d
  6681   002C34  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6682   002C38                     l6813:
  6683                           
  6684                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6685   002C38  BE22               	btfsc	(dtoa@i+1)^0,7,c
  6686   002C3A  EF27  F016         	goto	u7421
  6687   002C3E  5022               	movf	(dtoa@i+1)^0,w,c
  6688   002C40  E108               	bnz	u7420
  6689   002C42  0421               	decf	dtoa@i^0,w,c
  6690   002C44  A0D8               	btfss	status,0,c
  6691   002C46  EF27  F016         	goto	u7421
  6692   002C4A  EF29  F016         	goto	u7420
  6693   002C4E                     u7421:
  6694   002C4E  EF3F  F016         	goto	l6819
  6695   002C52                     u7420:
  6696   002C52  5018               	movf	dtoa@d^0,w,c
  6697   002C54  1019               	iorwf	(dtoa@d+1)^0,w,c
  6698   002C56  A4D8               	btfss	status,2,c
  6699   002C58  EF30  F016         	goto	u7431
  6700   002C5C  EF32  F016         	goto	u7430
  6701   002C60                     u7431:
  6702   002C60  EFEC  F015         	goto	l6803
  6703   002C64                     u7430:
  6704   002C64  BE1F               	btfsc	(dtoa@p+1)^0,7,c
  6705   002C66  EF3F  F016         	goto	u7440
  6706   002C6A  501F               	movf	(dtoa@p+1)^0,w,c
  6707   002C6C  E106               	bnz	u7441
  6708   002C6E  041E               	decf	dtoa@p^0,w,c
  6709   002C70  B0D8               	btfsc	status,0,c
  6710   002C72  EF3D  F016         	goto	u7441
  6711   002C76  EF3F  F016         	goto	u7440
  6712   002C7A                     u7441:
  6713   002C7A  EFEC  F015         	goto	l6803
  6714   002C7E                     u7440:
  6715   002C7E                     l6819:
  6716                           
  6717                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6718   002C7E  5020               	movf	dtoa@s^0,w,c
  6719   002C80  B4D8               	btfsc	status,2,c
  6720   002C82  EF45  F016         	goto	u7451
  6721   002C86  EF47  F016         	goto	u7450
  6722   002C8A                     u7451:
  6723   002C8A  EF52  F016         	goto	l6825
  6724   002C8E                     u7450:
  6725   002C8E                     
  6726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6727   002C8E  0621               	decf	dtoa@i^0,f,c
  6728   002C90  A0D8               	btfss	status,0,c
  6729   002C92  0622               	decf	(dtoa@i+1)^0,f,c
  6730   002C94                     
  6731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6732   002C94  0E00               	movlw	low _dbuf
  6733   002C96  2421               	addwf	dtoa@i^0,w,c
  6734   002C98  6ED9               	movwf	fsr2l,c
  6735   002C9A  0E01               	movlw	high _dbuf
  6736   002C9C  2022               	addwfc	(dtoa@i+1)^0,w,c
  6737   002C9E  6EDA               	movwf	fsr2h,c
  6738   002CA0  C020  FFDF         	movff	dtoa@s,indf2
  6739   002CA4                     l6825:
  6740                           
  6741                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6742   002CA4  C017  F00F         	movff	dtoa@fp,pad@fp
  6743   002CA8  0E00               	movlw	low _dbuf
  6744   002CAA  2421               	addwf	dtoa@i^0,w,c
  6745   002CAC  6E10               	movwf	pad@buf^0,c
  6746   002CAE  0E01               	movlw	high _dbuf
  6747   002CB0  2022               	addwfc	(dtoa@i+1)^0,w,c
  6748   002CB2  6E11               	movwf	(pad@buf+1)^0,c
  6749   002CB4  C01C  F012         	movff	dtoa@w,pad@p
  6750   002CB8  C01D  F013         	movff	dtoa@w+1,pad@p+1
  6751   002CBC  EC47  F01F         	call	_pad	;wreg free
  6752   002CC0  0012               	return		;funcret
  6753   002CC2                     __end_of_dtoa:
  6754                           	callstack 0
  6755                           
  6756 ;; *************** function _pad *****************
  6757 ;; Defined at:
  6758 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6761 ;;		 -> sprintf@f(12), 
  6762 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6763 ;;		 -> dbuf(80), 
  6764 ;;  p               2   17[COMRAM] int 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;  i               2   20[COMRAM] int 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6776 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;Total ram usage:        8 bytes
  6781 ;; Hardware stack levels used: 1
  6782 ;; Hardware stack levels required when called: 3
  6783 ;; This function calls:
  6784 ;;		_fputc
  6785 ;;		_fputs
  6786 ;; This function is called by:
  6787 ;;		_dtoa
  6788 ;;		_efgtoa
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text22
  6793   003E8E                     __ptext22:
  6794                           	callstack 0
  6795   003E8E                     _pad:
  6796                           	callstack 22
  6797   003E8E                     
  6798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  6799   003E8E  BE13               	btfsc	(pad@p+1)^0,7,c
  6800   003E90  EF4E  F01F         	goto	u7140
  6801   003E94  EF4C  F01F         	goto	u7141
  6802   003E98                     u7141:
  6803   003E98  EF52  F01F         	goto	l1292
  6804   003E9C                     u7140:
  6805   003E9C                     
  6806                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6807   003E9C  0E00               	movlw	0
  6808   003E9E  6E13               	movwf	(pad@p+1)^0,c
  6809   003EA0  0E00               	movlw	0
  6810   003EA2  6E12               	movwf	pad@p^0,c
  6811   003EA4                     l1292:
  6812                           
  6813                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6814   003EA4  0E00               	movlw	0
  6815   003EA6  6E16               	movwf	(pad@i+1)^0,c
  6816   003EA8  0E00               	movlw	0
  6817   003EAA  6E15               	movwf	pad@i^0,c
  6818                           
  6819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6820   003EAC  EF62  F01F         	goto	l6703
  6821   003EB0                     l6699:
  6822                           
  6823                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6824   003EB0  0E00               	movlw	0
  6825   003EB2  6E02               	movwf	(fputc@c+1)^0,c
  6826   003EB4  0E20               	movlw	32
  6827   003EB6  6E01               	movwf	fputc@c^0,c
  6828   003EB8  C00F  F003         	movff	pad@fp,fputc@fp
  6829   003EBC  ECA6  F01D         	call	_fputc	;wreg free
  6830   003EC0                     
  6831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6832   003EC0  4A15               	infsnz	pad@i^0,f,c
  6833   003EC2  2A16               	incf	(pad@i+1)^0,f,c
  6834   003EC4                     l6703:
  6835                           
  6836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6837   003EC4  5012               	movf	pad@p^0,w,c
  6838   003EC6  5C15               	subwf	pad@i^0,w,c
  6839   003EC8  5016               	movf	(pad@i+1)^0,w,c
  6840   003ECA  0A80               	xorlw	128
  6841   003ECC  6E14               	movwf	??_pad^0,c
  6842   003ECE  5013               	movf	(pad@p+1)^0,w,c
  6843   003ED0  0A80               	xorlw	128
  6844   003ED2  5814               	subwfb	??_pad^0,w,c
  6845   003ED4  A0D8               	btfss	status,0,c
  6846   003ED6  EF6F  F01F         	goto	u7151
  6847   003EDA  EF71  F01F         	goto	u7150
  6848   003EDE                     u7151:
  6849   003EDE  EF58  F01F         	goto	l6699
  6850   003EE2                     u7150:
  6851   003EE2                     
  6852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6853   003EE2  C010  F009         	movff	pad@buf,fputs@s
  6854   003EE6  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6855   003EEA  C00F  F00B         	movff	pad@fp,fputs@fp
  6856   003EEE  EC62  F021         	call	_fputs	;wreg free
  6857   003EF2  0012               	return		;funcret
  6858   003EF4                     __end_of_pad:
  6859                           	callstack 0
  6860                           
  6861 ;; *************** function _fputs *****************
  6862 ;; Defined at:
  6863 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6866 ;;		 -> dbuf(80), 
  6867 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6868 ;;		 -> sprintf@f(12), 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  i               2   12[COMRAM] int 
  6871 ;;  c               1   11[COMRAM] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  2    8[COMRAM] int 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6881 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;Total ram usage:        6 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; Hardware stack levels required when called: 2
  6888 ;; This function calls:
  6889 ;;		_fputc
  6890 ;; This function is called by:
  6891 ;;		_pad
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text23
  6896   0042C4                     __ptext23:
  6897                           	callstack 0
  6898   0042C4                     _fputs:
  6899                           	callstack 22
  6900   0042C4  0E00               	movlw	0
  6901   0042C6  6E0E               	movwf	(fputs@i+1)^0,c
  6902   0042C8  0E00               	movlw	0
  6903   0042CA  6E0D               	movwf	fputs@i^0,c
  6904   0042CC  EF71  F021         	goto	l6243
  6905   0042D0                     l6239:
  6906   0042D0  C00C  F001         	movff	fputs@c,fputc@c
  6907   0042D4  6A02               	clrf	(fputc@c+1)^0,c
  6908   0042D6  C00B  F003         	movff	fputs@fp,fputc@fp
  6909   0042DA  ECA6  F01D         	call	_fputc	;wreg free
  6910   0042DE  4A0D               	infsnz	fputs@i^0,f,c
  6911   0042E0  2A0E               	incf	(fputs@i+1)^0,f,c
  6912   0042E2                     l6243:
  6913   0042E2  500D               	movf	fputs@i^0,w,c
  6914   0042E4  2409               	addwf	fputs@s^0,w,c
  6915   0042E6  6ED9               	movwf	fsr2l,c
  6916   0042E8  500E               	movf	(fputs@i+1)^0,w,c
  6917   0042EA  200A               	addwfc	(fputs@s+1)^0,w,c
  6918   0042EC  6EDA               	movwf	fsr2h,c
  6919   0042EE  50DF               	movf	indf2,w,c
  6920   0042F0  6E0C               	movwf	fputs@c^0,c
  6921   0042F2  500C               	movf	fputs@c^0,w,c
  6922   0042F4  A4D8               	btfss	status,2,c
  6923   0042F6  EF7F  F021         	goto	u6431
  6924   0042FA  EF81  F021         	goto	u6430
  6925   0042FE                     u6431:
  6926   0042FE  EF68  F021         	goto	l6239
  6927   004302                     u6430:
  6928   004302  0012               	return		;funcret
  6929   004304                     __end_of_fputs:
  6930                           	callstack 0
  6931                           
  6932 ;; *************** function _fputc *****************
  6933 ;; Defined at:
  6934 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  c               2    0[COMRAM] int 
  6937 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6938 ;;		 -> sprintf@f(12), 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  2    0[COMRAM] int 
  6943 ;; Registers used:
  6944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6950 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;Total ram usage:        8 bytes
  6955 ;; Hardware stack levels used: 1
  6956 ;; Hardware stack levels required when called: 1
  6957 ;; This function calls:
  6958 ;;		_putch
  6959 ;; This function is called by:
  6960 ;;		_pad
  6961 ;;		_vfpfcnvrt
  6962 ;;		_fputs
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text24
  6967   003B4C                     __ptext24:
  6968                           	callstack 0
  6969   003B4C                     _fputc:
  6970                           	callstack 25
  6971   003B4C  5003               	movf	fputc@fp^0,w,c
  6972   003B4E  B4D8               	btfsc	status,2,c
  6973   003B50  EFAC  F01D         	goto	u6001
  6974   003B54  EFAE  F01D         	goto	u6000
  6975   003B58                     u6001:
  6976   003B58  EFB6  F01D         	goto	l6025
  6977   003B5C                     u6000:
  6978   003B5C  5003               	movf	fputc@fp^0,w,c
  6979   003B5E  A4D8               	btfss	status,2,c
  6980   003B60  EFB4  F01D         	goto	u6011
  6981   003B64  EFB6  F01D         	goto	u6010
  6982   003B68                     u6011:
  6983   003B68  EFBB  F01D         	goto	l6027
  6984   003B6C                     u6010:
  6985   003B6C                     l6025:
  6986   003B6C  5001               	movf	fputc@c^0,w,c
  6987   003B6E  EC8F  F022         	call	_putch
  6988   003B72  EFFA  F01D         	goto	l1460
  6989   003B76                     l6027:
  6990   003B76  5003               	movf	fputc@fp^0,w,c
  6991   003B78  6ED9               	movwf	fsr2l,c
  6992   003B7A  6ADA               	clrf	fsr2h,c
  6993   003B7C  0E0A               	movlw	10
  6994   003B7E  26D9               	addwf	fsr2l,f,c
  6995   003B80  50DE               	movf	postinc2,w,c
  6996   003B82  10DE               	iorwf	postinc2,w,c
  6997   003B84  B4D8               	btfsc	status,2,c
  6998   003B86  EFC7  F01D         	goto	u6021
  6999   003B8A  EFC9  F01D         	goto	u6020
  7000   003B8E                     u6021:
  7001   003B8E  EFE2  F01D         	goto	l6031
  7002   003B92                     u6020:
  7003   003B92  5003               	movf	fputc@fp^0,w,c
  7004   003B94  6ED9               	movwf	fsr2l,c
  7005   003B96  6ADA               	clrf	fsr2h,c
  7006   003B98  0E0A               	movlw	10
  7007   003B9A  26D9               	addwf	fsr2l,f,c
  7008   003B9C  5003               	movf	fputc@fp^0,w,c
  7009   003B9E  6EE1               	movwf	fsr1l,c
  7010   003BA0  6AE2               	clrf	fsr1h,c
  7011   003BA2  0E03               	movlw	3
  7012   003BA4  26E1               	addwf	fsr1l,f,c
  7013   003BA6  50DE               	movf	postinc2,w,c
  7014   003BA8  5CE6               	subwf	postinc1,w,c
  7015   003BAA  50E6               	movf	postinc1,w,c
  7016   003BAC  0A80               	xorlw	128
  7017   003BAE  6E08               	movwf	(??_fputc+4)^0,c
  7018   003BB0  50DE               	movf	postinc2,w,c
  7019   003BB2  0A80               	xorlw	128
  7020   003BB4  5808               	subwfb	(??_fputc+4)^0,w,c
  7021   003BB6  B0D8               	btfsc	status,0,c
  7022   003BB8  EFE0  F01D         	goto	u6031
  7023   003BBC  EFE2  F01D         	goto	u6030
  7024   003BC0                     u6031:
  7025   003BC0  EFFA  F01D         	goto	l1460
  7026   003BC4                     u6030:
  7027   003BC4                     l6031:
  7028   003BC4  5003               	movf	fputc@fp^0,w,c
  7029   003BC6  6ED9               	movwf	fsr2l,c
  7030   003BC8  6ADA               	clrf	fsr2h,c
  7031   003BCA  0E03               	movlw	3
  7032   003BCC  26D9               	addwf	fsr2l,f,c
  7033   003BCE  50DF               	movf	indf2,w,c
  7034   003BD0  6E04               	movwf	??_fputc^0,c
  7035   003BD2  5003               	movf	fputc@fp^0,w,c
  7036   003BD4  6ED9               	movwf	fsr2l,c
  7037   003BD6  6ADA               	clrf	fsr2h,c
  7038   003BD8  50DF               	movf	indf2,w,c
  7039   003BDA  2404               	addwf	??_fputc^0,w,c
  7040   003BDC  6ED9               	movwf	fsr2l,c
  7041   003BDE  6ADA               	clrf	fsr2h,c
  7042   003BE0  C001  FFDF         	movff	fputc@c,indf2
  7043   003BE4  5003               	movf	fputc@fp^0,w,c
  7044   003BE6  6ED9               	movwf	fsr2l,c
  7045   003BE8  6ADA               	clrf	fsr2h,c
  7046   003BEA  0E03               	movlw	3
  7047   003BEC  26D9               	addwf	fsr2l,f,c
  7048   003BEE  2ADE               	incf	postinc2,f,c
  7049   003BF0  0E00               	movlw	0
  7050   003BF2  22DD               	addwfc	postdec2,f,c
  7051   003BF4                     l1460:
  7052   003BF4  0012               	return		;funcret
  7053   003BF6                     __end_of_fputc:
  7054                           	callstack 0
  7055                           
  7056 ;; *************** function _putch *****************
  7057 ;; Defined at:
  7058 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  c               1    wreg     unsigned char 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;  c               1    0[COMRAM] unsigned char 
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  1    wreg      void 
  7065 ;; Registers used:
  7066 ;;		wreg
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7076 ;;Total ram usage:        0 bytes
  7077 ;; Hardware stack levels used: 1
  7078 ;; This function calls:
  7079 ;;		Nothing
  7080 ;; This function is called by:
  7081 ;;		_fputc
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text25
  7086   00451E                     __ptext25:
  7087                           	callstack 0
  7088   00451E                     _putch:
  7089                           	callstack 25
  7090   00451E  0012               	return		;funcret
  7091   004520                     __end_of_putch:
  7092                           	callstack 0
  7093                           
  7094 ;; *************** function _abs *****************
  7095 ;; Defined at:
  7096 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;  a               2    6[COMRAM] int 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  2    6[COMRAM] int 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;Total ram usage:        4 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_dtoa
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text26
  7124   0043E8                     __ptext26:
  7125                           	callstack 0
  7126   0043E8                     _abs:
  7127                           	callstack 25
  7128   0043E8  BE08               	btfsc	(abs@a+1)^0,7,c
  7129   0043EA  EFF9  F021         	goto	u7161
  7130   0043EE  EFFB  F021         	goto	u7160
  7131   0043F2                     u7161:
  7132   0043F2  EF01  F022         	goto	l1419
  7133   0043F6                     u7160:
  7134   0043F6  C007  F007         	movff	abs@a,?_abs
  7135   0043FA  C008  F008         	movff	abs@a+1,?_abs+1
  7136   0043FE  EF0D  F022         	goto	l1422
  7137   004402                     l1419:
  7138   004402  C007  F009         	movff	abs@a,??_abs
  7139   004406  C008  F00A         	movff	abs@a+1,??_abs+1
  7140   00440A  1E09               	comf	??_abs^0,f,c
  7141   00440C  1E0A               	comf	(??_abs+1)^0,f,c
  7142   00440E  4A09               	infsnz	??_abs^0,f,c
  7143   004410  2A0A               	incf	(??_abs+1)^0,f,c
  7144   004412  C009  F007         	movff	??_abs,?_abs
  7145   004416  C00A  F008         	movff	??_abs+1,?_abs+1
  7146   00441A                     l1422:
  7147   00441A  0012               	return		;funcret
  7148   00441C                     __end_of_abs:
  7149                           	callstack 0
  7150                           
  7151 ;; *************** function ___awmod *****************
  7152 ;; Defined at:
  7153 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  dividend        2    0[COMRAM] int 
  7156 ;;  divisor         2    2[COMRAM] int 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;  sign            1    5[COMRAM] unsigned char 
  7159 ;;  counter         1    4[COMRAM] unsigned char 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  2    0[COMRAM] int 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2, status,0
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;Total ram usage:        6 bytes
  7174 ;; Hardware stack levels used: 1
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_dtoa
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text27
  7183   003942                     __ptext27:
  7184                           	callstack 0
  7185   003942                     ___awmod:
  7186                           	callstack 25
  7187   003942  0E00               	movlw	0
  7188   003944  6E06               	movwf	___awmod@sign^0,c
  7189   003946  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7190   003948  EFAA  F01C         	goto	u6920
  7191   00394C  EFA8  F01C         	goto	u6921
  7192   003950                     u6921:
  7193   003950  EFB0  F01C         	goto	l6577
  7194   003954                     u6920:
  7195   003954  6C01               	negf	___awmod@dividend^0,c
  7196   003956  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7197   003958  B0D8               	btfsc	status,0,c
  7198   00395A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7199   00395C  0E01               	movlw	1
  7200   00395E  6E06               	movwf	___awmod@sign^0,c
  7201   003960                     l6577:
  7202   003960  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7203   003962  EFB7  F01C         	goto	u6930
  7204   003966  EFB5  F01C         	goto	u6931
  7205   00396A                     u6931:
  7206   00396A  EFBB  F01C         	goto	l6581
  7207   00396E                     u6930:
  7208   00396E  6C03               	negf	___awmod@divisor^0,c
  7209   003970  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7210   003972  B0D8               	btfsc	status,0,c
  7211   003974  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7212   003976                     l6581:
  7213   003976  5003               	movf	___awmod@divisor^0,w,c
  7214   003978  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7215   00397A  B4D8               	btfsc	status,2,c
  7216   00397C  EFC2  F01C         	goto	u6941
  7217   003980  EFC4  F01C         	goto	u6940
  7218   003984                     u6941:
  7219   003984  EFE8  F01C         	goto	l6597
  7220   003988                     u6940:
  7221   003988  0E01               	movlw	1
  7222   00398A  6E05               	movwf	___awmod@counter^0,c
  7223   00398C  EFCC  F01C         	goto	l6587
  7224   003990                     l6585:
  7225   003990  90D8               	bcf	status,0,c
  7226   003992  3603               	rlcf	___awmod@divisor^0,f,c
  7227   003994  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7228   003996  2A05               	incf	___awmod@counter^0,f,c
  7229   003998                     l6587:
  7230   003998  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7231   00399A  EFD1  F01C         	goto	u6951
  7232   00399E  EFD3  F01C         	goto	u6950
  7233   0039A2                     u6951:
  7234   0039A2  EFC8  F01C         	goto	l6585
  7235   0039A6                     u6950:
  7236   0039A6                     l6589:
  7237   0039A6  5003               	movf	___awmod@divisor^0,w,c
  7238   0039A8  5C01               	subwf	___awmod@dividend^0,w,c
  7239   0039AA  5004               	movf	(___awmod@divisor+1)^0,w,c
  7240   0039AC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7241   0039AE  A0D8               	btfss	status,0,c
  7242   0039B0  EFDC  F01C         	goto	u6961
  7243   0039B4  EFDE  F01C         	goto	u6960
  7244   0039B8                     u6961:
  7245   0039B8  EFE2  F01C         	goto	l6593
  7246   0039BC                     u6960:
  7247   0039BC  5003               	movf	___awmod@divisor^0,w,c
  7248   0039BE  5E01               	subwf	___awmod@dividend^0,f,c
  7249   0039C0  5004               	movf	(___awmod@divisor+1)^0,w,c
  7250   0039C2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7251   0039C4                     l6593:
  7252   0039C4  90D8               	bcf	status,0,c
  7253   0039C6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7254   0039C8  3203               	rrcf	___awmod@divisor^0,f,c
  7255   0039CA  2E05               	decfsz	___awmod@counter^0,f,c
  7256   0039CC  EFD3  F01C         	goto	l6589
  7257   0039D0                     l6597:
  7258   0039D0  5006               	movf	___awmod@sign^0,w,c
  7259   0039D2  B4D8               	btfsc	status,2,c
  7260   0039D4  EFEE  F01C         	goto	u6971
  7261   0039D8  EFF0  F01C         	goto	u6970
  7262   0039DC                     u6971:
  7263   0039DC  EFF4  F01C         	goto	l6601
  7264   0039E0                     u6970:
  7265   0039E0  6C01               	negf	___awmod@dividend^0,c
  7266   0039E2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7267   0039E4  B0D8               	btfsc	status,0,c
  7268   0039E6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7269   0039E8                     l6601:
  7270   0039E8  C001  F001         	movff	___awmod@dividend,?___awmod
  7271   0039EC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7272   0039F0  0012               	return		;funcret
  7273   0039F2                     __end_of___awmod:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function ___awdiv *****************
  7277 ;; Defined at:
  7278 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  dividend        2    0[COMRAM] int 
  7281 ;;  divisor         2    2[COMRAM] int 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  quotient        2    6[COMRAM] int 
  7284 ;;  sign            1    5[COMRAM] unsigned char 
  7285 ;;  counter         1    4[COMRAM] unsigned char 
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  2    0[COMRAM] int 
  7288 ;; Registers used:
  7289 ;;		wreg, status,2, status,0
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;Total ram usage:        8 bytes
  7300 ;; Hardware stack levels used: 1
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_dtoa
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text28
  7309   003706                     __ptext28:
  7310                           	callstack 0
  7311   003706                     ___awdiv:
  7312                           	callstack 25
  7313   003706  0E00               	movlw	0
  7314   003708  6E06               	movwf	___awdiv@sign^0,c
  7315   00370A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7316   00370C  EF8C  F01B         	goto	u6860
  7317   003710  EF8A  F01B         	goto	u6861
  7318   003714                     u6861:
  7319   003714  EF92  F01B         	goto	l6533
  7320   003718                     u6860:
  7321   003718  6C03               	negf	___awdiv@divisor^0,c
  7322   00371A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7323   00371C  B0D8               	btfsc	status,0,c
  7324   00371E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7325   003720  0E01               	movlw	1
  7326   003722  6E06               	movwf	___awdiv@sign^0,c
  7327   003724                     l6533:
  7328   003724  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7329   003726  EF99  F01B         	goto	u6870
  7330   00372A  EF97  F01B         	goto	u6871
  7331   00372E                     u6871:
  7332   00372E  EF9F  F01B         	goto	l6539
  7333   003732                     u6870:
  7334   003732  6C01               	negf	___awdiv@dividend^0,c
  7335   003734  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7336   003736  B0D8               	btfsc	status,0,c
  7337   003738  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7338   00373A  0E01               	movlw	1
  7339   00373C  1A06               	xorwf	___awdiv@sign^0,f,c
  7340   00373E                     l6539:
  7341   00373E  0E00               	movlw	0
  7342   003740  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7343   003742  0E00               	movlw	0
  7344   003744  6E07               	movwf	___awdiv@quotient^0,c
  7345   003746  5003               	movf	___awdiv@divisor^0,w,c
  7346   003748  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7347   00374A  B4D8               	btfsc	status,2,c
  7348   00374C  EFAA  F01B         	goto	u6881
  7349   003750  EFAC  F01B         	goto	u6880
  7350   003754                     u6881:
  7351   003754  EFD4  F01B         	goto	l6561
  7352   003758                     u6880:
  7353   003758  0E01               	movlw	1
  7354   00375A  6E05               	movwf	___awdiv@counter^0,c
  7355   00375C  EFB4  F01B         	goto	l6547
  7356   003760                     l6545:
  7357   003760  90D8               	bcf	status,0,c
  7358   003762  3603               	rlcf	___awdiv@divisor^0,f,c
  7359   003764  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7360   003766  2A05               	incf	___awdiv@counter^0,f,c
  7361   003768                     l6547:
  7362   003768  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7363   00376A  EFB9  F01B         	goto	u6891
  7364   00376E  EFBB  F01B         	goto	u6890
  7365   003772                     u6891:
  7366   003772  EFB0  F01B         	goto	l6545
  7367   003776                     u6890:
  7368   003776                     l6549:
  7369   003776  90D8               	bcf	status,0,c
  7370   003778  3607               	rlcf	___awdiv@quotient^0,f,c
  7371   00377A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7372   00377C  5003               	movf	___awdiv@divisor^0,w,c
  7373   00377E  5C01               	subwf	___awdiv@dividend^0,w,c
  7374   003780  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7375   003782  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7376   003784  A0D8               	btfss	status,0,c
  7377   003786  EFC7  F01B         	goto	u6901
  7378   00378A  EFC9  F01B         	goto	u6900
  7379   00378E                     u6901:
  7380   00378E  EFCE  F01B         	goto	l6557
  7381   003792                     u6900:
  7382   003792  5003               	movf	___awdiv@divisor^0,w,c
  7383   003794  5E01               	subwf	___awdiv@dividend^0,f,c
  7384   003796  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7385   003798  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7386   00379A  8007               	bsf	___awdiv@quotient^0,0,c
  7387   00379C                     l6557:
  7388   00379C  90D8               	bcf	status,0,c
  7389   00379E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7390   0037A0  3203               	rrcf	___awdiv@divisor^0,f,c
  7391   0037A2  2E05               	decfsz	___awdiv@counter^0,f,c
  7392   0037A4  EFBB  F01B         	goto	l6549
  7393   0037A8                     l6561:
  7394   0037A8  5006               	movf	___awdiv@sign^0,w,c
  7395   0037AA  B4D8               	btfsc	status,2,c
  7396   0037AC  EFDA  F01B         	goto	u6911
  7397   0037B0  EFDC  F01B         	goto	u6910
  7398   0037B4                     u6911:
  7399   0037B4  EFE0  F01B         	goto	l6565
  7400   0037B8                     u6910:
  7401   0037B8  6C07               	negf	___awdiv@quotient^0,c
  7402   0037BA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7403   0037BC  B0D8               	btfsc	status,0,c
  7404   0037BE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7405   0037C0                     l6565:
  7406   0037C0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7407   0037C4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7408   0037C8  0012               	return		;funcret
  7409   0037CA                     __end_of___awdiv:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _memset *****************
  7413 ;; Defined at:
  7414 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  dest            1    0[COMRAM] PTR void 
  7417 ;;		 -> Password_text(6), 
  7418 ;;  c               2    1[COMRAM] int 
  7419 ;;  n               2    3[COMRAM] unsigned int 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  p               1    5[COMRAM] PTR unsigned char 
  7422 ;;		 -> Password_text(6), 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  1    wreg      PTR void 
  7425 ;; Registers used:
  7426 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7432 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;Total ram usage:        6 bytes
  7437 ;; Hardware stack levels used: 1
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_convert_uint16_to_string
  7442 ;;		_convert_uint8_to_string
  7443 ;;		_convert_uint32_to_string
  7444 ;;		_convert_float32_to_string
  7445 ;;		_convert_float64_to_string
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           	psect	text29
  7450   00444C                     __ptext29:
  7451                           	callstack 0
  7452   00444C                     _memset:
  7453                           	callstack 29
  7454   00444C  C001  F006         	movff	memset@dest,memset@p
  7455   004450  EF30  F022         	goto	l7165
  7456   004454                     l7161:
  7457   004454  5006               	movf	memset@p^0,w,c
  7458   004456  6ED9               	movwf	fsr2l,c
  7459   004458  6ADA               	clrf	fsr2h,c
  7460   00445A  C002  FFDF         	movff	memset@c,indf2
  7461   00445E  2A06               	incf	memset@p^0,f,c
  7462   004460                     l7165:
  7463   004460  0604               	decf	memset@n^0,f,c
  7464   004462  A0D8               	btfss	status,0,c
  7465   004464  0605               	decf	(memset@n+1)^0,f,c
  7466   004466  2804               	incf	memset@n^0,w,c
  7467   004468  E106               	bnz	u7861
  7468   00446A  2805               	incf	(memset@n+1)^0,w,c
  7469   00446C  A4D8               	btfss	status,2,c
  7470   00446E  EF3B  F022         	goto	u7861
  7471   004472  EF3D  F022         	goto	u7860
  7472   004476                     u7861:
  7473   004476  EF2A  F022         	goto	l7161
  7474   00447A                     u7860:
  7475   00447A  0012               	return		;funcret
  7476   00447C                     __end_of_memset:
  7477                           	callstack 0
  7478                           
  7479 ;; *************** function _Welcom *****************
  7480 ;; Defined at:
  7481 ;;		line 146 in file "main.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;		None
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  l_welcom_cou    1   26[COMRAM] unsigned char 
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7499 ;;Total ram usage:        3 bytes
  7500 ;; Hardware stack levels used: 1
  7501 ;; Hardware stack levels required when called: 4
  7502 ;; This function calls:
  7503 ;;		_lcd_4bit_send_command
  7504 ;;		_lcd_4bit_send_string_data
  7505 ;; This function is called by:
  7506 ;;		_main
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text30
  7511   00363C                     __ptext30:
  7512                           	callstack 0
  7513   00363C                     _Welcom:
  7514                           	callstack 26
  7515   00363C                     
  7516                           ;main.c: 150:     ret = lcd_4bit_send_string_data(&lcd1, " Welcom");
  7517   00363C  0EC6               	movlw	low _lcd1
  7518   00363E  6E12               	movwf	lcd_4bit_send_string_data@lcd^0,c
  7519   003640  0E25               	movlw	low STR_6
  7520   003642  6E13               	movwf	lcd_4bit_send_string_data@str_data^0,c
  7521   003644  5013               	movf	lcd_4bit_send_string_data@str_data^0,w,c
  7522   003646  A4D8               	btfss	status,2,c
  7523   003648  0E10               	movlw	high __smallconst
  7524   00364A  6E14               	movwf	(lcd_4bit_send_string_data@str_data+1)^0,c
  7525   00364C  EC45  F01C         	call	_lcd_4bit_send_string_data	;wreg free
  7526   003650  6E57               	movwf	_ret^0,c
  7527   003652                     
  7528                           ;main.c: 151:     _delay((unsigned long)((100)*(8000000/4000.0)));
  7529   003652  0E02               	movlw	2
  7530   003654  6E1A               	movwf	(??_Welcom+1)^0,c
  7531   003656  0E04               	movlw	4
  7532   003658  6E19               	movwf	??_Welcom^0,c
  7533   00365A  0EBA               	movlw	186
  7534   00365C                     u7997:
  7535   00365C  2EE8               	decfsz	wreg,f,c
  7536   00365E  D7FE               	bra	u7997
  7537   003660  2E19               	decfsz	??_Welcom^0,f,c
  7538   003662  D7FC               	bra	u7997
  7539   003664  2E1A               	decfsz	(??_Welcom+1)^0,f,c
  7540   003666  D7FA               	bra	u7997
  7541   003668  F000 F000          	nop2	
  7542   00366C                     
  7543                           ;main.c: 152:  for(l_welcom_counter =0; l_welcom_counter<12; l_welcom_counter++)
  7544   00366C  0E00               	movlw	0
  7545   00366E  6E1B               	movwf	Welcom@l_welcom_counter^0,c
  7546   003670                     l5529:
  7547                           
  7548                           ;main.c: 153:  {;main.c: 154:   ret = lcd_4bit_send_command(&lcd1, 0X1C);
  7549   003670  0EC6               	movlw	low _lcd1
  7550   003672  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  7551   003674  0E1C               	movlw	28
  7552   003676  6E10               	movwf	lcd_4bit_send_command@command^0,c
  7553   003678  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  7554   00367C  6E57               	movwf	_ret^0,c
  7555   00367E                     
  7556                           ;main.c: 155:   _delay((unsigned long)((100)*(8000000/4000.0)));
  7557   00367E  0E02               	movlw	2
  7558   003680  6E1A               	movwf	(??_Welcom+1)^0,c
  7559   003682  0E04               	movlw	4
  7560   003684  6E19               	movwf	??_Welcom^0,c
  7561   003686  0EBA               	movlw	186
  7562   003688                     u8007:
  7563   003688  2EE8               	decfsz	wreg,f,c
  7564   00368A  D7FE               	bra	u8007
  7565   00368C  2E19               	decfsz	??_Welcom^0,f,c
  7566   00368E  D7FC               	bra	u8007
  7567   003690  2E1A               	decfsz	(??_Welcom+1)^0,f,c
  7568   003692  D7FA               	bra	u8007
  7569   003694  F000 F000          	nop2	
  7570   003698                     
  7571                           ;main.c: 156:  }
  7572   003698  2A1B               	incf	Welcom@l_welcom_counter^0,f,c
  7573   00369A  0E0B               	movlw	11
  7574   00369C  641B               	cpfsgt	Welcom@l_welcom_counter^0,c
  7575   00369E  EF53  F01B         	goto	u5631
  7576   0036A2  EF55  F01B         	goto	u5630
  7577   0036A6                     u5631:
  7578   0036A6  EF38  F01B         	goto	l5529
  7579   0036AA                     u5630:
  7580   0036AA                     
  7581                           ;main.c: 158:  for(l_welcom_counter =0; l_welcom_counter<12; l_welcom_counter++)
  7582   0036AA  0E00               	movlw	0
  7583   0036AC  6E1B               	movwf	Welcom@l_welcom_counter^0,c
  7584   0036AE                     l5543:
  7585                           
  7586                           ;main.c: 159:  {;main.c: 160:   ret = lcd_4bit_send_command(&lcd1, 0X18);
  7587   0036AE  0EC6               	movlw	low _lcd1
  7588   0036B0  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  7589   0036B2  0E18               	movlw	24
  7590   0036B4  6E10               	movwf	lcd_4bit_send_command@command^0,c
  7591   0036B6  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  7592   0036BA  6E57               	movwf	_ret^0,c
  7593   0036BC                     
  7594                           ;main.c: 161:   _delay((unsigned long)((100)*(8000000/4000.0)));
  7595   0036BC  0E02               	movlw	2
  7596   0036BE  6E1A               	movwf	(??_Welcom+1)^0,c
  7597   0036C0  0E04               	movlw	4
  7598   0036C2  6E19               	movwf	??_Welcom^0,c
  7599   0036C4  0EBA               	movlw	186
  7600   0036C6                     u8017:
  7601   0036C6  2EE8               	decfsz	wreg,f,c
  7602   0036C8  D7FE               	bra	u8017
  7603   0036CA  2E19               	decfsz	??_Welcom^0,f,c
  7604   0036CC  D7FC               	bra	u8017
  7605   0036CE  2E1A               	decfsz	(??_Welcom+1)^0,f,c
  7606   0036D0  D7FA               	bra	u8017
  7607   0036D2  F000 F000          	nop2	
  7608   0036D6                     
  7609                           ;main.c: 163:  }
  7610   0036D6  2A1B               	incf	Welcom@l_welcom_counter^0,f,c
  7611   0036D8  0E0B               	movlw	11
  7612   0036DA  641B               	cpfsgt	Welcom@l_welcom_counter^0,c
  7613   0036DC  EF72  F01B         	goto	u5641
  7614   0036E0  EF74  F01B         	goto	u5640
  7615   0036E4                     u5641:
  7616   0036E4  EF57  F01B         	goto	l5543
  7617   0036E8                     u5640:
  7618   0036E8                     
  7619                           ;main.c: 165:     ret = lcd_4bit_send_command(&lcd1, 0X01);
  7620   0036E8  0EC6               	movlw	low _lcd1
  7621   0036EA  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  7622   0036EC  0E01               	movlw	1
  7623   0036EE  6E10               	movwf	lcd_4bit_send_command@command^0,c
  7624   0036F0  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  7625   0036F4  6E57               	movwf	_ret^0,c
  7626                           
  7627                           ;main.c: 166:     ret = lcd_4bit_send_command(&lcd1, 0X02);
  7628   0036F6  0EC6               	movlw	low _lcd1
  7629   0036F8  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  7630   0036FA  0E02               	movlw	2
  7631   0036FC  6E10               	movwf	lcd_4bit_send_command@command^0,c
  7632   0036FE  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  7633   003702  6E57               	movwf	_ret^0,c
  7634   003704  0012               	return		;funcret
  7635   003706                     __end_of_Welcom:
  7636                           	callstack 0
  7637                           
  7638 ;; *************** function _Set_Password *****************
  7639 ;; Defined at:
  7640 ;;		line 169 in file "main.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;		None
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  Return_Value    2   40[COMRAM] unsigned short 
  7645 ;;  l_Counter       1   42[COMRAM] unsigned char 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  2   30[COMRAM] unsigned short 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;Total ram usage:       13 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; Hardware stack levels required when called: 5
  7662 ;; This function calls:
  7663 ;;		___wmul
  7664 ;;		_keypad_get_value
  7665 ;;		_lcd_4bit_send_command
  7666 ;;		_lcd_4bit_send_string_data
  7667 ;;		_lcd_4bit_send_string_data_pos
  7668 ;; This function is called by:
  7669 ;;		_main
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text31
  7674   003048                     __ptext31:
  7675                           	callstack 0
  7676   003048                     _Set_Password:
  7677                           	callstack 25
  7678   003048                     
  7679                           ;main.c: 172:     uint8 l_Counter = 0;
  7680   003048  0E00               	movlw	0
  7681   00304A  6E2B               	movwf	Set_Password@l_Counter^0,c
  7682   00304C                     
  7683                           ;main.c: 174:     ret = lcd_4bit_send_string_data(&lcd1, "PLease Set Password");
  7684   00304C  0EC6               	movlw	low _lcd1
  7685   00304E  6E12               	movwf	lcd_4bit_send_string_data@lcd^0,c
  7686   003050  0E11               	movlw	low STR_7
  7687   003052  6E13               	movwf	lcd_4bit_send_string_data@str_data^0,c
  7688   003054  5013               	movf	lcd_4bit_send_string_data@str_data^0,w,c
  7689   003056  A4D8               	btfss	status,2,c
  7690   003058  0E10               	movlw	high __smallconst
  7691   00305A  6E14               	movwf	(lcd_4bit_send_string_data@str_data+1)^0,c
  7692   00305C  EC45  F01C         	call	_lcd_4bit_send_string_data	;wreg free
  7693   003060  6E57               	movwf	_ret^0,c
  7694   003062                     
  7695                           ;main.c: 175:     ret = lcd_4bit_send_string_data_pos(&lcd1, 2, 7, " ");
  7696   003062  0EC6               	movlw	low _lcd1
  7697   003064  6E19               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  7698   003066  0E02               	movlw	2
  7699   003068  6E1A               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  7700   00306A  0E07               	movlw	7
  7701   00306C  6E1B               	movwf	lcd_4bit_send_string_data_pos@coulmn^0,c
  7702   00306E  0E42               	movlw	low STR_8
  7703   003070  6E1C               	movwf	lcd_4bit_send_string_data_pos@str_data^0,c
  7704   003072  501C               	movf	lcd_4bit_send_string_data_pos@str_data^0,w,c
  7705   003074  A4D8               	btfss	status,2,c
  7706   003076  0E10               	movlw	high __smallconst
  7707   003078  6E1D               	movwf	(lcd_4bit_send_string_data_pos@str_data+1)^0,c
  7708   00307A  EC8D  F020         	call	_lcd_4bit_send_string_data_pos	;wreg free
  7709   00307E  6E57               	movwf	_ret^0,c
  7710   003080                     
  7711                           ;main.c: 176:     ret = lcd_4bit_send_command(&lcd1,0X0E);
  7712   003080  0EC6               	movlw	low _lcd1
  7713   003082  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  7714   003084  0E0E               	movlw	14
  7715   003086  6E10               	movwf	lcd_4bit_send_command@command^0,c
  7716   003088  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  7717   00308C  6E57               	movwf	_ret^0,c
  7718                           
  7719                           ;main.c: 179:     while(l_Counter < 4)
  7720   00308E  EF75  F018         	goto	l7221
  7721   003092                     l7211:
  7722                           
  7723                           ;main.c: 180:     {;main.c: 182:         ret = keypad_get_value(&key1, &(Keypad_Value[l_
      +                          Counter]));
  7724   003092  0EBE               	movlw	low _key1
  7725   003094  6E09               	movwf	keypad_get_value@obj^0,c
  7726   003096  502B               	movf	Set_Password@l_Counter^0,w,c
  7727   003098  0FCC               	addlw	low _Keypad_Value
  7728   00309A  6E0A               	movwf	keypad_get_value@value^0,c
  7729   00309C  ECA9  F01A         	call	_keypad_get_value	;wreg free
  7730   0030A0  6E57               	movwf	_ret^0,c
  7731   0030A2                     
  7732                           ;main.c: 184:         if (Keypad_Value[l_Counter] != 77)
  7733   0030A2  502B               	movf	Set_Password@l_Counter^0,w,c
  7734   0030A4  0FCC               	addlw	low _Keypad_Value
  7735   0030A6  6ED9               	movwf	fsr2l,c
  7736   0030A8  6ADA               	clrf	fsr2h,c
  7737   0030AA  0E4D               	movlw	77
  7738   0030AC  18DE               	xorwf	postinc2,w,c
  7739   0030AE  B4D8               	btfsc	status,2,c
  7740   0030B0  EF5C  F018         	goto	u7901
  7741   0030B4  EF5E  F018         	goto	u7900
  7742   0030B8                     u7901:
  7743   0030B8  EF75  F018         	goto	l7221
  7744   0030BC                     u7900:
  7745   0030BC                     
  7746                           ;main.c: 185:         {;main.c: 186:             ret = lcd_4bit_send_string_data(&lcd1, 
      +                          "*");
  7747   0030BC  0EC6               	movlw	low _lcd1
  7748   0030BE  6E12               	movwf	lcd_4bit_send_string_data@lcd^0,c
  7749   0030C0  0E44               	movlw	low STR_9
  7750   0030C2  6E13               	movwf	lcd_4bit_send_string_data@str_data^0,c
  7751   0030C4  5013               	movf	lcd_4bit_send_string_data@str_data^0,w,c
  7752   0030C6  A4D8               	btfss	status,2,c
  7753   0030C8  0E10               	movlw	high __smallconst
  7754   0030CA  6E14               	movwf	(lcd_4bit_send_string_data@str_data+1)^0,c
  7755   0030CC  EC45  F01C         	call	_lcd_4bit_send_string_data	;wreg free
  7756   0030D0  6E57               	movwf	_ret^0,c
  7757   0030D2                     
  7758                           ;main.c: 187:             l_Counter++;
  7759   0030D2  2A2B               	incf	Set_Password@l_Counter^0,f,c
  7760   0030D4                     
  7761                           ;main.c: 188:             _delay((unsigned long)((500)*(8000000/4000.0)));
  7762   0030D4  0E06               	movlw	6
  7763   0030D6  6E22               	movwf	(??_Set_Password+1)^0,c
  7764   0030D8  0E13               	movlw	19
  7765   0030DA  6E21               	movwf	??_Set_Password^0,c
  7766   0030DC  0EAE               	movlw	174
  7767   0030DE                     u8027:
  7768   0030DE  2EE8               	decfsz	wreg,f,c
  7769   0030E0  D7FE               	bra	u8027
  7770   0030E2  2E21               	decfsz	??_Set_Password^0,f,c
  7771   0030E4  D7FC               	bra	u8027
  7772   0030E6  2E22               	decfsz	(??_Set_Password+1)^0,f,c
  7773   0030E8  D7FA               	bra	u8027
  7774   0030EA                     l7221:
  7775                           
  7776                           ;main.c: 179:     while(l_Counter < 4)
  7777   0030EA  0E03               	movlw	3
  7778   0030EC  642B               	cpfsgt	Set_Password@l_Counter^0,c
  7779   0030EE  EF7B  F018         	goto	u7911
  7780   0030F2  EF7D  F018         	goto	u7910
  7781   0030F6                     u7911:
  7782   0030F6  EF49  F018         	goto	l7211
  7783   0030FA                     u7910:
  7784   0030FA                     
  7785                           ;main.c: 193:     Return_Value = (Keypad_Value[3]- 48)+ (Keypad_Value[2]- 48)*10 + (Keyp
      +                          ad_Value[1]- 48)*100 + (Keypad_Value[0]- 48) *1000;
  7786   0030FA  C0CC  F001         	movff	_Keypad_Value,___wmul@multiplier
  7787   0030FE  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7788   003100  0E03               	movlw	3
  7789   003102  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7790   003104  0EE8               	movlw	232
  7791   003106  6E03               	movwf	___wmul@multiplicand^0,c
  7792   003108  EC56  F022         	call	___wmul	;wreg free
  7793   00310C  0100               	movlb	0	; () banked
  7794   00310E  51CE               	movf	(_Keypad_Value+2)& (0+255),w,b
  7795   003110  0D0A               	mullw	10
  7796   003112  CFF3 F021          	movff	prodl,??_Set_Password
  7797   003116  CFF4 F022          	movff	prodh,??_Set_Password+1
  7798   00311A  51CD               	movf	(_Keypad_Value+1)& (0+255),w,b
  7799   00311C  0D64               	mullw	100
  7800   00311E  CFF3 F023          	movff	prodl,??_Set_Password+2
  7801   003122  CFF4 F024          	movff	prodh,??_Set_Password+3
  7802   003126  5021               	movf	??_Set_Password^0,w,c
  7803   003128  2423               	addwf	(??_Set_Password+2)^0,w,c
  7804   00312A  6E25               	movwf	(??_Set_Password+4)^0,c
  7805   00312C  5022               	movf	(??_Set_Password+1)^0,w,c
  7806   00312E  2024               	addwfc	(??_Set_Password+3)^0,w,c
  7807   003130  6E26               	movwf	(??_Set_Password+5)^0,c
  7808   003132  5001               	movf	?___wmul^0,w,c
  7809   003134  2425               	addwf	(??_Set_Password+4)^0,w,c
  7810   003136  6E27               	movwf	(??_Set_Password+6)^0,c
  7811   003138  5002               	movf	(?___wmul+1)^0,w,c
  7812   00313A  2026               	addwfc	(??_Set_Password+5)^0,w,c
  7813   00313C  6E28               	movwf	(??_Set_Password+7)^0,c
  7814   00313E  51CF               	movf	(_Keypad_Value+3)& (0+255),w,b
  7815   003140  2627               	addwf	(??_Set_Password+6)^0,f,c
  7816   003142  0E00               	movlw	0
  7817   003144  2228               	addwfc	(??_Set_Password+7)^0,f,c
  7818   003146  0EB0               	movlw	176
  7819   003148  2427               	addwf	(??_Set_Password+6)^0,w,c
  7820   00314A  6E29               	movwf	Set_Password@Return_Value^0,c
  7821   00314C  0E2F               	movlw	47
  7822   00314E  2028               	addwfc	(??_Set_Password+7)^0,w,c
  7823   003150  6E2A               	movwf	(Set_Password@Return_Value+1)^0,c
  7824   003152                     
  7825                           ; BSR set to: 0
  7826                           ;main.c: 195:     return Return_Value;
  7827   003152  C029  F01F         	movff	Set_Password@Return_Value,?_Set_Password
  7828   003156  C02A  F020         	movff	Set_Password@Return_Value+1,?_Set_Password+1
  7829   00315A                     
  7830                           ; BSR set to: 0
  7831   00315A  0012               	return		;funcret
  7832   00315C                     __end_of_Set_Password:
  7833                           	callstack 0
  7834                           
  7835 ;; *************** function _lcd_4bit_send_string_data_pos *****************
  7836 ;; Defined at:
  7837 ;;		line 260 in file "ECU/LCD/ecu_chr_lcd.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  lcd             1   24[COMRAM] PTR const struct .
  7840 ;;		 -> lcd1(6), 
  7841 ;;  row             1   25[COMRAM] unsigned char 
  7842 ;;  coulmn          1   26[COMRAM] unsigned char 
  7843 ;;  str_data        2   27[COMRAM] PTR unsigned char 
  7844 ;;		 -> STR_8(2), Password_text(6), 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  Ret             1   29[COMRAM] unsigned char 
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  1    wreg      unsigned char 
  7849 ;; Registers used:
  7850 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7856 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;Total ram usage:        6 bytes
  7861 ;; Hardware stack levels used: 1
  7862 ;; Hardware stack levels required when called: 4
  7863 ;; This function calls:
  7864 ;;		_lcd_4bit_send_string_data
  7865 ;;		_lcd_4bit_set_cursor
  7866 ;; This function is called by:
  7867 ;;		_main
  7868 ;;		_Set_Password
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           	psect	text32
  7873   00411A                     __ptext32:
  7874                           	callstack 0
  7875   00411A                     _lcd_4bit_send_string_data_pos:
  7876                           	callstack 26
  7877   00411A                     
  7878                           ;ECU/LCD/ecu_chr_lcd.c: 265:     if( (((void*)0) == lcd) || (((void*)0) == str_data) )
  7879   00411A  5019               	movf	lcd_4bit_send_string_data_pos@lcd^0,w,c
  7880   00411C  B4D8               	btfsc	status,2,c
  7881   00411E  EF93  F020         	goto	u5361
  7882   004122  EF95  F020         	goto	u5360
  7883   004126                     u5361:
  7884   004126  EF9E  F020         	goto	l5245
  7885   00412A                     u5360:
  7886   00412A  501C               	movf	lcd_4bit_send_string_data_pos@str_data^0,w,c
  7887   00412C  101D               	iorwf	(lcd_4bit_send_string_data_pos@str_data+1)^0,w,c
  7888   00412E  A4D8               	btfss	status,2,c
  7889   004130  EF9C  F020         	goto	u5371
  7890   004134  EF9E  F020         	goto	u5370
  7891   004138                     u5371:
  7892   004138  EFA2  F020         	goto	l5247
  7893   00413C                     u5370:
  7894   00413C                     l5245:
  7895                           
  7896                           ;ECU/LCD/ecu_chr_lcd.c: 266:     {;ECU/LCD/ecu_chr_lcd.c: 267:         Ret = (Std_Return
      +                          Type)0X00;
  7897   00413C  0E00               	movlw	0
  7898   00413E  6E1E               	movwf	lcd_4bit_send_string_data_pos@Ret^0,c
  7899                           
  7900                           ;ECU/LCD/ecu_chr_lcd.c: 268:     }
  7901   004140  EFB3  F020         	goto	l5251
  7902   004144                     l5247:
  7903   004144  C019  F012         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bit_set_cursor@lcd
  7904   004148  C01A  F013         	movff	lcd_4bit_send_string_data_pos@row,lcd_4bit_set_cursor@row
  7905   00414C  C01B  F014         	movff	lcd_4bit_send_string_data_pos@coulmn,lcd_4bit_set_cursor@coulmn
  7906   004150  ECF9  F01C         	call	_lcd_4bit_set_cursor	;wreg free
  7907   004154                     
  7908                           ;ECU/LCD/ecu_chr_lcd.c: 274:   Ret = lcd_4bit_send_string_data(lcd, str_data);
  7909   004154  C019  F012         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bit_send_string_data@lcd
  7910   004158  C01C  F013         	movff	lcd_4bit_send_string_data_pos@str_data,lcd_4bit_send_string_data@str_data
  7911   00415C  C01D  F014         	movff	lcd_4bit_send_string_data_pos@str_data+1,lcd_4bit_send_string_data@str_data+1
  7912   004160  EC45  F01C         	call	_lcd_4bit_send_string_data	;wreg free
  7913   004164  6E1E               	movwf	lcd_4bit_send_string_data_pos@Ret^0,c
  7914   004166                     l5251:
  7915                           
  7916                           ;ECU/LCD/ecu_chr_lcd.c: 279:  return Ret;
  7917   004166  501E               	movf	lcd_4bit_send_string_data_pos@Ret^0,w,c
  7918   004168  0012               	return		;funcret
  7919   00416A                     __end_of_lcd_4bit_send_string_data_pos:
  7920                           	callstack 0
  7921                           
  7922 ;; *************** function _lcd_4bit_set_cursor *****************
  7923 ;; Defined at:
  7924 ;;		line 1021 in file "ECU/LCD/ecu_chr_lcd.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  lcd             1   17[COMRAM] PTR const struct .
  7927 ;;		 -> lcd1(6), 
  7928 ;;  row             1   18[COMRAM] unsigned char 
  7929 ;;  coulmn          1   19[COMRAM] unsigned char 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  Ret             1   22[COMRAM] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      unsigned char 
  7934 ;; Registers used:
  7935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7941 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;Total ram usage:        6 bytes
  7946 ;; Hardware stack levels used: 1
  7947 ;; Hardware stack levels required when called: 3
  7948 ;; This function calls:
  7949 ;;		_lcd_4bit_send_command
  7950 ;; This function is called by:
  7951 ;;		_lcd_4bit_send_string_data_pos
  7952 ;;		_lcd_4bit_send_char_data_pos
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text33
  7957   0039F2                     __ptext33:
  7958                           	callstack 0
  7959   0039F2                     _lcd_4bit_set_cursor:
  7960                           	callstack 26
  7961   0039F2                     
  7962                           ;ECU/LCD/ecu_chr_lcd.c: 1021: static Std_ReturnType lcd_4bit_set_cursor(const chr_lcd_4b
      +                          it_t* lcd, uint8 row, uint8 coulmn);ECU/LCD/ecu_chr_lcd.c: 1022: {;ECU/LCD/ecu_chr_lcd.c
      +                          : 1024:  Std_ReturnType Ret = (Std_ReturnType)0X01;
  7963   0039F2  0E01               	movlw	1
  7964   0039F4  6E17               	movwf	lcd_4bit_set_cursor@Ret^0,c
  7965                           
  7966                           ;ECU/LCD/ecu_chr_lcd.c: 1026:     if( ((void*)0) == lcd )
  7967   0039F6  5012               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  7968   0039F8  A4D8               	btfss	status,2,c
  7969   0039FA  EF01  F01D         	goto	u5181
  7970   0039FE  EF03  F01D         	goto	u5180
  7971   003A02                     u5181:
  7972   003A02  EF07  F01D         	goto	l5063
  7973   003A06                     u5180:
  7974   003A06                     
  7975                           ;ECU/LCD/ecu_chr_lcd.c: 1027:     {;ECU/LCD/ecu_chr_lcd.c: 1028:         Ret = (Std_Retu
      +                          rnType)0X00;
  7976   003A06  0E00               	movlw	0
  7977   003A08  6E17               	movwf	lcd_4bit_set_cursor@Ret^0,c
  7978                           
  7979                           ;ECU/LCD/ecu_chr_lcd.c: 1029:     }
  7980   003A0A  EF4F  F01D         	goto	l5077
  7981   003A0E                     l5063:
  7982                           
  7983                           ;ECU/LCD/ecu_chr_lcd.c: 1032:     {;ECU/LCD/ecu_chr_lcd.c: 1033:   coulmn--;
  7984   003A0E  0614               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  7985                           
  7986                           ;ECU/LCD/ecu_chr_lcd.c: 1035:   switch(row)
  7987   003A10  EF32  F01D         	goto	l5075
  7988   003A14                     l5065:
  7989   003A14  C012  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  7990   003A18  5014               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  7991   003A1A  0F80               	addlw	128
  7992   003A1C  6E10               	movwf	lcd_4bit_send_command@command^0,c
  7993   003A1E  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  7994   003A22  6E17               	movwf	lcd_4bit_set_cursor@Ret^0,c
  7995   003A24  EF4F  F01D         	goto	l5077
  7996   003A28                     l5067:
  7997   003A28  C012  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  7998   003A2C  5014               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  7999   003A2E  0FC0               	addlw	192
  8000   003A30  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8001   003A32  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  8002   003A36  6E17               	movwf	lcd_4bit_set_cursor@Ret^0,c
  8003   003A38  EF4F  F01D         	goto	l5077
  8004   003A3C                     l5069:
  8005   003A3C  C012  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  8006   003A40  5014               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  8007   003A42  0F94               	addlw	148
  8008   003A44  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8009   003A46  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  8010   003A4A  6E17               	movwf	lcd_4bit_set_cursor@Ret^0,c
  8011   003A4C  EF4F  F01D         	goto	l5077
  8012   003A50                     l5071:
  8013   003A50  C012  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  8014   003A54  5014               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  8015   003A56  0FD4               	addlw	212
  8016   003A58  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8017   003A5A  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  8018   003A5E  6E17               	movwf	lcd_4bit_set_cursor@Ret^0,c
  8019   003A60  EF4F  F01D         	goto	l5077
  8020   003A64                     l5075:
  8021   003A64  5013               	movf	lcd_4bit_set_cursor@row^0,w,c
  8022   003A66  6E15               	movwf	??_lcd_4bit_set_cursor^0,c
  8023   003A68  6A16               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  8024                           
  8025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8026                           ; Switch size 1, requested type "simple"
  8027                           ; Number of cases is 1, Range of values is 0 to 0
  8028                           ; switch strategies available:
  8029                           ; Name         Instructions Cycles
  8030                           ; simple_byte            4     3 (average)
  8031                           ;	Chosen strategy is simple_byte
  8032   003A6A  5016               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  8033   003A6C  0A00               	xorlw	0	; case 0
  8034   003A6E  B4D8               	btfsc	status,2,c
  8035   003A70  EF3C  F01D         	goto	l7427
  8036   003A74  EF4F  F01D         	goto	l5077
  8037   003A78                     l7427:
  8038                           
  8039                           ; Switch size 1, requested type "simple"
  8040                           ; Number of cases is 4, Range of values is 1 to 4
  8041                           ; switch strategies available:
  8042                           ; Name         Instructions Cycles
  8043                           ; simple_byte           13     7 (average)
  8044                           ;	Chosen strategy is simple_byte
  8045   003A78  5015               	movf	??_lcd_4bit_set_cursor^0,w,c
  8046   003A7A  0A01               	xorlw	1	; case 1
  8047   003A7C  B4D8               	btfsc	status,2,c
  8048   003A7E  EF0A  F01D         	goto	l5065
  8049   003A82  0A03               	xorlw	3	; case 2
  8050   003A84  B4D8               	btfsc	status,2,c
  8051   003A86  EF14  F01D         	goto	l5067
  8052   003A8A  0A01               	xorlw	1	; case 3
  8053   003A8C  B4D8               	btfsc	status,2,c
  8054   003A8E  EF1E  F01D         	goto	l5069
  8055   003A92  0A07               	xorlw	7	; case 4
  8056   003A94  B4D8               	btfsc	status,2,c
  8057   003A96  EF28  F01D         	goto	l5071
  8058   003A9A  EF4F  F01D         	goto	l5077
  8059   003A9E                     l5077:
  8060                           
  8061                           ;ECU/LCD/ecu_chr_lcd.c: 1052:  return Ret;
  8062   003A9E  5017               	movf	lcd_4bit_set_cursor@Ret^0,w,c
  8063   003AA0  0012               	return		;funcret
  8064   003AA2                     __end_of_lcd_4bit_set_cursor:
  8065                           	callstack 0
  8066                           
  8067 ;; *************** function _lcd_4bit_send_string_data *****************
  8068 ;; Defined at:
  8069 ;;		line 223 in file "ECU/LCD/ecu_chr_lcd.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  lcd             1   17[COMRAM] PTR const struct .
  8072 ;;		 -> lcd1(6), 
  8073 ;;  str_data        2   18[COMRAM] PTR unsigned char 
  8074 ;;		 -> STR_9(2), STR_8(2), STR_7(20), STR_6(8), 
  8075 ;;		 -> Password_text(6), 
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;  l_counter       1   23[COMRAM] unsigned char 
  8078 ;;  Ret             1   22[COMRAM] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      unsigned char 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8088 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8092 ;;Total ram usage:        7 bytes
  8093 ;; Hardware stack levels used: 1
  8094 ;; Hardware stack levels required when called: 3
  8095 ;; This function calls:
  8096 ;;		_lcd_4bit_send_char_data
  8097 ;; This function is called by:
  8098 ;;		_lcd_4bit_send_string_data_pos
  8099 ;;		_Welcom
  8100 ;;		_Set_Password
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           	psect	text34
  8105   00388A                     __ptext34:
  8106                           	callstack 0
  8107   00388A                     _lcd_4bit_send_string_data:
  8108                           	callstack 26
  8109   00388A                     
  8110                           ;ECU/LCD/ecu_chr_lcd.c: 223: Std_ReturnType lcd_4bit_send_string_data(const chr_lcd_4bit
      +                          _t* lcd, uint8* str_data);ECU/LCD/ecu_chr_lcd.c: 224: {;ECU/LCD/ecu_chr_lcd.c: 226:  Std
      +                          _ReturnType Ret = (Std_ReturnType)0X01;
  8111   00388A  0E01               	movlw	1
  8112   00388C  6E17               	movwf	lcd_4bit_send_string_data@Ret^0,c
  8113                           
  8114                           ;ECU/LCD/ecu_chr_lcd.c: 228:     if( (((void*)0) == lcd) || (((void*)0) == str_data) )
  8115   00388E  5012               	movf	lcd_4bit_send_string_data@lcd^0,w,c
  8116   003890  B4D8               	btfsc	status,2,c
  8117   003892  EF4D  F01C         	goto	u5191
  8118   003896  EF4F  F01C         	goto	u5190
  8119   00389A                     u5191:
  8120   00389A  EF58  F01C         	goto	l5089
  8121   00389E                     u5190:
  8122   00389E  5013               	movf	lcd_4bit_send_string_data@str_data^0,w,c
  8123   0038A0  1014               	iorwf	(lcd_4bit_send_string_data@str_data+1)^0,w,c
  8124   0038A2  A4D8               	btfss	status,2,c
  8125   0038A4  EF56  F01C         	goto	u5201
  8126   0038A8  EF58  F01C         	goto	u5200
  8127   0038AC                     u5201:
  8128   0038AC  EF5C  F01C         	goto	l5091
  8129   0038B0                     u5200:
  8130   0038B0                     l5089:
  8131                           
  8132                           ;ECU/LCD/ecu_chr_lcd.c: 229:     {;ECU/LCD/ecu_chr_lcd.c: 230:         Ret = (Std_Return
      +                          Type)0X00;
  8133   0038B0  0E00               	movlw	0
  8134   0038B2  6E17               	movwf	lcd_4bit_send_string_data@Ret^0,c
  8135                           
  8136                           ;ECU/LCD/ecu_chr_lcd.c: 231:     }
  8137   0038B4  EF9F  F01C         	goto	l5099
  8138   0038B8                     l5091:
  8139                           
  8140                           ;ECU/LCD/ecu_chr_lcd.c: 234:     {;ECU/LCD/ecu_chr_lcd.c: 235:   uint8 l_counter = 0;
  8141   0038B8  0E00               	movlw	0
  8142   0038BA  6E18               	movwf	lcd_4bit_send_string_data@l_counter^0,c
  8143                           
  8144                           ;ECU/LCD/ecu_chr_lcd.c: 236:   for(l_counter =0; str_data[l_counter] != '\0'; l_counter+
      +                          +)
  8145   0038BC  0E00               	movlw	0
  8146   0038BE  6E18               	movwf	lcd_4bit_send_string_data@l_counter^0,c
  8147   0038C0  EF80  F01C         	goto	l5097
  8148   0038C4                     l5093:
  8149                           
  8150                           ;ECU/LCD/ecu_chr_lcd.c: 237:   {;ECU/LCD/ecu_chr_lcd.c: 238:    Ret &= lcd_4bit_send_cha
      +                          r_data(lcd, str_data[l_counter]);
  8151   0038C4  C012  F00F         	movff	lcd_4bit_send_string_data@lcd,lcd_4bit_send_char_data@lcd
  8152   0038C8  5018               	movf	lcd_4bit_send_string_data@l_counter^0,w,c
  8153   0038CA  2413               	addwf	lcd_4bit_send_string_data@str_data^0,w,c
  8154   0038CC  6E15               	movwf	??_lcd_4bit_send_string_data^0,c
  8155   0038CE  0E00               	movlw	0
  8156   0038D0  2014               	addwfc	(lcd_4bit_send_string_data@str_data+1)^0,w,c
  8157   0038D2  6E16               	movwf	(??_lcd_4bit_send_string_data+1)^0,c
  8158   0038D4  C015  FFF6         	movff	??_lcd_4bit_send_string_data,tblptrl
  8159   0038D8  C016  FFF7         	movff	??_lcd_4bit_send_string_data+1,tblptrh
  8160   0038DC  0E00               	movlw	low (__smallconst shr (0+16))
  8161   0038DE  6EF8               	movwf	tblptru,c
  8162   0038E0  0E0F               	movlw	(high __ramtop+-1)
  8163   0038E2  64F7               	cpfsgt	tblptrh,c
  8164   0038E4  D003               	bra	u5217
  8165   0038E6  0008               	tblrd		*
  8166   0038E8  50F5               	movf	tablat,w,c
  8167   0038EA  D005               	bra	u5210
  8168   0038EC                     u5217:
  8169   0038EC  CFF6 FFE9          	movff	tblptrl,fsr0l
  8170   0038F0  CFF7 FFEA          	movff	tblptrh,fsr0h
  8171   0038F4  50EF               	movf	indf0,w,c
  8172   0038F6                     u5210:
  8173   0038F6  6E10               	movwf	lcd_4bit_send_char_data@data^0,c
  8174   0038F8  ECDC  F01F         	call	_lcd_4bit_send_char_data	;wreg free
  8175   0038FC  1617               	andwf	lcd_4bit_send_string_data@Ret^0,f,c
  8176   0038FE                     
  8177                           ;ECU/LCD/ecu_chr_lcd.c: 239:   }
  8178   0038FE  2A18               	incf	lcd_4bit_send_string_data@l_counter^0,f,c
  8179   003900                     l5097:
  8180   003900  5018               	movf	lcd_4bit_send_string_data@l_counter^0,w,c
  8181   003902  2413               	addwf	lcd_4bit_send_string_data@str_data^0,w,c
  8182   003904  6E15               	movwf	??_lcd_4bit_send_string_data^0,c
  8183   003906  0E00               	movlw	0
  8184   003908  2014               	addwfc	(lcd_4bit_send_string_data@str_data+1)^0,w,c
  8185   00390A  6E16               	movwf	(??_lcd_4bit_send_string_data+1)^0,c
  8186   00390C  C015  FFF6         	movff	??_lcd_4bit_send_string_data,tblptrl
  8187   003910  C016  FFF7         	movff	??_lcd_4bit_send_string_data+1,tblptrh
  8188   003914  0E00               	movlw	low (__smallconst shr (0+16))
  8189   003916  6EF8               	movwf	tblptru,c
  8190   003918  0E0F               	movlw	(high __ramtop+-1)
  8191   00391A  64F7               	cpfsgt	tblptrh,c
  8192   00391C  D003               	bra	u5227
  8193   00391E  0008               	tblrd		*
  8194   003920  50F5               	movf	tablat,w,c
  8195   003922  D005               	bra	u5220
  8196   003924                     u5227:
  8197   003924  CFF6 FFE9          	movff	tblptrl,fsr0l
  8198   003928  CFF7 FFEA          	movff	tblptrh,fsr0h
  8199   00392C  50EF               	movf	indf0,w,c
  8200   00392E                     u5220:
  8201   00392E  0900               	iorlw	0
  8202   003930  A4D8               	btfss	status,2,c
  8203   003932  EF9D  F01C         	goto	u5231
  8204   003936  EF9F  F01C         	goto	u5230
  8205   00393A                     u5231:
  8206   00393A  EF62  F01C         	goto	l5093
  8207   00393E                     u5230:
  8208   00393E                     l5099:
  8209                           
  8210                           ;ECU/LCD/ecu_chr_lcd.c: 243:  return Ret;
  8211   00393E  5017               	movf	lcd_4bit_send_string_data@Ret^0,w,c
  8212   003940  0012               	return		;funcret
  8213   003942                     __end_of_lcd_4bit_send_string_data:
  8214                           	callstack 0
  8215                           
  8216 ;; *************** function _lcd_4bit_send_char_data *****************
  8217 ;; Defined at:
  8218 ;;		line 140 in file "ECU/LCD/ecu_chr_lcd.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  lcd             1   14[COMRAM] PTR const struct .
  8221 ;;		 -> lcd1(6), 
  8222 ;;  data            1   15[COMRAM] unsigned char 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  Ret             1   16[COMRAM] unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      unsigned char 
  8227 ;; Registers used:
  8228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8237 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8238 ;;Total ram usage:        3 bytes
  8239 ;; Hardware stack levels used: 1
  8240 ;; Hardware stack levels required when called: 2
  8241 ;; This function calls:
  8242 ;;		_gpio_pin_write_logic
  8243 ;;		_lcd_4bit_send_enable_signal
  8244 ;;		_lcd_send_4bit
  8245 ;; This function is called by:
  8246 ;;		_lcd_4bit_send_string_data
  8247 ;;		_lcd_4bit_send_char_data_pos
  8248 ;;		_lcd_4bit_send_custome_char
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text35
  8253   003FB8                     __ptext35:
  8254                           	callstack 0
  8255   003FB8                     _lcd_4bit_send_char_data:
  8256                           	callstack 26
  8257   003FB8                     
  8258                           ;ECU/LCD/ecu_chr_lcd.c: 145:     if( ((void*)0) == lcd )
  8259   003FB8  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  8260   003FBA  A4D8               	btfss	status,2,c
  8261   003FBC  EFE2  F01F         	goto	u5041
  8262   003FC0  EFE4  F01F         	goto	u5040
  8263   003FC4                     u5041:
  8264   003FC4  EFE8  F01F         	goto	l4939
  8265   003FC8                     u5040:
  8266   003FC8                     
  8267                           ;ECU/LCD/ecu_chr_lcd.c: 146:     {;ECU/LCD/ecu_chr_lcd.c: 147:         Ret = (Std_Return
      +                          Type)0X00;
  8268   003FC8  0E00               	movlw	0
  8269   003FCA  6E11               	movwf	lcd_4bit_send_char_data@Ret^0,c
  8270                           
  8271                           ;ECU/LCD/ecu_chr_lcd.c: 148:     }
  8272   003FCC  EF09  F020         	goto	l4941
  8273   003FD0                     l4939:
  8274                           
  8275                           ;ECU/LCD/ecu_chr_lcd.c: 151:     {;ECU/LCD/ecu_chr_lcd.c: 156:   Ret = gpio_pin_write_lo
      +                          gic(&(lcd->lcd_rs), GPIO_HIGH);
  8276   003FD0  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  8277   003FD2  0F04               	addlw	4
  8278   003FD4  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  8279   003FD6  0E01               	movlw	1
  8280   003FD8  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  8281   003FDA  EC95  F017         	call	_gpio_pin_write_logic	;wreg free
  8282   003FDE  6E11               	movwf	lcd_4bit_send_char_data@Ret^0,c
  8283                           
  8284                           ;ECU/LCD/ecu_chr_lcd.c: 159:   Ret = lcd_send_4bit(lcd, data>>4);
  8285   003FE0  C00F  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  8286   003FE4  3810               	swapf	lcd_4bit_send_char_data@data^0,w,c
  8287   003FE6  0B0F               	andlw	15
  8288   003FE8  6E0A               	movwf	lcd_send_4bit@value^0,c
  8289   003FEA  ECAC  F01F         	call	_lcd_send_4bit	;wreg free
  8290   003FEE  6E11               	movwf	lcd_4bit_send_char_data@Ret^0,c
  8291                           
  8292                           ;ECU/LCD/ecu_chr_lcd.c: 162:   Ret = lcd_4bit_send_enable_signal(lcd);
  8293   003FF0  C00F  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  8294   003FF4  EC21  F021         	call	_lcd_4bit_send_enable_signal	;wreg free
  8295   003FF8  6E11               	movwf	lcd_4bit_send_char_data@Ret^0,c
  8296                           
  8297                           ;ECU/LCD/ecu_chr_lcd.c: 165:   Ret = lcd_send_4bit(lcd, data);
  8298   003FFA  C00F  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  8299   003FFE  C010  F00A         	movff	lcd_4bit_send_char_data@data,lcd_send_4bit@value
  8300   004002  ECAC  F01F         	call	_lcd_send_4bit	;wreg free
  8301   004006  6E11               	movwf	lcd_4bit_send_char_data@Ret^0,c
  8302                           
  8303                           ;ECU/LCD/ecu_chr_lcd.c: 168:   Ret = lcd_4bit_send_enable_signal(lcd);
  8304   004008  C00F  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  8305   00400C  EC21  F021         	call	_lcd_4bit_send_enable_signal	;wreg free
  8306   004010  6E11               	movwf	lcd_4bit_send_char_data@Ret^0,c
  8307   004012                     l4941:
  8308                           
  8309                           ;ECU/LCD/ecu_chr_lcd.c: 172:  return Ret;
  8310   004012  5011               	movf	lcd_4bit_send_char_data@Ret^0,w,c
  8311   004014  0012               	return		;funcret
  8312   004016                     __end_of_lcd_4bit_send_char_data:
  8313                           	callstack 0
  8314                           
  8315 ;; *************** function _keypad_get_value *****************
  8316 ;; Defined at:
  8317 ;;		line 68 in file "ECU/KEYPAD/ecu_keypad.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  obj             1    8[COMRAM] PTR const struct .
  8320 ;;		 -> key1(8), 
  8321 ;;  value           1    9[COMRAM] PTR unsigned char 
  8322 ;;		 -> Keypad_Value(4), 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  cols_counter    1   15[COMRAM] unsigned char 
  8325 ;;  rows_counter    1   14[COMRAM] unsigned char 
  8326 ;;  count           1   13[COMRAM] unsigned char 
  8327 ;;  column_logic    1   12[COMRAM] enum E3232
  8328 ;;  ret             1   11[COMRAM] unsigned char 
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  1    wreg      unsigned char 
  8331 ;; Registers used:
  8332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;Total ram usage:        8 bytes
  8343 ;; Hardware stack levels used: 1
  8344 ;; Hardware stack levels required when called: 1
  8345 ;; This function calls:
  8346 ;;		_gpio_pin_read_logic
  8347 ;;		_gpio_pin_write_logic
  8348 ;; This function is called by:
  8349 ;;		_Set_Password
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text36
  8354   003552                     __ptext36:
  8355                           	callstack 0
  8356   003552                     _keypad_get_value:
  8357                           	callstack 28
  8358   003552                     
  8359                           ;ECU/KEYPAD/ecu_keypad.c: 72:     if( ( ((void*)0) == obj) || (((void*)0) == value))
  8360   003552  5009               	movf	keypad_get_value@obj^0,w,c
  8361   003554  B4D8               	btfsc	status,2,c
  8362   003556  EFAF  F01A         	goto	u5281
  8363   00355A  EFB1  F01A         	goto	u5280
  8364   00355E                     u5281:
  8365   00355E  EFB9  F01A         	goto	l5149
  8366   003562                     u5280:
  8367   003562  500A               	movf	keypad_get_value@value^0,w,c
  8368   003564  A4D8               	btfss	status,2,c
  8369   003566  EFB7  F01A         	goto	u5291
  8370   00356A  EFB9  F01A         	goto	u5290
  8371   00356E                     u5291:
  8372   00356E  EFBD  F01A         	goto	l5151
  8373   003572                     u5290:
  8374   003572                     l5149:
  8375                           
  8376                           ;ECU/KEYPAD/ecu_keypad.c: 73:     {;ECU/KEYPAD/ecu_keypad.c: 74:         ret = (Std_Retu
      +                          rnType)0X00;
  8377   003572  0E00               	movlw	0
  8378   003574  6E0C               	movwf	keypad_get_value@ret^0,c
  8379                           
  8380                           ;ECU/KEYPAD/ecu_keypad.c: 75:     }
  8381   003576  EF1C  F01B         	goto	l5193
  8382   00357A                     l5151:
  8383                           
  8384                           ;ECU/KEYPAD/ecu_keypad.c: 77:     {;ECU/KEYPAD/ecu_keypad.c: 78:         uint8 rows_coun
      +                          ter = 0 , cols_counter =0;
  8385   00357A  0E00               	movlw	0
  8386   00357C  6E0F               	movwf	keypad_get_value@rows_counter^0,c
  8387                           
  8388                           ;ECU/KEYPAD/ecu_keypad.c: 79:         uint8 count = 0;
  8389   00357E  0E00               	movlw	0
  8390   003580  6E0E               	movwf	keypad_get_value@count^0,c
  8391                           
  8392                           ;ECU/KEYPAD/ecu_keypad.c: 80:         logic_t column_logic = GPIO_LOW;
  8393   003582  0E00               	movlw	0
  8394   003584  6E0D               	movwf	keypad_get_value@column_logic^0,c
  8395                           
  8396                           ;ECU/KEYPAD/ecu_keypad.c: 83:         for(rows_counter =0; rows_counter<4; rows_counter+
      +                          +)
  8397   003586  0E00               	movlw	0
  8398   003588  6E0F               	movwf	keypad_get_value@rows_counter^0,c
  8399   00358A                     l5157:
  8400                           
  8401                           ;ECU/KEYPAD/ecu_keypad.c: 84:         {;ECU/KEYPAD/ecu_keypad.c: 85:             for(cou
      +                          nt =0; count<4; count++)
  8402   00358A  0E00               	movlw	0
  8403   00358C  6E0E               	movwf	keypad_get_value@count^0,c
  8404   00358E                     l5163:
  8405   00358E  5009               	movf	keypad_get_value@obj^0,w,c
  8406   003590  240E               	addwf	keypad_get_value@count^0,w,c
  8407   003592  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  8408   003594  0E00               	movlw	0
  8409   003596  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  8410   003598  EC95  F017         	call	_gpio_pin_write_logic	;wreg free
  8411   00359C                     
  8412                           ;ECU/KEYPAD/ecu_keypad.c: 88:             }
  8413   00359C  2A0E               	incf	keypad_get_value@count^0,f,c
  8414   00359E  0E03               	movlw	3
  8415   0035A0  640E               	cpfsgt	keypad_get_value@count^0,c
  8416   0035A2  EFD5  F01A         	goto	u5301
  8417   0035A6  EFD7  F01A         	goto	u5300
  8418   0035AA                     u5301:
  8419   0035AA  EFC7  F01A         	goto	l5163
  8420   0035AE                     u5300:
  8421   0035AE  5009               	movf	keypad_get_value@obj^0,w,c
  8422   0035B0  240F               	addwf	keypad_get_value@rows_counter^0,w,c
  8423   0035B2  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  8424   0035B4  0E01               	movlw	1
  8425   0035B6  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  8426   0035B8  EC95  F017         	call	_gpio_pin_write_logic	;wreg free
  8427   0035BC                     
  8428                           ;ECU/KEYPAD/ecu_keypad.c: 92:             _delay((unsigned long)((10)*(8000000UL/4000.0)
      +                          ));
  8429   0035BC  0E1A               	movlw	26
  8430   0035BE  6E0B               	movwf	??_keypad_get_value^0,c
  8431   0035C0  0EF8               	movlw	248
  8432   0035C2                     u8037:
  8433   0035C2  2EE8               	decfsz	wreg,f,c
  8434   0035C4  D7FE               	bra	u8037
  8435   0035C6  2E0B               	decfsz	??_keypad_get_value^0,f,c
  8436   0035C8  D7FC               	bra	u8037
  8437   0035CA  F000 F000          	nop2	
  8438   0035CE                     
  8439                           ;ECU/KEYPAD/ecu_keypad.c: 94:             for(cols_counter =0; cols_counter<4; cols_coun
      +                          ter++)
  8440   0035CE  0E00               	movlw	0
  8441   0035D0  6E10               	movwf	keypad_get_value@cols_counter^0,c
  8442   0035D2                     l5179:
  8443                           
  8444                           ;ECU/KEYPAD/ecu_keypad.c: 95:             {;ECU/KEYPAD/ecu_keypad.c: 96:                
      +                           ret = gpio_pin_read_logic(&(obj->keypad_col_pins[cols_counter]), &column_logic);
  8445   0035D2  5009               	movf	keypad_get_value@obj^0,w,c
  8446   0035D4  2410               	addwf	keypad_get_value@cols_counter^0,w,c
  8447   0035D6  0F04               	addlw	4
  8448   0035D8  6E01               	movwf	gpio_pin_read_logic@pin_config^0,c
  8449   0035DA  0E0D               	movlw	low keypad_get_value@column_logic
  8450   0035DC  6E02               	movwf	gpio_pin_read_logic@logic^0,c
  8451   0035DE  ECE5  F01B         	call	_gpio_pin_read_logic	;wreg free
  8452   0035E2  6E0C               	movwf	keypad_get_value@ret^0,c
  8453   0035E4                     
  8454                           ;ECU/KEYPAD/ecu_keypad.c: 98:                 if(GPIO_HIGH == column_logic)
  8455   0035E4  040D               	decf	keypad_get_value@column_logic^0,w,c
  8456   0035E6  A4D8               	btfss	status,2,c
  8457   0035E8  EFF8  F01A         	goto	u5311
  8458   0035EC  EFFA  F01A         	goto	u5310
  8459   0035F0                     u5311:
  8460   0035F0  EF0A  F01B         	goto	l5185
  8461   0035F4                     u5310:
  8462   0035F4                     
  8463                           ;ECU/KEYPAD/ecu_keypad.c: 99:                 {;ECU/KEYPAD/ecu_keypad.c: 100:           
      +                                    *value = btn_values[rows_counter][cols_counter];
  8464   0035F4  500F               	movf	keypad_get_value@rows_counter^0,w,c
  8465   0035F6  0D04               	mullw	4
  8466   0035F8  50F3               	movf	243,w,c
  8467   0035FA  0F01               	addlw	low _btn_values
  8468   0035FC  2410               	addwf	keypad_get_value@cols_counter^0,w,c
  8469   0035FE  6E0B               	movwf	??_keypad_get_value^0,c
  8470   003600  C00B  FFF6         	movff	??_keypad_get_value,tblptrl
  8471   003604                     	if	1	;There is more than 1 active tblptr byte
  8472   003604  0E10               	movlw	high __smallconst
  8473   003606  6EF7               	movwf	tblptrh,c
  8474   003608                     	endif
  8475   003608                     	if	0	;tblptru may be non-zero
  8476   003608                     	endif
  8477   003608                     	if	0	;tblptru may be non-zero
  8478   003608                     	endif
  8479   003608  500A               	movf	keypad_get_value@value^0,w,c
  8480   00360A  6ED9               	movwf	fsr2l,c
  8481   00360C  6ADA               	clrf	fsr2h,c
  8482   00360E  0008               	tblrd		*
  8483   003610  CFF5 FFDF          	movff	tablat,indf2
  8484   003614                     l5185:
  8485                           
  8486                           ;ECU/KEYPAD/ecu_keypad.c: 102:             }
  8487   003614  2A10               	incf	keypad_get_value@cols_counter^0,f,c
  8488   003616  0E03               	movlw	3
  8489   003618  6410               	cpfsgt	keypad_get_value@cols_counter^0,c
  8490   00361A  EF11  F01B         	goto	u5321
  8491   00361E  EF13  F01B         	goto	u5320
  8492   003622                     u5321:
  8493   003622  EFE9  F01A         	goto	l5179
  8494   003626                     u5320:
  8495   003626                     
  8496                           ;ECU/KEYPAD/ecu_keypad.c: 104:         }
  8497   003626  2A0F               	incf	keypad_get_value@rows_counter^0,f,c
  8498   003628  0E03               	movlw	3
  8499   00362A  640F               	cpfsgt	keypad_get_value@rows_counter^0,c
  8500   00362C  EF1A  F01B         	goto	u5331
  8501   003630  EF1C  F01B         	goto	u5330
  8502   003634                     u5331:
  8503   003634  EFC5  F01A         	goto	l5157
  8504   003638                     u5330:
  8505   003638                     l5193:
  8506                           
  8507                           ;ECU/KEYPAD/ecu_keypad.c: 107:     return ret;
  8508   003638  500C               	movf	keypad_get_value@ret^0,w,c
  8509   00363A  0012               	return		;funcret
  8510   00363C                     __end_of_keypad_get_value:
  8511                           	callstack 0
  8512                           
  8513 ;; *************** function _gpio_pin_read_logic *****************
  8514 ;; Defined at:
  8515 ;;		line 162 in file "HAL/GPIO/hal_gpio.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  pin_config      1    0[COMRAM] PTR const struct .
  8518 ;;		 -> key1$keypad_col_pins(4), key1(8), 
  8519 ;;  logic           1    1[COMRAM] PTR enum E3232
  8520 ;;		 -> keypad_get_value@column_logic(1), 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  Ret             1    6[COMRAM] unsigned char 
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      unsigned char 
  8525 ;; Registers used:
  8526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8534 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8535 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;Total ram usage:        7 bytes
  8537 ;; Hardware stack levels used: 1
  8538 ;; This function calls:
  8539 ;;		Nothing
  8540 ;; This function is called by:
  8541 ;;		_keypad_get_value
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           	psect	text37
  8546   0037CA                     __ptext37:
  8547                           	callstack 0
  8548   0037CA                     _gpio_pin_read_logic:
  8549                           	callstack 28
  8550   0037CA                     
  8551                           ;HAL/GPIO/hal_gpio.c: 162: Std_ReturnType gpio_pin_read_logic(const pin_config_t* pin_co
      +                          nfig, logic_t* logic);HAL/GPIO/hal_gpio.c: 163: {;HAL/GPIO/hal_gpio.c: 164:     Std_Retu
      +                          rnType Ret = (Std_ReturnType)0X01;
  8552   0037CA  0E01               	movlw	1
  8553   0037CC  6E07               	movwf	gpio_pin_read_logic@Ret^0,c
  8554                           
  8555                           ;HAL/GPIO/hal_gpio.c: 166:     if((((void*)0) == pin_config) || (((void*)0) == logic) ||
      +                           (pin_config->Pin >= 8) || (pin_config->Port >= 5))
  8556   0037CE  5001               	movf	gpio_pin_read_logic@pin_config^0,w,c
  8557   0037D0  B4D8               	btfsc	status,2,c
  8558   0037D2  EFED  F01B         	goto	u5131
  8559   0037D6  EFEF  F01B         	goto	u5130
  8560   0037DA                     u5131:
  8561   0037DA  EF15  F01C         	goto	l5051
  8562   0037DE                     u5130:
  8563   0037DE  5002               	movf	gpio_pin_read_logic@logic^0,w,c
  8564   0037E0  B4D8               	btfsc	status,2,c
  8565   0037E2  EFF5  F01B         	goto	u5141
  8566   0037E6  EFF7  F01B         	goto	u5140
  8567   0037EA                     u5141:
  8568   0037EA  EF15  F01C         	goto	l5051
  8569   0037EE                     u5140:
  8570   0037EE  5001               	movf	gpio_pin_read_logic@pin_config^0,w,c
  8571   0037F0  6ED9               	movwf	fsr2l,c
  8572   0037F2  6ADA               	clrf	fsr2h,c
  8573   0037F4  50DF               	movf	223,w,c
  8574   0037F6  0B07               	andlw	7
  8575   0037F8  6E03               	movwf	??_gpio_pin_read_logic^0,c
  8576   0037FA  0E08               	movlw	8
  8577   0037FC  6003               	cpfslt	??_gpio_pin_read_logic^0,c
  8578   0037FE  EF03  F01C         	goto	u5151
  8579   003802  EF05  F01C         	goto	u5150
  8580   003806                     u5151:
  8581   003806  EF15  F01C         	goto	l5051
  8582   00380A                     u5150:
  8583   00380A  5001               	movf	gpio_pin_read_logic@pin_config^0,w,c
  8584   00380C  6ED9               	movwf	fsr2l,c
  8585   00380E  6ADA               	clrf	fsr2h,c
  8586   003810  30DF               	rrcf	223,w,c
  8587   003812  32E8               	rrcf	wreg,f,c
  8588   003814  32E8               	rrcf	wreg,f,c
  8589   003816  0B07               	andlw	7
  8590   003818  6E03               	movwf	??_gpio_pin_read_logic^0,c
  8591   00381A  0E04               	movlw	4
  8592   00381C  6403               	cpfsgt	??_gpio_pin_read_logic^0,c
  8593   00381E  EF13  F01C         	goto	u5161
  8594   003822  EF15  F01C         	goto	u5160
  8595   003826                     u5161:
  8596   003826  EF19  F01C         	goto	l5053
  8597   00382A                     u5160:
  8598   00382A                     l5051:
  8599                           
  8600                           ;HAL/GPIO/hal_gpio.c: 167:     {;HAL/GPIO/hal_gpio.c: 168:         Ret = (Std_ReturnType
      +                          )0X00;
  8601   00382A  0E00               	movlw	0
  8602   00382C  6E07               	movwf	gpio_pin_read_logic@Ret^0,c
  8603                           
  8604                           ;HAL/GPIO/hal_gpio.c: 169:     }
  8605   00382E  EF43  F01C         	goto	l5055
  8606   003832                     l5053:
  8607                           
  8608                           ;HAL/GPIO/hal_gpio.c: 172:     {;HAL/GPIO/hal_gpio.c: 173:         *logic = ((*port_regi
      +                          ster[pin_config->Port] >>pin_config->Pin) & (uint8) 1);
  8609   003832  5002               	movf	gpio_pin_read_logic@logic^0,w,c
  8610   003834  6ED9               	movwf	fsr2l,c
  8611   003836  6ADA               	clrf	fsr2h,c
  8612   003838  5001               	movf	gpio_pin_read_logic@pin_config^0,w,c
  8613   00383A  6EE1               	movwf	fsr1l,c
  8614   00383C  6AE2               	clrf	fsr1h,c
  8615   00383E  50E7               	movf	231,w,c
  8616   003840  0B07               	andlw	7
  8617   003842  6E03               	movwf	??_gpio_pin_read_logic^0,c
  8618   003844  5001               	movf	gpio_pin_read_logic@pin_config^0,w,c
  8619   003846  6EE1               	movwf	fsr1l,c
  8620   003848  6AE2               	clrf	fsr1h,c
  8621   00384A  30E7               	rrcf	231,w,c
  8622   00384C  32E8               	rrcf	wreg,f,c
  8623   00384E  32E8               	rrcf	wreg,f,c
  8624   003850  0B07               	andlw	7
  8625   003852  0D02               	mullw	2
  8626   003854  50F3               	movf	243,w,c
  8627   003856  0FAA               	addlw	low _port_register
  8628   003858  6EE1               	movwf	fsr1l,c
  8629   00385A  6AE2               	clrf	fsr1h,c
  8630   00385C  CFE6 F004          	movff	postinc1,??_gpio_pin_read_logic+1
  8631   003860  CFE5 F005          	movff	postdec1,??_gpio_pin_read_logic+2
  8632   003864  C004  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
  8633   003868  C005  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
  8634   00386C  50E7               	movf	indf1,w,c
  8635   00386E  6E06               	movwf	(??_gpio_pin_read_logic+3)^0,c
  8636   003870  2A03               	incf	??_gpio_pin_read_logic^0,f,c
  8637   003872  EF3D  F01C         	goto	u5174
  8638   003876                     u5175:
  8639   003876  90D8               	bcf	status,0,c
  8640   003878  3206               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
  8641   00387A                     u5174:
  8642   00387A  2E03               	decfsz	??_gpio_pin_read_logic^0,f,c
  8643   00387C  EF3B  F01C         	goto	u5175
  8644   003880  5006               	movf	(??_gpio_pin_read_logic+3)^0,w,c
  8645   003882  0B01               	andlw	1
  8646   003884  6EDF               	movwf	indf2,c
  8647   003886                     l5055:
  8648                           
  8649                           ;HAL/GPIO/hal_gpio.c: 178:     return Ret;
  8650   003886  5007               	movf	gpio_pin_read_logic@Ret^0,w,c
  8651   003888  0012               	return		;funcret
  8652   00388A                     __end_of_gpio_pin_read_logic:
  8653                           	callstack 0
  8654                           
  8655 ;; *************** function ___wmul *****************
  8656 ;; Defined at:
  8657 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  multiplier      2    0[COMRAM] unsigned int 
  8660 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  product         2    4[COMRAM] unsigned int 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  2    0[COMRAM] unsigned int 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0, prodl, prodh
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;Total ram usage:        6 bytes
  8677 ;; Hardware stack levels used: 1
  8678 ;; This function calls:
  8679 ;;		Nothing
  8680 ;; This function is called by:
  8681 ;;		_Set_Password
  8682 ;;		_read_prec_or_width
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text38
  8687   0044AC                     __ptext38:
  8688                           	callstack 0
  8689   0044AC                     ___wmul:
  8690                           	callstack 25
  8691   0044AC  5001               	movf	___wmul@multiplier^0,w,c
  8692   0044AE  0203               	mulwf	___wmul@multiplicand^0,c
  8693   0044B0  CFF3 F005          	movff	prodl,___wmul@product
  8694   0044B4  CFF4 F006          	movff	prodh,___wmul@product+1
  8695   0044B8  5001               	movf	___wmul@multiplier^0,w,c
  8696   0044BA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8697   0044BC  50F3               	movf	243,w,c
  8698   0044BE  2606               	addwf	(___wmul@product+1)^0,f,c
  8699   0044C0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8700   0044C2  0203               	mulwf	___wmul@multiplicand^0,c
  8701   0044C4  50F3               	movf	243,w,c
  8702   0044C6  2606               	addwf	(___wmul@product+1)^0,f,c
  8703   0044C8  C005  F001         	movff	___wmul@product,?___wmul
  8704   0044CC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8705   0044D0  0012               	return		;funcret
  8706   0044D2                     __end_of___wmul:
  8707                           	callstack 0
  8708                           
  8709 ;; *************** function _SYSTEM_Initialize *****************
  8710 ;; Defined at:
  8711 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;		None
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;		None
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  1    wreg      void 
  8718 ;; Registers used:
  8719 ;;		wreg, status,2, cstack
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8729 ;;Total ram usage:        0 bytes
  8730 ;; Hardware stack levels used: 1
  8731 ;; Hardware stack levels required when called: 1
  8732 ;; This function calls:
  8733 ;;		_OSCILLATOR_Initialize
  8734 ;;		_PIN_MANAGER_Initialize
  8735 ;; This function is called by:
  8736 ;;		_main
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text39
  8741   00450A                     __ptext39:
  8742                           	callstack 0
  8743   00450A                     _SYSTEM_Initialize:
  8744                           	callstack 29
  8745   00450A                     
  8746                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8747   00450A  EC3E  F022         	call	_PIN_MANAGER_Initialize	;wreg free
  8748                           
  8749                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8750   00450E  EC8A  F022         	call	_OSCILLATOR_Initialize	;wreg free
  8751   004512  0012               	return		;funcret
  8752   004514                     __end_of_SYSTEM_Initialize:
  8753                           	callstack 0
  8754                           
  8755 ;; *************** function _PIN_MANAGER_Initialize *****************
  8756 ;; Defined at:
  8757 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;		None
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1    wreg      void 
  8764 ;; Registers used:
  8765 ;;		wreg, status,2
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;Total ram usage:        0 bytes
  8776 ;; Hardware stack levels used: 1
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		_SYSTEM_Initialize
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text40
  8785   00447C                     __ptext40:
  8786                           	callstack 0
  8787   00447C                     _PIN_MANAGER_Initialize:
  8788                           	callstack 29
  8789   00447C                     
  8790                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8791   00447C  0E00               	movlw	0
  8792   00447E  6E8D               	movwf	141,c	;volatile
  8793                           
  8794                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8795   004480  0E00               	movlw	0
  8796   004482  6E8C               	movwf	140,c	;volatile
  8797                           
  8798                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8799   004484  0E00               	movlw	0
  8800   004486  6E89               	movwf	137,c	;volatile
  8801                           
  8802                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8803   004488  0E00               	movlw	0
  8804   00448A  6E8A               	movwf	138,c	;volatile
  8805                           
  8806                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8807   00448C  0E00               	movlw	0
  8808   00448E  6E8B               	movwf	139,c	;volatile
  8809                           
  8810                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8811   004490  0E07               	movlw	7
  8812   004492  6E96               	movwf	150,c	;volatile
  8813   004494                     
  8814                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  8815   004494  6892               	setf	146,c	;volatile
  8816   004496                     
  8817                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  8818   004496  6893               	setf	147,c	;volatile
  8819   004498                     
  8820                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8821   004498  6894               	setf	148,c	;volatile
  8822                           
  8823                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  8824   00449A  0EFE               	movlw	254
  8825   00449C  6E95               	movwf	149,c	;volatile
  8826   00449E                     
  8827                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  8828   00449E  687E               	setf	126,c	;volatile
  8829                           
  8830                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  8831   0044A0  0E1F               	movlw	31
  8832   0044A2  6E7F               	movwf	127,c	;volatile
  8833                           
  8834                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  8835   0044A4  0E00               	movlw	0
  8836   0044A6  6E7C               	movwf	124,c	;volatile
  8837   0044A8                     
  8838                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  8839   0044A8  8EF1               	bsf	241,7,c	;volatile
  8840   0044AA  0012               	return		;funcret
  8841   0044AC                     __end_of_PIN_MANAGER_Initialize:
  8842                           	callstack 0
  8843                           
  8844 ;; *************** function _OSCILLATOR_Initialize *****************
  8845 ;; Defined at:
  8846 ;;		line 57 in file "mcc_generated_files/mcc.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;Total ram usage:        0 bytes
  8865 ;; Hardware stack levels used: 1
  8866 ;; This function calls:
  8867 ;;		Nothing
  8868 ;; This function is called by:
  8869 ;;		_SYSTEM_Initialize
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text41
  8874   004514                     __ptext41:
  8875                           	callstack 0
  8876   004514                     _OSCILLATOR_Initialize:
  8877                           	callstack 29
  8878   004514                     
  8879                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x30;
  8880   004514  0E30               	movlw	48
  8881   004516  6ED3               	movwf	211,c	;volatile
  8882                           
  8883                           ;mcc_generated_files/mcc.c: 62:     OSCTUNE = 0x00;
  8884   004518  0E00               	movlw	0
  8885   00451A  6E9B               	movwf	155,c	;volatile
  8886   00451C  0012               	return		;funcret
  8887   00451E                     __end_of_OSCILLATOR_Initialize:
  8888                           	callstack 0
  8889                           
  8890 ;; *************** function _Read_Password_EEPROM *****************
  8891 ;; Defined at:
  8892 ;;		line 198 in file "main.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;		None
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  Return_Value    2    7[COMRAM] unsigned short 
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  2    2[COMRAM] unsigned short 
  8899 ;; Registers used:
  8900 ;;		wreg, status,2, status,0, cstack
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;Total ram usage:        7 bytes
  8911 ;; Hardware stack levels used: 1
  8912 ;; Hardware stack levels required when called: 1
  8913 ;; This function calls:
  8914 ;;		_DATAEE_ReadByte
  8915 ;; This function is called by:
  8916 ;;		_main
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text42
  8921   00433E                     __ptext42:
  8922                           	callstack 0
  8923   00433E                     _Read_Password_EEPROM:
  8924                           	callstack 29
  8925   00433E                     
  8926                           ;main.c: 202:     Return_Value = (uint8)DATAEE_ReadByte(0x0120);
  8927   00433E  0E01               	movlw	1
  8928   004340  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  8929   004342  0E20               	movlw	32
  8930   004344  6E01               	movwf	DATAEE_ReadByte@bAdd^0,c
  8931   004346  EC79  F022         	call	_DATAEE_ReadByte	;wreg free
  8932   00434A  6E05               	movwf	??_Read_Password_EEPROM^0,c
  8933   00434C  5005               	movf	??_Read_Password_EEPROM^0,w,c
  8934   00434E  6E08               	movwf	Read_Password_EEPROM@Return_Value^0,c
  8935   004350  6A09               	clrf	(Read_Password_EEPROM@Return_Value+1)^0,c
  8936   004352                     
  8937                           ;main.c: 204:     Return_Value |= (uint16)( DATAEE_ReadByte(0x0120) << 8 );
  8938   004352  0E01               	movlw	1
  8939   004354  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  8940   004356  0E20               	movlw	32
  8941   004358  6E01               	movwf	DATAEE_ReadByte@bAdd^0,c
  8942   00435A  EC79  F022         	call	_DATAEE_ReadByte	;wreg free
  8943   00435E  6E05               	movwf	??_Read_Password_EEPROM^0,c
  8944   004360  5005               	movf	??_Read_Password_EEPROM^0,w,c
  8945   004362  6E07               	movwf	(??_Read_Password_EEPROM+2)^0,c
  8946   004364  6A06               	clrf	(??_Read_Password_EEPROM+1)^0,c
  8947   004366  5006               	movf	(??_Read_Password_EEPROM+1)^0,w,c
  8948   004368  1208               	iorwf	Read_Password_EEPROM@Return_Value^0,f,c
  8949   00436A  5007               	movf	(??_Read_Password_EEPROM+2)^0,w,c
  8950   00436C  1209               	iorwf	(Read_Password_EEPROM@Return_Value+1)^0,f,c
  8951   00436E                     
  8952                           ;main.c: 206:     return Return_Value;
  8953   00436E  C008  F003         	movff	Read_Password_EEPROM@Return_Value,?_Read_Password_EEPROM
  8954   004372  C009  F004         	movff	Read_Password_EEPROM@Return_Value+1,?_Read_Password_EEPROM+1
  8955   004376  0012               	return		;funcret
  8956   004378                     __end_of_Read_Password_EEPROM:
  8957                           	callstack 0
  8958                           
  8959 ;; *************** function _DATAEE_ReadByte *****************
  8960 ;; Defined at:
  8961 ;;		line 196 in file "mcc_generated_files/memory.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  bAdd            2    0[COMRAM] unsigned short 
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;		None
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  1    wreg      unsigned char 
  8968 ;; Registers used:
  8969 ;;		wreg, status,2, status,0
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8979 ;;Total ram usage:        2 bytes
  8980 ;; Hardware stack levels used: 1
  8981 ;; This function calls:
  8982 ;;		Nothing
  8983 ;; This function is called by:
  8984 ;;		_main
  8985 ;;		_Read_Password_EEPROM
  8986 ;; This function uses a non-reentrant model
  8987 ;;
  8988                           
  8989                           	psect	text43
  8990   0044F2                     __ptext43:
  8991                           	callstack 0
  8992   0044F2                     _DATAEE_ReadByte:
  8993                           	callstack 29
  8994   0044F2                     
  8995                           ;mcc_generated_files/memory.c: 196: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 197: {;mcc_generated_files/memory.c: 198:     EEADRH = ((bAdd >> 8) & 0
      +                          x03);
  8996   0044F2  5002               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  8997   0044F4  0B03               	andlw	3
  8998   0044F6  6EAA               	movwf	170,c	;volatile
  8999   0044F8                     
  9000                           ;mcc_generated_files/memory.c: 199:     EEADR = (bAdd & 0xFF);
  9001   0044F8  C001  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  9002   0044FC                     
  9003                           ;mcc_generated_files/memory.c: 200:     EECON1bits.CFGS = 0;
  9004   0044FC  9CA6               	bcf	166,6,c	;volsfr
  9005   0044FE                     
  9006                           ;mcc_generated_files/memory.c: 201:     EECON1bits.EEPGD = 0;
  9007   0044FE  9EA6               	bcf	166,7,c	;volsfr
  9008   004500                     
  9009                           ;mcc_generated_files/memory.c: 202:     EECON1bits.RD = 1;
  9010   004500  80A6               	bsf	166,0,c	;volsfr
  9011   004502                     
  9012                           ;mcc_generated_files/memory.c: 203:     __nop();
  9013   004502  0000               	nop	
  9014   004504                     
  9015                           ;mcc_generated_files/memory.c: 204:     __nop();
  9016   004504  0000               	nop	
  9017   004506                     
  9018                           ;mcc_generated_files/memory.c: 206:     return (EEDATA);
  9019   004506  50A8               	movf	168,w,c	;volatile
  9020   004508  0012               	return		;funcret
  9021   00450A                     __end_of_DATAEE_ReadByte:
  9022                           	callstack 0
  9023                           
  9024 ;; *************** function _DATAEE_WriteByte *****************
  9025 ;; Defined at:
  9026 ;;		line 173 in file "mcc_generated_files/memory.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;  bAdd            2    0[COMRAM] unsigned short 
  9029 ;;  bData           1    2[COMRAM] unsigned char 
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;  GIEBitValue     1    3[COMRAM] unsigned char 
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  1    wreg      void 
  9034 ;; Registers used:
  9035 ;;		wreg, status,2, status,0
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9041 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;Total ram usage:        4 bytes
  9046 ;; Hardware stack levels used: 1
  9047 ;; This function calls:
  9048 ;;		Nothing
  9049 ;; This function is called by:
  9050 ;;		_main
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text44
  9055   0041FE                     __ptext44:
  9056                           	callstack 0
  9057   0041FE                     _DATAEE_WriteByte:
  9058                           	callstack 30
  9059   0041FE                     
  9060                           ;mcc_generated_files/memory.c: 173: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 174: {;mcc_generated_files/memory.c: 175:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  9061   0041FE  0E00               	movlw	0
  9062   004200  BEF2               	btfsc	242,7,c	;volatile
  9063   004202  0E01               	movlw	1
  9064   004204  6E04               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  9065   004206                     
  9066                           ;mcc_generated_files/memory.c: 177:     EEADRH = ((bAdd >> 8) & 0x03);
  9067   004206  5002               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  9068   004208  0B03               	andlw	3
  9069   00420A  6EAA               	movwf	170,c	;volatile
  9070   00420C                     
  9071                           ;mcc_generated_files/memory.c: 178:     EEADR = (bAdd & 0xFF);
  9072   00420C  C001  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
  9073   004210                     
  9074                           ;mcc_generated_files/memory.c: 179:     EEDATA = bData;
  9075   004210  C003  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
  9076   004214                     
  9077                           ;mcc_generated_files/memory.c: 180:     EECON1bits.EEPGD = 0;
  9078   004214  9EA6               	bcf	166,7,c	;volsfr
  9079   004216                     
  9080                           ;mcc_generated_files/memory.c: 181:     EECON1bits.CFGS = 0;
  9081   004216  9CA6               	bcf	166,6,c	;volsfr
  9082   004218                     
  9083                           ;mcc_generated_files/memory.c: 182:     EECON1bits.WREN = 1;
  9084   004218  84A6               	bsf	166,2,c	;volsfr
  9085   00421A                     
  9086                           ;mcc_generated_files/memory.c: 183:     INTCONbits.GIE = 0;
  9087   00421A  9EF2               	bcf	242,7,c	;volatile
  9088   00421C                     
  9089                           ;mcc_generated_files/memory.c: 184:     EECON2 = 0x55;
  9090   00421C  0E55               	movlw	85
  9091   00421E  6EA7               	movwf	167,c	;volsfr
  9092   004220                     
  9093                           ;mcc_generated_files/memory.c: 185:     EECON2 = 0xAA;
  9094   004220  0EAA               	movlw	170
  9095   004222  6EA7               	movwf	167,c	;volsfr
  9096   004224                     
  9097                           ;mcc_generated_files/memory.c: 186:     EECON1bits.WR = 1;
  9098   004224  82A6               	bsf	166,1,c	;volsfr
  9099   004226                     l458:
  9100                           
  9101                           ;mcc_generated_files/memory.c: 188:     while (EECON1bits.WR)
  9102   004226  B2A6               	btfsc	166,1,c	;volsfr
  9103   004228  EF18  F021         	goto	u5611
  9104   00422C  EF1A  F021         	goto	u5610
  9105   004230                     u5611:
  9106   004230  EF13  F021         	goto	l458
  9107   004234                     u5610:
  9108   004234                     
  9109                           ;mcc_generated_files/memory.c: 192:     EECON1bits.WREN = 0;
  9110   004234  94A6               	bcf	166,2,c	;volsfr
  9111                           
  9112                           ;mcc_generated_files/memory.c: 193:     INTCONbits.GIE = GIEBitValue;
  9113   004236  B004               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  9114   004238  D002               	bra	u5625
  9115   00423A  9EF2               	bcf	242,7,c	;volatile
  9116   00423C  D001               	bra	u5626
  9117   00423E                     u5625:
  9118   00423E  8EF2               	bsf	242,7,c	;volatile
  9119   004240                     u5626:
  9120   004240  0012               	return		;funcret
  9121   004242                     __end_of_DATAEE_WriteByte:
  9122                           	callstack 0
  9123                           
  9124 ;; *************** function _APP_Init *****************
  9125 ;; Defined at:
  9126 ;;		line 140 in file "main.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used: 1
  9146 ;; Hardware stack levels required when called: 4
  9147 ;; This function calls:
  9148 ;;		_keypad_initialize
  9149 ;;		_lcd_4bit_initialze
  9150 ;;		_led_initialize
  9151 ;; This function is called by:
  9152 ;;		_main
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text45
  9157   0044D2                     __ptext45:
  9158                           	callstack 0
  9159   0044D2                     _APP_Init:
  9160                           	callstack 26
  9161   0044D2                     
  9162                           ;main.c: 142:     ret = lcd_4bit_initialze(&lcd1);
  9163   0044D2  0EC6               	movlw	low _lcd1
  9164   0044D4  6E12               	movwf	lcd_4bit_initialze@lcd^0,c
  9165   0044D6  EC32  F01A         	call	_lcd_4bit_initialze	;wreg free
  9166   0044DA  6E57               	movwf	_ret^0,c
  9167                           
  9168                           ;main.c: 143:     ret = keypad_initialize(&key1);
  9169   0044DC  0EBE               	movlw	low _key1
  9170   0044DE  6E0C               	movwf	keypad_initialize@obj^0,c
  9171   0044E0  EC7A  F01F         	call	_keypad_initialize	;wreg free
  9172   0044E4  6E57               	movwf	_ret^0,c
  9173                           
  9174                           ;main.c: 144:     ret = led_initialize(&led_1);
  9175   0044E6  0E58               	movlw	low _led_1
  9176   0044E8  6E0C               	movwf	led_initialize@led^0,c
  9177   0044EA  EC12  F01F         	call	_led_initialize	;wreg free
  9178   0044EE  6E57               	movwf	_ret^0,c
  9179   0044F0  0012               	return		;funcret
  9180   0044F2                     __end_of_APP_Init:
  9181                           	callstack 0
  9182                           
  9183 ;; *************** function _led_initialize *****************
  9184 ;; Defined at:
  9185 ;;		line 20 in file "ECU/LED/ecu_led.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  led             1   11[COMRAM] PTR const struct .
  9188 ;;		 -> led_1(1), 
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;  pin_obj         1   14[COMRAM] struct .
  9191 ;;  ret             1   13[COMRAM] unsigned char 
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  1    wreg      unsigned char 
  9194 ;; Registers used:
  9195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9196 ;; Tracked objects:
  9197 ;;		On entry : 0/0
  9198 ;;		On exit  : 0/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9201 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;Total ram usage:        4 bytes
  9206 ;; Hardware stack levels used: 1
  9207 ;; Hardware stack levels required when called: 2
  9208 ;; This function calls:
  9209 ;;		_gpio_pin_initialize
  9210 ;; This function is called by:
  9211 ;;		_APP_Init
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           	psect	text46
  9216   003E24                     __ptext46:
  9217                           	callstack 0
  9218   003E24                     _led_initialize:
  9219                           	callstack 27
  9220   003E24                     
  9221                           ;ECU/LED/ecu_led.c: 24:     if(((void*)0) == led)
  9222   003E24  500C               	movf	led_initialize@led^0,w,c
  9223   003E26  A4D8               	btfss	status,2,c
  9224   003E28  EF18  F01F         	goto	u5441
  9225   003E2C  EF1A  F01F         	goto	u5440
  9226   003E30                     u5441:
  9227   003E30  EF1E  F01F         	goto	l5361
  9228   003E34                     u5440:
  9229   003E34                     
  9230                           ;ECU/LED/ecu_led.c: 25:     {;ECU/LED/ecu_led.c: 26:         ret = (Std_ReturnType)0X00;
  9231   003E34  0E00               	movlw	0
  9232   003E36  6E0E               	movwf	led_initialize@ret^0,c
  9233                           
  9234                           ;ECU/LED/ecu_led.c: 27:     }
  9235   003E38  EF45  F01F         	goto	l5369
  9236   003E3C                     l5361:
  9237                           
  9238                           ;ECU/LED/ecu_led.c: 29:     {;ECU/LED/ecu_led.c: 30:         pin_config_t pin_obj;;ECU/L
      +                          ED/ecu_led.c: 31:         pin_obj.Port = led->port_name;
  9239   003E3C  500C               	movf	led_initialize@led^0,w,c
  9240   003E3E  6ED9               	movwf	fsr2l,c
  9241   003E40  6ADA               	clrf	fsr2h,c
  9242   003E42  50DF               	movf	223,w,c
  9243   003E44  0B0F               	andlw	15
  9244   003E46  6E0D               	movwf	??_led_initialize^0,c
  9245   003E48  460D               	rlncf	??_led_initialize^0,f,c
  9246   003E4A  460D               	rlncf	??_led_initialize^0,f,c
  9247   003E4C  460D               	rlncf	??_led_initialize^0,f,c
  9248   003E4E  500F               	movf	led_initialize@pin_obj^0,w,c
  9249   003E50  180D               	xorwf	??_led_initialize^0,w,c
  9250   003E52  0BC7               	andlw	-57
  9251   003E54  180D               	xorwf	??_led_initialize^0,w,c
  9252   003E56  6E0F               	movwf	led_initialize@pin_obj^0,c
  9253                           
  9254                           ;ECU/LED/ecu_led.c: 32:         pin_obj.Pin = led->pin_name;
  9255   003E58  500C               	movf	led_initialize@led^0,w,c
  9256   003E5A  6ED9               	movwf	fsr2l,c
  9257   003E5C  6ADA               	clrf	fsr2h,c
  9258   003E5E  38DF               	swapf	223,w,c
  9259   003E60  0B07               	andlw	7
  9260   003E62  6E0D               	movwf	??_led_initialize^0,c
  9261   003E64  500F               	movf	led_initialize@pin_obj^0,w,c
  9262   003E66  180D               	xorwf	??_led_initialize^0,w,c
  9263   003E68  0BF8               	andlw	-8
  9264   003E6A  180D               	xorwf	??_led_initialize^0,w,c
  9265   003E6C  6E0F               	movwf	led_initialize@pin_obj^0,c
  9266   003E6E                     
  9267                           ;ECU/LED/ecu_led.c: 33:         pin_obj.Logic = led->led_state;
  9268   003E6E  500C               	movf	led_initialize@led^0,w,c
  9269   003E70  6ED9               	movwf	fsr2l,c
  9270   003E72  6ADA               	clrf	fsr2h,c
  9271   003E74  AEDF               	btfss	indf2,7,c
  9272   003E76  D002               	bra	u5455
  9273   003E78  8C0F               	bsf	led_initialize@pin_obj^0,6,c
  9274   003E7A  D001               	bra	u5457
  9275   003E7C                     u5455:
  9276   003E7C  9C0F               	bcf	led_initialize@pin_obj^0,6,c
  9277   003E7E                     u5457:
  9278   003E7E                     
  9279                           ;ECU/LED/ecu_led.c: 34:         pin_obj.Direction = GPIO_OUTPUT;
  9280   003E7E  9E0F               	bcf	led_initialize@pin_obj^0,7,c
  9281   003E80                     
  9282                           ;ECU/LED/ecu_led.c: 36:         ret = gpio_pin_initialize(&pin_obj);
  9283   003E80  0E0F               	movlw	low led_initialize@pin_obj
  9284   003E82  6E09               	movwf	gpio_pin_initialize@pin_config^0,c
  9285   003E84  EC9E  F01E         	call	_gpio_pin_initialize	;wreg free
  9286   003E88  6E0E               	movwf	led_initialize@ret^0,c
  9287   003E8A                     l5369:
  9288                           
  9289                           ;ECU/LED/ecu_led.c: 39:     return ret;
  9290   003E8A  500E               	movf	led_initialize@ret^0,w,c
  9291   003E8C  0012               	return		;funcret
  9292   003E8E                     __end_of_led_initialize:
  9293                           	callstack 0
  9294                           
  9295 ;; *************** function _lcd_4bit_initialze *****************
  9296 ;; Defined at:
  9297 ;;		line 32 in file "ECU/LCD/ecu_chr_lcd.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  lcd             1   17[COMRAM] PTR const struct .
  9300 ;;		 -> lcd1(6), 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  Ret             1   20[COMRAM] unsigned char 
  9303 ;;  l_counter       1   19[COMRAM] unsigned char 
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      unsigned char 
  9306 ;; Registers used:
  9307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9313 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;Total ram usage:        4 bytes
  9318 ;; Hardware stack levels used: 1
  9319 ;; Hardware stack levels required when called: 3
  9320 ;; This function calls:
  9321 ;;		_gpio_pin_initialize
  9322 ;;		_lcd_4bit_send_command
  9323 ;; This function is called by:
  9324 ;;		_APP_Init
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           	psect	text47
  9329   003464                     __ptext47:
  9330                           	callstack 0
  9331   003464                     _lcd_4bit_initialze:
  9332                           	callstack 26
  9333   003464                     
  9334                           ;ECU/LCD/ecu_chr_lcd.c: 35:     uint8 l_counter = 0;
  9335   003464  0E00               	movlw	0
  9336   003466  6E14               	movwf	lcd_4bit_initialze@l_counter^0,c
  9337                           
  9338                           ;ECU/LCD/ecu_chr_lcd.c: 37:     if( ((void*)0) == lcd )
  9339   003468  5012               	movf	lcd_4bit_initialze@lcd^0,w,c
  9340   00346A  A4D8               	btfss	status,2,c
  9341   00346C  EF3A  F01A         	goto	u5341
  9342   003470  EF3C  F01A         	goto	u5340
  9343   003474                     u5341:
  9344   003474  EF40  F01A         	goto	l5201
  9345   003478                     u5340:
  9346   003478                     
  9347                           ;ECU/LCD/ecu_chr_lcd.c: 38:     {;ECU/LCD/ecu_chr_lcd.c: 39:         Ret = (Std_ReturnTy
      +                          pe)0X00;
  9348   003478  0E00               	movlw	0
  9349   00347A  6E15               	movwf	lcd_4bit_initialze@Ret^0,c
  9350                           
  9351                           ;ECU/LCD/ecu_chr_lcd.c: 40:     }
  9352   00347C  EFA7  F01A         	goto	l5237
  9353   003480                     l5201:
  9354                           
  9355                           ;ECU/LCD/ecu_chr_lcd.c: 43:     {;ECU/LCD/ecu_chr_lcd.c: 45:         Ret = gpio_pin_init
      +                          ialize(&(lcd->lcd_rs));
  9356   003480  5012               	movf	lcd_4bit_initialze@lcd^0,w,c
  9357   003482  0F04               	addlw	4
  9358   003484  6E09               	movwf	gpio_pin_initialize@pin_config^0,c
  9359   003486  EC9E  F01E         	call	_gpio_pin_initialize	;wreg free
  9360   00348A  6E15               	movwf	lcd_4bit_initialze@Ret^0,c
  9361                           
  9362                           ;ECU/LCD/ecu_chr_lcd.c: 46:         Ret = gpio_pin_initialize(&(lcd->lcd_en));
  9363   00348C  5012               	movf	lcd_4bit_initialze@lcd^0,w,c
  9364   00348E  0F05               	addlw	5
  9365   003490  6E09               	movwf	gpio_pin_initialize@pin_config^0,c
  9366   003492  EC9E  F01E         	call	_gpio_pin_initialize	;wreg free
  9367   003496  6E15               	movwf	lcd_4bit_initialze@Ret^0,c
  9368   003498                     
  9369                           ;ECU/LCD/ecu_chr_lcd.c: 48:         for(l_counter = 0; l_counter< 4; l_counter++)
  9370   003498  0E00               	movlw	0
  9371   00349A  6E14               	movwf	lcd_4bit_initialze@l_counter^0,c
  9372   00349C                     l5209:
  9373   00349C  5012               	movf	lcd_4bit_initialze@lcd^0,w,c
  9374   00349E  2414               	addwf	lcd_4bit_initialze@l_counter^0,w,c
  9375   0034A0  6E09               	movwf	gpio_pin_initialize@pin_config^0,c
  9376   0034A2  EC9E  F01E         	call	_gpio_pin_initialize	;wreg free
  9377   0034A6                     
  9378                           ;ECU/LCD/ecu_chr_lcd.c: 51:         }
  9379   0034A6  2A14               	incf	lcd_4bit_initialze@l_counter^0,f,c
  9380   0034A8  0E03               	movlw	3
  9381   0034AA  6414               	cpfsgt	lcd_4bit_initialze@l_counter^0,c
  9382   0034AC  EF5A  F01A         	goto	u5351
  9383   0034B0  EF5C  F01A         	goto	u5350
  9384   0034B4                     u5351:
  9385   0034B4  EF4E  F01A         	goto	l5209
  9386   0034B8                     u5350:
  9387   0034B8                     
  9388                           ;ECU/LCD/ecu_chr_lcd.c: 53:   _delay((unsigned long)((15)*(8000000UL/4000.0)));
  9389   0034B8  0E27               	movlw	39
  9390   0034BA  6E13               	movwf	??_lcd_4bit_initialze^0,c
  9391   0034BC  0EF5               	movlw	245
  9392   0034BE                     u8047:
  9393   0034BE  2EE8               	decfsz	wreg,f,c
  9394   0034C0  D7FE               	bra	u8047
  9395   0034C2  2E13               	decfsz	??_lcd_4bit_initialze^0,f,c
  9396   0034C4  D7FC               	bra	u8047
  9397   0034C6  0000               	nop	
  9398   0034C8  C012  F00F         	movff	lcd_4bit_initialze@lcd,lcd_4bit_send_command@lcd
  9399   0034CC  0E38               	movlw	56
  9400   0034CE  6E10               	movwf	lcd_4bit_send_command@command^0,c
  9401   0034D0  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  9402   0034D4                     
  9403                           ;ECU/LCD/ecu_chr_lcd.c: 57:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  9404   0034D4  0E0D               	movlw	13
  9405   0034D6  6E13               	movwf	??_lcd_4bit_initialze^0,c
  9406   0034D8  0EFC               	movlw	252
  9407   0034DA                     u8057:
  9408   0034DA  2EE8               	decfsz	wreg,f,c
  9409   0034DC  D7FE               	bra	u8057
  9410   0034DE  2E13               	decfsz	??_lcd_4bit_initialze^0,f,c
  9411   0034E0  D7FC               	bra	u8057
  9412   0034E2  C012  F00F         	movff	lcd_4bit_initialze@lcd,lcd_4bit_send_command@lcd
  9413   0034E6  0E38               	movlw	56
  9414   0034E8  6E10               	movwf	lcd_4bit_send_command@command^0,c
  9415   0034EA  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  9416   0034EE                     
  9417                           ;ECU/LCD/ecu_chr_lcd.c: 61:         _delay((unsigned long)((100)*(8000000UL/4000000.0)))
      +                          ;
  9418   0034EE  0E42               	movlw	66
  9419   0034F0                     u8067:
  9420   0034F0  2EE8               	decfsz	wreg,f,c
  9421   0034F2  D7FE               	bra	u8067
  9422   0034F4  F000 F000          	nop2	
  9423   0034F8  C012  F00F         	movff	lcd_4bit_initialze@lcd,lcd_4bit_send_command@lcd
  9424   0034FC  0E38               	movlw	56
  9425   0034FE  6E10               	movwf	lcd_4bit_send_command@command^0,c
  9426   003500  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  9427   003504  C012  F00F         	movff	lcd_4bit_initialze@lcd,lcd_4bit_send_command@lcd
  9428   003508  0E01               	movlw	1
  9429   00350A  6E10               	movwf	lcd_4bit_send_command@command^0,c
  9430   00350C  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  9431   003510  C012  F00F         	movff	lcd_4bit_initialze@lcd,lcd_4bit_send_command@lcd
  9432   003514  0E02               	movlw	2
  9433   003516  6E10               	movwf	lcd_4bit_send_command@command^0,c
  9434   003518  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  9435   00351C  C012  F00F         	movff	lcd_4bit_initialze@lcd,lcd_4bit_send_command@lcd
  9436   003520  0E06               	movlw	6
  9437   003522  6E10               	movwf	lcd_4bit_send_command@command^0,c
  9438   003524  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  9439   003528  C012  F00F         	movff	lcd_4bit_initialze@lcd,lcd_4bit_send_command@lcd
  9440   00352C  0E0C               	movlw	12
  9441   00352E  6E10               	movwf	lcd_4bit_send_command@command^0,c
  9442   003530  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  9443   003534  C012  F00F         	movff	lcd_4bit_initialze@lcd,lcd_4bit_send_command@lcd
  9444   003538  0E28               	movlw	40
  9445   00353A  6E10               	movwf	lcd_4bit_send_command@command^0,c
  9446   00353C  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  9447   003540                     
  9448                           ;ECU/LCD/ecu_chr_lcd.c: 75:         Ret = lcd_4bit_send_command(lcd, 0X80);
  9449   003540  C012  F00F         	movff	lcd_4bit_initialze@lcd,lcd_4bit_send_command@lcd
  9450   003544  0E80               	movlw	128
  9451   003546  6E10               	movwf	lcd_4bit_send_command@command^0,c
  9452   003548  EC0B  F020         	call	_lcd_4bit_send_command	;wreg free
  9453   00354C  6E15               	movwf	lcd_4bit_initialze@Ret^0,c
  9454   00354E                     l5237:
  9455                           
  9456                           ;ECU/LCD/ecu_chr_lcd.c: 78:  return Ret;
  9457   00354E  5015               	movf	lcd_4bit_initialze@Ret^0,w,c
  9458   003550  0012               	return		;funcret
  9459   003552                     __end_of_lcd_4bit_initialze:
  9460                           	callstack 0
  9461                           
  9462 ;; *************** function _lcd_4bit_send_command *****************
  9463 ;; Defined at:
  9464 ;;		line 91 in file "ECU/LCD/ecu_chr_lcd.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;  lcd             1   14[COMRAM] PTR const struct .
  9467 ;;		 -> lcd1(6), 
  9468 ;;  command         1   15[COMRAM] unsigned char 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;  Ret             1   16[COMRAM] unsigned char 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      unsigned char 
  9473 ;; Registers used:
  9474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;Total ram usage:        3 bytes
  9485 ;; Hardware stack levels used: 1
  9486 ;; Hardware stack levels required when called: 2
  9487 ;; This function calls:
  9488 ;;		_gpio_pin_write_logic
  9489 ;;		_lcd_4bit_send_enable_signal
  9490 ;;		_lcd_send_4bit
  9491 ;; This function is called by:
  9492 ;;		_lcd_4bit_initialze
  9493 ;;		_lcd_4bit_set_cursor
  9494 ;;		_main
  9495 ;;		_Welcom
  9496 ;;		_Set_Password
  9497 ;;		_lcd_4bit_send_custome_char
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           	psect	text48
  9502   004016                     __ptext48:
  9503                           	callstack 0
  9504   004016                     _lcd_4bit_send_command:
  9505                           	callstack 26
  9506   004016                     
  9507                           ;ECU/LCD/ecu_chr_lcd.c: 96:     if( ((void*)0) == lcd )
  9508   004016  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
  9509   004018  A4D8               	btfss	status,2,c
  9510   00401A  EF11  F020         	goto	u5031
  9511   00401E  EF13  F020         	goto	u5030
  9512   004022                     u5031:
  9513   004022  EF17  F020         	goto	l4929
  9514   004026                     u5030:
  9515   004026                     
  9516                           ;ECU/LCD/ecu_chr_lcd.c: 97:     {;ECU/LCD/ecu_chr_lcd.c: 98:         Ret = (Std_ReturnTy
      +                          pe)0X00;
  9517   004026  0E00               	movlw	0
  9518   004028  6E11               	movwf	lcd_4bit_send_command@Ret^0,c
  9519                           
  9520                           ;ECU/LCD/ecu_chr_lcd.c: 99:     }
  9521   00402A  EF38  F020         	goto	l4931
  9522   00402E                     l4929:
  9523                           
  9524                           ;ECU/LCD/ecu_chr_lcd.c: 102:     {;ECU/LCD/ecu_chr_lcd.c: 108:   Ret = gpio_pin_write_lo
      +                          gic(&(lcd->lcd_rs), GPIO_LOW);
  9525   00402E  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
  9526   004030  0F04               	addlw	4
  9527   004032  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  9528   004034  0E00               	movlw	0
  9529   004036  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  9530   004038  EC95  F017         	call	_gpio_pin_write_logic	;wreg free
  9531   00403C  6E11               	movwf	lcd_4bit_send_command@Ret^0,c
  9532                           
  9533                           ;ECU/LCD/ecu_chr_lcd.c: 111:   Ret = lcd_send_4bit(lcd, command>>4);
  9534   00403E  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
  9535   004042  3810               	swapf	lcd_4bit_send_command@command^0,w,c
  9536   004044  0B0F               	andlw	15
  9537   004046  6E0A               	movwf	lcd_send_4bit@value^0,c
  9538   004048  ECAC  F01F         	call	_lcd_send_4bit	;wreg free
  9539   00404C  6E11               	movwf	lcd_4bit_send_command@Ret^0,c
  9540                           
  9541                           ;ECU/LCD/ecu_chr_lcd.c: 114:   Ret = lcd_4bit_send_enable_signal(lcd);
  9542   00404E  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  9543   004052  EC21  F021         	call	_lcd_4bit_send_enable_signal	;wreg free
  9544   004056  6E11               	movwf	lcd_4bit_send_command@Ret^0,c
  9545                           
  9546                           ;ECU/LCD/ecu_chr_lcd.c: 117:   Ret = lcd_send_4bit(lcd, command);
  9547   004058  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
  9548   00405C  C010  F00A         	movff	lcd_4bit_send_command@command,lcd_send_4bit@value
  9549   004060  ECAC  F01F         	call	_lcd_send_4bit	;wreg free
  9550   004064  6E11               	movwf	lcd_4bit_send_command@Ret^0,c
  9551                           
  9552                           ;ECU/LCD/ecu_chr_lcd.c: 120:   Ret = lcd_4bit_send_enable_signal(lcd);
  9553   004066  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  9554   00406A  EC21  F021         	call	_lcd_4bit_send_enable_signal	;wreg free
  9555   00406E  6E11               	movwf	lcd_4bit_send_command@Ret^0,c
  9556   004070                     l4931:
  9557                           
  9558                           ;ECU/LCD/ecu_chr_lcd.c: 124:  return Ret;
  9559   004070  5011               	movf	lcd_4bit_send_command@Ret^0,w,c
  9560   004072  0012               	return		;funcret
  9561   004074                     __end_of_lcd_4bit_send_command:
  9562                           	callstack 0
  9563                           
  9564 ;; *************** function _lcd_send_4bit *****************
  9565 ;; Defined at:
  9566 ;;		line 844 in file "ECU/LCD/ecu_chr_lcd.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;  lcd             1    8[COMRAM] PTR const struct .
  9569 ;;		 -> lcd1(6), 
  9570 ;;  value           1    9[COMRAM] unsigned char 
  9571 ;; Auto vars:     Size  Location     Type
  9572 ;;  l_counter       1   13[COMRAM] unsigned char 
  9573 ;;  Ret             1   12[COMRAM] unsigned char 
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  1    wreg      unsigned char 
  9576 ;; Registers used:
  9577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9586 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9587 ;;Total ram usage:        6 bytes
  9588 ;; Hardware stack levels used: 1
  9589 ;; Hardware stack levels required when called: 1
  9590 ;; This function calls:
  9591 ;;		_gpio_pin_write_logic
  9592 ;; This function is called by:
  9593 ;;		_lcd_4bit_send_command
  9594 ;;		_lcd_4bit_send_char_data
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           	psect	text49
  9599   003F58                     __ptext49:
  9600                           	callstack 0
  9601   003F58                     _lcd_send_4bit:
  9602                           	callstack 26
  9603   003F58                     
  9604                           ;ECU/LCD/ecu_chr_lcd.c: 844: static Std_ReturnType lcd_send_4bit(const chr_lcd_4bit_t* l
      +                          cd, uint8 value);ECU/LCD/ecu_chr_lcd.c: 845: {;ECU/LCD/ecu_chr_lcd.c: 847:  Std_ReturnTy
      +                          pe Ret = (Std_ReturnType)0X01;
  9605   003F58  0E01               	movlw	1
  9606   003F5A  6E0D               	movwf	lcd_send_4bit@Ret^0,c
  9607                           
  9608                           ;ECU/LCD/ecu_chr_lcd.c: 850:     if( ((void*)0) == lcd )
  9609   003F5C  5009               	movf	lcd_send_4bit@lcd^0,w,c
  9610   003F5E  A4D8               	btfss	status,2,c
  9611   003F60  EFB4  F01F         	goto	u4491
  9612   003F64  EFB6  F01F         	goto	u4490
  9613   003F68                     u4491:
  9614   003F68  EFBA  F01F         	goto	l4591
  9615   003F6C                     u4490:
  9616   003F6C                     
  9617                           ;ECU/LCD/ecu_chr_lcd.c: 851:     {;ECU/LCD/ecu_chr_lcd.c: 852:         Ret = (Std_Return
      +                          Type)0X00;
  9618   003F6C  0E00               	movlw	0
  9619   003F6E  6E0D               	movwf	lcd_send_4bit@Ret^0,c
  9620                           
  9621                           ;ECU/LCD/ecu_chr_lcd.c: 853:     }
  9622   003F70  EFDA  F01F         	goto	l4603
  9623   003F74                     l4591:
  9624                           
  9625                           ;ECU/LCD/ecu_chr_lcd.c: 856:     {;ECU/LCD/ecu_chr_lcd.c: 857:         for(l_counter = 0
      +                          ; l_counter< 4; l_counter++)
  9626   003F74  0E00               	movlw	0
  9627   003F76  6E0E               	movwf	lcd_send_4bit@l_counter^0,c
  9628   003F78                     l4597:
  9629                           
  9630                           ;ECU/LCD/ecu_chr_lcd.c: 858:         {;ECU/LCD/ecu_chr_lcd.c: 859:             Ret &= gp
      +                          io_pin_write_logic( &(lcd->lcd_data[l_counter]), (uint8)(value >> l_counter) & 0x01);
  9631   003F78  5009               	movf	lcd_send_4bit@lcd^0,w,c
  9632   003F7A  240E               	addwf	lcd_send_4bit@l_counter^0,w,c
  9633   003F7C  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  9634   003F7E  C00E  F00B         	movff	lcd_send_4bit@l_counter,??_lcd_send_4bit
  9635   003F82  C00A  F00C         	movff	lcd_send_4bit@value,??_lcd_send_4bit+1
  9636   003F86  2A0B               	incf	??_lcd_send_4bit^0,f,c
  9637   003F88  EFC8  F01F         	goto	u4504
  9638   003F8C                     u4505:
  9639   003F8C  90D8               	bcf	status,0,c
  9640   003F8E  320C               	rrcf	(??_lcd_send_4bit+1)^0,f,c
  9641   003F90                     u4504:
  9642   003F90  2E0B               	decfsz	??_lcd_send_4bit^0,f,c
  9643   003F92  EFC6  F01F         	goto	u4505
  9644   003F96  500C               	movf	(??_lcd_send_4bit+1)^0,w,c
  9645   003F98  0B01               	andlw	1
  9646   003F9A  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  9647   003F9C  EC95  F017         	call	_gpio_pin_write_logic	;wreg free
  9648   003FA0  160D               	andwf	lcd_send_4bit@Ret^0,f,c
  9649   003FA2                     
  9650                           ;ECU/LCD/ecu_chr_lcd.c: 860:         }
  9651   003FA2  2A0E               	incf	lcd_send_4bit@l_counter^0,f,c
  9652   003FA4  0E03               	movlw	3
  9653   003FA6  640E               	cpfsgt	lcd_send_4bit@l_counter^0,c
  9654   003FA8  EFD8  F01F         	goto	u4511
  9655   003FAC  EFDA  F01F         	goto	u4510
  9656   003FB0                     u4511:
  9657   003FB0  EFBC  F01F         	goto	l4597
  9658   003FB4                     u4510:
  9659   003FB4                     l4603:
  9660                           
  9661                           ;ECU/LCD/ecu_chr_lcd.c: 865:  return Ret;
  9662   003FB4  500D               	movf	lcd_send_4bit@Ret^0,w,c
  9663   003FB6  0012               	return		;funcret
  9664   003FB8                     __end_of_lcd_send_4bit:
  9665                           	callstack 0
  9666                           
  9667 ;; *************** function _lcd_4bit_send_enable_signal *****************
  9668 ;; Defined at:
  9669 ;;		line 878 in file "ECU/LCD/ecu_chr_lcd.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  lcd             1    8[COMRAM] PTR const struct .
  9672 ;;		 -> lcd1(6), 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  Ret             1    9[COMRAM] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      unsigned char 
  9677 ;; Registers used:
  9678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9684 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;Total ram usage:        2 bytes
  9689 ;; Hardware stack levels used: 1
  9690 ;; Hardware stack levels required when called: 1
  9691 ;; This function calls:
  9692 ;;		_gpio_pin_write_logic
  9693 ;; This function is called by:
  9694 ;;		_lcd_4bit_send_command
  9695 ;;		_lcd_4bit_send_char_data
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text50
  9700   004242                     __ptext50:
  9701                           	callstack 0
  9702   004242                     _lcd_4bit_send_enable_signal:
  9703                           	callstack 26
  9704   004242                     
  9705                           ;ECU/LCD/ecu_chr_lcd.c: 884:     if( ((void*)0) == lcd )
  9706   004242  5009               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  9707   004244  A4D8               	btfss	status,2,c
  9708   004246  EF27  F021         	goto	u4521
  9709   00424A  EF29  F021         	goto	u4520
  9710   00424E                     u4521:
  9711   00424E  EF2D  F021         	goto	l4611
  9712   004252                     u4520:
  9713   004252                     
  9714                           ;ECU/LCD/ecu_chr_lcd.c: 885:     {;ECU/LCD/ecu_chr_lcd.c: 886:         Ret = (Std_Return
      +                          Type)0X00;
  9715   004252  0E00               	movlw	0
  9716   004254  6E0A               	movwf	lcd_4bit_send_enable_signal@Ret^0,c
  9717                           
  9718                           ;ECU/LCD/ecu_chr_lcd.c: 887:     }
  9719   004256  EF40  F021         	goto	l4617
  9720   00425A                     l4611:
  9721   00425A  5009               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  9722   00425C  0F05               	addlw	5
  9723   00425E  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  9724   004260  0E01               	movlw	1
  9725   004262  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  9726   004264  EC95  F017         	call	_gpio_pin_write_logic	;wreg free
  9727   004268                     
  9728                           ;ECU/LCD/ecu_chr_lcd.c: 893:         _delay((unsigned long)((5)*(8000000UL/4000000.0)));
  9729   004268  0E03               	movlw	3
  9730   00426A                     u8077:
  9731   00426A  2EE8               	decfsz	wreg,f,c
  9732   00426C  D7FE               	bra	u8077
  9733   00426E  0000               	nop	
  9734   004270                     
  9735                           ;ECU/LCD/ecu_chr_lcd.c: 895:         Ret = gpio_pin_write_logic( &(lcd->lcd_en), GPIO_LO
      +                          W);
  9736   004270  5009               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  9737   004272  0F05               	addlw	5
  9738   004274  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  9739   004276  0E00               	movlw	0
  9740   004278  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  9741   00427A  EC95  F017         	call	_gpio_pin_write_logic	;wreg free
  9742   00427E  6E0A               	movwf	lcd_4bit_send_enable_signal@Ret^0,c
  9743   004280                     l4617:
  9744                           
  9745                           ;ECU/LCD/ecu_chr_lcd.c: 900:  return Ret;
  9746   004280  500A               	movf	lcd_4bit_send_enable_signal@Ret^0,w,c
  9747   004282  0012               	return		;funcret
  9748   004284                     __end_of_lcd_4bit_send_enable_signal:
  9749                           	callstack 0
  9750                           
  9751 ;; *************** function _keypad_initialize *****************
  9752 ;; Defined at:
  9753 ;;		line 30 in file "ECU/KEYPAD/ecu_keypad.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  obj             1   11[COMRAM] PTR const struct .
  9756 ;;		 -> key1(8), 
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;  num_col         1   14[COMRAM] unsigned char 
  9759 ;;  num_row         1   13[COMRAM] unsigned char 
  9760 ;;  ret             1   12[COMRAM] unsigned char 
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  1    wreg      unsigned char 
  9763 ;; Registers used:
  9764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9770 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9773 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9774 ;;Total ram usage:        4 bytes
  9775 ;; Hardware stack levels used: 1
  9776 ;; Hardware stack levels required when called: 2
  9777 ;; This function calls:
  9778 ;;		_gpio_pin_direction_initialize
  9779 ;;		_gpio_pin_initialize
  9780 ;; This function is called by:
  9781 ;;		_APP_Init
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text51
  9786   003EF4                     __ptext51:
  9787                           	callstack 0
  9788   003EF4                     _keypad_initialize:
  9789                           	callstack 27
  9790   003EF4                     
  9791                           ;ECU/KEYPAD/ecu_keypad.c: 34:     if(((void*)0) == obj)
  9792   003EF4  500C               	movf	keypad_initialize@obj^0,w,c
  9793   003EF6  A4D8               	btfss	status,2,c
  9794   003EF8  EF80  F01F         	goto	u5251
  9795   003EFC  EF82  F01F         	goto	u5250
  9796   003F00                     u5251:
  9797   003F00  EF86  F01F         	goto	l5117
  9798   003F04                     u5250:
  9799   003F04                     
  9800                           ;ECU/KEYPAD/ecu_keypad.c: 35:     {;ECU/KEYPAD/ecu_keypad.c: 36:         ret = (Std_Retu
      +                          rnType)0X00;
  9801   003F04  0E00               	movlw	0
  9802   003F06  6E0D               	movwf	keypad_initialize@ret^0,c
  9803                           
  9804                           ;ECU/KEYPAD/ecu_keypad.c: 37:     }
  9805   003F08  EFAA  F01F         	goto	l5141
  9806   003F0C                     l5117:
  9807                           
  9808                           ;ECU/KEYPAD/ecu_keypad.c: 39:     {;ECU/KEYPAD/ecu_keypad.c: 40:         uint8 num_row =
      +                           0, num_col = 0;
  9809   003F0C  0E00               	movlw	0
  9810   003F0E  6E0E               	movwf	keypad_initialize@num_row^0,c
  9811                           
  9812                           ;ECU/KEYPAD/ecu_keypad.c: 42:         for(num_row = 0; num_row<4; num_row++)
  9813   003F10  0E00               	movlw	0
  9814   003F12  6E0E               	movwf	keypad_initialize@num_row^0,c
  9815   003F14                     l5123:
  9816   003F14  500C               	movf	keypad_initialize@obj^0,w,c
  9817   003F16  240E               	addwf	keypad_initialize@num_row^0,w,c
  9818   003F18  6E09               	movwf	gpio_pin_initialize@pin_config^0,c
  9819   003F1A  EC9E  F01E         	call	_gpio_pin_initialize	;wreg free
  9820   003F1E                     
  9821                           ;ECU/KEYPAD/ecu_keypad.c: 45:         }
  9822   003F1E  2A0E               	incf	keypad_initialize@num_row^0,f,c
  9823   003F20  0E03               	movlw	3
  9824   003F22  640E               	cpfsgt	keypad_initialize@num_row^0,c
  9825   003F24  EF96  F01F         	goto	u5261
  9826   003F28  EF98  F01F         	goto	u5260
  9827   003F2C                     u5261:
  9828   003F2C  EF8A  F01F         	goto	l5123
  9829   003F30                     u5260:
  9830   003F30                     
  9831                           ;ECU/KEYPAD/ecu_keypad.c: 47:         for(num_col = 0; num_col<4; num_col++)
  9832   003F30  0E00               	movlw	0
  9833   003F32  6E0F               	movwf	keypad_initialize@num_col^0,c
  9834   003F34                     l5135:
  9835                           
  9836                           ;ECU/KEYPAD/ecu_keypad.c: 48:         {;ECU/KEYPAD/ecu_keypad.c: 49:             ret = g
      +                          pio_pin_direction_initialize(&(obj->keypad_col_pins[num_col]));
  9837   003F34  500C               	movf	keypad_initialize@obj^0,w,c
  9838   003F36  240F               	addwf	keypad_initialize@num_col^0,w,c
  9839   003F38  0F04               	addlw	4
  9840   003F3A  6E01               	movwf	gpio_pin_direction_initialize@pin_config^0,c
  9841   003F3C  EC61  F016         	call	_gpio_pin_direction_initialize	;wreg free
  9842   003F40  6E0D               	movwf	keypad_initialize@ret^0,c
  9843   003F42                     
  9844                           ;ECU/KEYPAD/ecu_keypad.c: 50:         }
  9845   003F42  2A0F               	incf	keypad_initialize@num_col^0,f,c
  9846   003F44  0E03               	movlw	3
  9847   003F46  640F               	cpfsgt	keypad_initialize@num_col^0,c
  9848   003F48  EFA8  F01F         	goto	u5271
  9849   003F4C  EFAA  F01F         	goto	u5270
  9850   003F50                     u5271:
  9851   003F50  EF9A  F01F         	goto	l5135
  9852   003F54                     u5270:
  9853   003F54                     l5141:
  9854                           
  9855                           ;ECU/KEYPAD/ecu_keypad.c: 55:     return ret;
  9856   003F54  500D               	movf	keypad_initialize@ret^0,w,c
  9857   003F56  0012               	return		;funcret
  9858   003F58                     __end_of_keypad_initialize:
  9859                           	callstack 0
  9860                           
  9861 ;; *************** function _gpio_pin_initialize *****************
  9862 ;; Defined at:
  9863 ;;		line 219 in file "HAL/GPIO/hal_gpio.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  pin_config      1    8[COMRAM] PTR const struct .
  9866 ;;		 -> led_initialize@pin_obj(1), key1$keypad_row_pins(4), key1(8), lcd1$lcd_data(4), 
  9867 ;;		 -> lcd1(6), 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;  Ret             1   10[COMRAM] unsigned char 
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  1    wreg      unsigned char 
  9872 ;; Registers used:
  9873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9879 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9883 ;;Total ram usage:        3 bytes
  9884 ;; Hardware stack levels used: 1
  9885 ;; Hardware stack levels required when called: 1
  9886 ;; This function calls:
  9887 ;;		_gpio_pin_direction_initialize
  9888 ;;		_gpio_pin_write_logic
  9889 ;; This function is called by:
  9890 ;;		_keypad_initialize
  9891 ;;		_lcd_4bit_initialze
  9892 ;;		_led_initialize
  9893 ;;		_lcd_8bit_initialze
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text52
  9898   003D3C                     __ptext52:
  9899                           	callstack 0
  9900   003D3C                     _gpio_pin_initialize:
  9901                           	callstack 27
  9902   003D3C                     
  9903                           ;HAL/GPIO/hal_gpio.c: 223:     if(((void*)0) == pin_config || (pin_config->Pin >= 8) || 
      +                          (pin_config->Port >= 5))
  9904   003D3C  5009               	movf	gpio_pin_initialize@pin_config^0,w,c
  9905   003D3E  B4D8               	btfsc	status,2,c
  9906   003D40  EFA4  F01E         	goto	u5101
  9907   003D44  EFA6  F01E         	goto	u5100
  9908   003D48                     u5101:
  9909   003D48  EFC4  F01E         	goto	l5035
  9910   003D4C                     u5100:
  9911   003D4C  5009               	movf	gpio_pin_initialize@pin_config^0,w,c
  9912   003D4E  6ED9               	movwf	fsr2l,c
  9913   003D50  6ADA               	clrf	fsr2h,c
  9914   003D52  50DF               	movf	223,w,c
  9915   003D54  0B07               	andlw	7
  9916   003D56  6E0A               	movwf	??_gpio_pin_initialize^0,c
  9917   003D58  0E08               	movlw	8
  9918   003D5A  600A               	cpfslt	??_gpio_pin_initialize^0,c
  9919   003D5C  EFB2  F01E         	goto	u5111
  9920   003D60  EFB4  F01E         	goto	u5110
  9921   003D64                     u5111:
  9922   003D64  EFC4  F01E         	goto	l5035
  9923   003D68                     u5110:
  9924   003D68  5009               	movf	gpio_pin_initialize@pin_config^0,w,c
  9925   003D6A  6ED9               	movwf	fsr2l,c
  9926   003D6C  6ADA               	clrf	fsr2h,c
  9927   003D6E  30DF               	rrcf	223,w,c
  9928   003D70  32E8               	rrcf	wreg,f,c
  9929   003D72  32E8               	rrcf	wreg,f,c
  9930   003D74  0B07               	andlw	7
  9931   003D76  6E0A               	movwf	??_gpio_pin_initialize^0,c
  9932   003D78  0E04               	movlw	4
  9933   003D7A  640A               	cpfsgt	??_gpio_pin_initialize^0,c
  9934   003D7C  EFC2  F01E         	goto	u5121
  9935   003D80  EFC4  F01E         	goto	u5120
  9936   003D84                     u5121:
  9937   003D84  EFC8  F01E         	goto	l5037
  9938   003D88                     u5120:
  9939   003D88                     l5035:
  9940                           
  9941                           ;HAL/GPIO/hal_gpio.c: 224:     {;HAL/GPIO/hal_gpio.c: 225:         Ret = (Std_ReturnType
      +                          )0X00;
  9942   003D88  0E00               	movlw	0
  9943   003D8A  6E0B               	movwf	gpio_pin_initialize@Ret^0,c
  9944                           
  9945                           ;HAL/GPIO/hal_gpio.c: 226:     }
  9946   003D8C  EFD9  F01E         	goto	l5039
  9947   003D90                     l5037:
  9948                           
  9949                           ;HAL/GPIO/hal_gpio.c: 228:     {;HAL/GPIO/hal_gpio.c: 230:         Ret = gpio_pin_direct
      +                          ion_initialize(pin_config);
  9950   003D90  C009  F001         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  9951   003D94  EC61  F016         	call	_gpio_pin_direction_initialize	;wreg free
  9952   003D98  6E0B               	movwf	gpio_pin_initialize@Ret^0,c
  9953                           
  9954                           ;HAL/GPIO/hal_gpio.c: 231:         Ret = gpio_pin_write_logic(pin_config, pin_config->Lo
      +                          gic);
  9955   003D9A  C009  F001         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  9956   003D9E  5009               	movf	gpio_pin_initialize@pin_config^0,w,c
  9957   003DA0  6ED9               	movwf	fsr2l,c
  9958   003DA2  6ADA               	clrf	fsr2h,c
  9959   003DA4  0E00               	movlw	0
  9960   003DA6  BCDF               	btfsc	indf2,6,c
  9961   003DA8  0E01               	movlw	1
  9962   003DAA  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  9963   003DAC  EC95  F017         	call	_gpio_pin_write_logic	;wreg free
  9964   003DB0  6E0B               	movwf	gpio_pin_initialize@Ret^0,c
  9965   003DB2                     l5039:
  9966                           
  9967                           ;HAL/GPIO/hal_gpio.c: 235:     return Ret;
  9968   003DB2  500B               	movf	gpio_pin_initialize@Ret^0,w,c
  9969   003DB4  0012               	return		;funcret
  9970   003DB6                     __end_of_gpio_pin_initialize:
  9971                           	callstack 0
  9972                           
  9973 ;; *************** function _gpio_pin_write_logic *****************
  9974 ;; Defined at:
  9975 ;;		line 118 in file "HAL/GPIO/hal_gpio.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  pin_config      1    0[COMRAM] PTR const struct .
  9978 ;;		 -> led_off@pin_obj(1), led_on@pin_obj(1), led_initialize@pin_obj(1), key1$keypad_row_pins(4), 
  9979 ;;		 -> key1(8), lcd1$lcd_data(4), lcd1(6), 
  9980 ;;  logic           1    1[COMRAM] enum E3232
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;  Ret             1    7[COMRAM] unsigned char 
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      unsigned char 
  9985 ;; Registers used:
  9986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9994 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;Total ram usage:        8 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; This function calls:
  9999 ;;		Nothing
 10000 ;; This function is called by:
 10001 ;;		_keypad_get_value
 10002 ;;		_lcd_4bit_send_command
 10003 ;;		_lcd_4bit_send_char_data
 10004 ;;		_lcd_send_4bit
 10005 ;;		_lcd_4bit_send_enable_signal
 10006 ;;		_gpio_pin_initialize
 10007 ;;		_led_on
 10008 ;;		_lcd_8bit_send_command
 10009 ;;		_lcd_8bit_send_char_data
 10010 ;;		_lcd_send_8bit
 10011 ;;		_lcd_8bit_send_enable_signal
 10012 ;;		_led_off
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           	psect	text53
 10017   002F2A                     __ptext53:
 10018                           	callstack 0
 10019   002F2A                     _gpio_pin_write_logic:
 10020                           	callstack 29
 10021   002F2A                     
 10022                           ;HAL/GPIO/hal_gpio.c: 118: Std_ReturnType gpio_pin_write_logic(const pin_config_t* pin_c
      +                          onfig, logic_t logic);HAL/GPIO/hal_gpio.c: 119: {;HAL/GPIO/hal_gpio.c: 120:     Std_Retu
      +                          rnType Ret = (Std_ReturnType)0X01;
 10023   002F2A  0E01               	movlw	1
 10024   002F2C  6E08               	movwf	gpio_pin_write_logic@Ret^0,c
 10025                           
 10026                           ;HAL/GPIO/hal_gpio.c: 122:     if(((void*)0) == pin_config || (pin_config->Pin >= 8) || 
      +                          (pin_config->Port >= 5))
 10027   002F2E  5001               	movf	gpio_pin_write_logic@pin_config^0,w,c
 10028   002F30  B4D8               	btfsc	status,2,c
 10029   002F32  EF9D  F017         	goto	u3491
 10030   002F36  EF9F  F017         	goto	u3490
 10031   002F3A                     u3491:
 10032   002F3A  EFBD  F017         	goto	l4033
 10033   002F3E                     u3490:
 10034   002F3E  5001               	movf	gpio_pin_write_logic@pin_config^0,w,c
 10035   002F40  6ED9               	movwf	fsr2l,c
 10036   002F42  6ADA               	clrf	fsr2h,c
 10037   002F44  50DF               	movf	223,w,c
 10038   002F46  0B07               	andlw	7
 10039   002F48  6E03               	movwf	??_gpio_pin_write_logic^0,c
 10040   002F4A  0E08               	movlw	8
 10041   002F4C  6003               	cpfslt	??_gpio_pin_write_logic^0,c
 10042   002F4E  EFAB  F017         	goto	u3501
 10043   002F52  EFAD  F017         	goto	u3500
 10044   002F56                     u3501:
 10045   002F56  EFBD  F017         	goto	l4033
 10046   002F5A                     u3500:
 10047   002F5A  5001               	movf	gpio_pin_write_logic@pin_config^0,w,c
 10048   002F5C  6ED9               	movwf	fsr2l,c
 10049   002F5E  6ADA               	clrf	fsr2h,c
 10050   002F60  30DF               	rrcf	223,w,c
 10051   002F62  32E8               	rrcf	wreg,f,c
 10052   002F64  32E8               	rrcf	wreg,f,c
 10053   002F66  0B07               	andlw	7
 10054   002F68  6E03               	movwf	??_gpio_pin_write_logic^0,c
 10055   002F6A  0E04               	movlw	4
 10056   002F6C  6403               	cpfsgt	??_gpio_pin_write_logic^0,c
 10057   002F6E  EFBB  F017         	goto	u3511
 10058   002F72  EFBD  F017         	goto	u3510
 10059   002F76                     u3511:
 10060   002F76  EFC1  F017         	goto	l4035
 10061   002F7A                     u3510:
 10062   002F7A                     l4033:
 10063                           
 10064                           ;HAL/GPIO/hal_gpio.c: 123:     {;HAL/GPIO/hal_gpio.c: 124:         Ret = (Std_ReturnType
      +                          )0X00;
 10065   002F7A  0E00               	movlw	0
 10066   002F7C  6E08               	movwf	gpio_pin_write_logic@Ret^0,c
 10067                           
 10068                           ;HAL/GPIO/hal_gpio.c: 125:     }
 10069   002F7E  EF22  F018         	goto	l292
 10070   002F82                     l4035:
 10071                           
 10072                           ;HAL/GPIO/hal_gpio.c: 128:     {;HAL/GPIO/hal_gpio.c: 129:         if(logic == GPIO_HIGH
      +                          )
 10073   002F82  0402               	decf	gpio_pin_write_logic@logic^0,w,c
 10074   002F84  A4D8               	btfss	status,2,c
 10075   002F86  EFC7  F017         	goto	u3521
 10076   002F8A  EFC9  F017         	goto	u3520
 10077   002F8E                     u3521:
 10078   002F8E  EFF1  F017         	goto	l4039
 10079   002F92                     u3520:
 10080   002F92                     
 10081                           ;HAL/GPIO/hal_gpio.c: 130:         {;HAL/GPIO/hal_gpio.c: 132:             (*lat_registe
      +                          r[pin_config->Port] |= ( (uint8) 1 << pin_config->Pin));
 10082   002F92  5001               	movf	gpio_pin_write_logic@pin_config^0,w,c
 10083   002F94  6ED9               	movwf	fsr2l,c
 10084   002F96  6ADA               	clrf	fsr2h,c
 10085   002F98  50DF               	movf	223,w,c
 10086   002F9A  0B07               	andlw	7
 10087   002F9C  6E03               	movwf	??_gpio_pin_write_logic^0,c
 10088   002F9E  0E01               	movlw	1
 10089   002FA0  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
 10090   002FA2  2A03               	incf	??_gpio_pin_write_logic^0,f,c
 10091   002FA4  EFD6  F017         	goto	u3534
 10092   002FA8                     u3535:
 10093   002FA8  90D8               	bcf	status,0,c
 10094   002FAA  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 10095   002FAC                     u3534:
 10096   002FAC  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
 10097   002FAE  EFD4  F017         	goto	u3535
 10098   002FB2  5001               	movf	gpio_pin_write_logic@pin_config^0,w,c
 10099   002FB4  6ED9               	movwf	fsr2l,c
 10100   002FB6  6ADA               	clrf	fsr2h,c
 10101   002FB8  30DF               	rrcf	223,w,c
 10102   002FBA  32E8               	rrcf	wreg,f,c
 10103   002FBC  32E8               	rrcf	wreg,f,c
 10104   002FBE  0B07               	andlw	7
 10105   002FC0  0D02               	mullw	2
 10106   002FC2  50F3               	movf	243,w,c
 10107   002FC4  0FA0               	addlw	low _lat_register
 10108   002FC6  6ED9               	movwf	fsr2l,c
 10109   002FC8  6ADA               	clrf	fsr2h,c
 10110   002FCA  CFDE F005          	movff	postinc2,??_gpio_pin_write_logic+2
 10111   002FCE  CFDD F006          	movff	postdec2,??_gpio_pin_write_logic+3
 10112   002FD2  C005  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
 10113   002FD6  C006  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
 10114   002FDA  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 10115   002FDC  12DF               	iorwf	indf2,f,c
 10116                           
 10117                           ;HAL/GPIO/hal_gpio.c: 134:         }
 10118   002FDE  EF22  F018         	goto	l292
 10119   002FE2                     l4039:
 10120   002FE2  5002               	movf	gpio_pin_write_logic@logic^0,w,c
 10121   002FE4  A4D8               	btfss	status,2,c
 10122   002FE6  EFF7  F017         	goto	u3541
 10123   002FEA  EFF9  F017         	goto	u3540
 10124   002FEE                     u3541:
 10125   002FEE  EFBD  F017         	goto	l4033
 10126   002FF2                     u3540:
 10127   002FF2                     
 10128                           ;HAL/GPIO/hal_gpio.c: 137:         {;HAL/GPIO/hal_gpio.c: 139:             (*lat_registe
      +                          r[pin_config->Port] &= ~( (uint8) 1 << pin_config->Pin));
 10129   002FF2  5001               	movf	gpio_pin_write_logic@pin_config^0,w,c
 10130   002FF4  6ED9               	movwf	fsr2l,c
 10131   002FF6  6ADA               	clrf	fsr2h,c
 10132   002FF8  50DF               	movf	223,w,c
 10133   002FFA  0B07               	andlw	7
 10134   002FFC  6E03               	movwf	??_gpio_pin_write_logic^0,c
 10135   002FFE  0E01               	movlw	1
 10136   003000  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
 10137   003002  2A03               	incf	??_gpio_pin_write_logic^0,f,c
 10138   003004  EF06  F018         	goto	u3554
 10139   003008                     u3555:
 10140   003008  90D8               	bcf	status,0,c
 10141   00300A  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 10142   00300C                     u3554:
 10143   00300C  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
 10144   00300E  EF04  F018         	goto	u3555
 10145   003012  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 10146   003014  0AFF               	xorlw	255
 10147   003016  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
 10148   003018  5001               	movf	gpio_pin_write_logic@pin_config^0,w,c
 10149   00301A  6ED9               	movwf	fsr2l,c
 10150   00301C  6ADA               	clrf	fsr2h,c
 10151   00301E  30DF               	rrcf	223,w,c
 10152   003020  32E8               	rrcf	wreg,f,c
 10153   003022  32E8               	rrcf	wreg,f,c
 10154   003024  0B07               	andlw	7
 10155   003026  0D02               	mullw	2
 10156   003028  50F3               	movf	243,w,c
 10157   00302A  0FA0               	addlw	low _lat_register
 10158   00302C  6ED9               	movwf	fsr2l,c
 10159   00302E  6ADA               	clrf	fsr2h,c
 10160   003030  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
 10161   003034  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
 10162   003038  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
 10163   00303C  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
 10164   003040  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 10165   003042  16DF               	andwf	indf2,f,c
 10166   003044                     l292:
 10167                           
 10168                           ;HAL/GPIO/hal_gpio.c: 149:     return Ret;
 10169   003044  5008               	movf	gpio_pin_write_logic@Ret^0,w,c
 10170   003046  0012               	return		;funcret
 10171   003048                     __end_of_gpio_pin_write_logic:
 10172                           	callstack 0
 10173                           
 10174 ;; *************** function _gpio_pin_direction_initialize *****************
 10175 ;; Defined at:
 10176 ;;		line 41 in file "HAL/GPIO/hal_gpio.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  pin_config      1    0[COMRAM] PTR const struct .
 10179 ;;		 -> led_initialize@pin_obj(1), key1$keypad_col_pins(4), key1$keypad_row_pins(4), key1(8), 
 10180 ;;		 -> lcd1$lcd_data(4), lcd1(6), 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;  Ret             1    6[COMRAM] unsigned char 
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  1    wreg      unsigned char 
 10185 ;; Registers used:
 10186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10194 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10195 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10196 ;;Total ram usage:        7 bytes
 10197 ;; Hardware stack levels used: 1
 10198 ;; This function calls:
 10199 ;;		Nothing
 10200 ;; This function is called by:
 10201 ;;		_keypad_initialize
 10202 ;;		_gpio_pin_initialize
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text54
 10207   002CC2                     __ptext54:
 10208                           	callstack 0
 10209   002CC2                     _gpio_pin_direction_initialize:
 10210                           	callstack 27
 10211   002CC2                     
 10212                           ;HAL/GPIO/hal_gpio.c: 41: Std_ReturnType gpio_pin_direction_initialize(const pin_config_
      +                          t* pin_config);HAL/GPIO/hal_gpio.c: 42: {;HAL/GPIO/hal_gpio.c: 43:     Std_ReturnType Re
      +                          t = (Std_ReturnType)0X01;
 10213   002CC2  0E01               	movlw	1
 10214   002CC4  6E07               	movwf	gpio_pin_direction_initialize@Ret^0,c
 10215                           
 10216                           ;HAL/GPIO/hal_gpio.c: 45:     if( (((void*)0) == pin_config) || (pin_config->Pin >= 8) |
      +                          | (pin_config->Port >= 5))
 10217   002CC6  5001               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
 10218   002CC8  B4D8               	btfsc	status,2,c
 10219   002CCA  EF69  F016         	goto	u4961
 10220   002CCE  EF6B  F016         	goto	u4960
 10221   002CD2                     u4961:
 10222   002CD2  EF89  F016         	goto	l4907
 10223   002CD6                     u4960:
 10224   002CD6  5001               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
 10225   002CD8  6ED9               	movwf	fsr2l,c
 10226   002CDA  6ADA               	clrf	fsr2h,c
 10227   002CDC  50DF               	movf	223,w,c
 10228   002CDE  0B07               	andlw	7
 10229   002CE0  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
 10230   002CE2  0E08               	movlw	8
 10231   002CE4  6002               	cpfslt	??_gpio_pin_direction_initialize^0,c
 10232   002CE6  EF77  F016         	goto	u4971
 10233   002CEA  EF79  F016         	goto	u4970
 10234   002CEE                     u4971:
 10235   002CEE  EF89  F016         	goto	l4907
 10236   002CF2                     u4970:
 10237   002CF2  5001               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
 10238   002CF4  6ED9               	movwf	fsr2l,c
 10239   002CF6  6ADA               	clrf	fsr2h,c
 10240   002CF8  30DF               	rrcf	223,w,c
 10241   002CFA  32E8               	rrcf	wreg,f,c
 10242   002CFC  32E8               	rrcf	wreg,f,c
 10243   002CFE  0B07               	andlw	7
 10244   002D00  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
 10245   002D02  0E04               	movlw	4
 10246   002D04  6402               	cpfsgt	??_gpio_pin_direction_initialize^0,c
 10247   002D06  EF87  F016         	goto	u4981
 10248   002D0A  EF89  F016         	goto	u4980
 10249   002D0E                     u4981:
 10250   002D0E  EFE0  F016         	goto	l4915
 10251   002D12                     u4980:
 10252   002D12                     l4907:
 10253                           
 10254                           ;HAL/GPIO/hal_gpio.c: 46:     {;HAL/GPIO/hal_gpio.c: 47:         Ret = (Std_ReturnType)0
      +                          X00;
 10255   002D12  0E00               	movlw	0
 10256   002D14  6E07               	movwf	gpio_pin_direction_initialize@Ret^0,c
 10257                           
 10258                           ;HAL/GPIO/hal_gpio.c: 48:     }
 10259   002D16  EF00  F017         	goto	l4917
 10260   002D1A                     l4909:
 10261                           
 10262                           ;HAL/GPIO/hal_gpio.c: 56:                 (*tris_register[pin_config->Port] &= ~( (uint8
      +                          ) 1 << pin_config->Pin));
 10263   002D1A  5001               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
 10264   002D1C  6ED9               	movwf	fsr2l,c
 10265   002D1E  6ADA               	clrf	fsr2h,c
 10266   002D20  50DF               	movf	223,w,c
 10267   002D22  0B07               	andlw	7
 10268   002D24  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
 10269   002D26  0E01               	movlw	1
 10270   002D28  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
 10271   002D2A  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
 10272   002D2C  EF9A  F016         	goto	u4994
 10273   002D30                     u4995:
 10274   002D30  90D8               	bcf	status,0,c
 10275   002D32  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
 10276   002D34                     u4994:
 10277   002D34  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
 10278   002D36  EF98  F016         	goto	u4995
 10279   002D3A  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 10280   002D3C  0AFF               	xorlw	255
 10281   002D3E  6E04               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
 10282   002D40  5001               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
 10283   002D42  6ED9               	movwf	fsr2l,c
 10284   002D44  6ADA               	clrf	fsr2h,c
 10285   002D46  30DF               	rrcf	223,w,c
 10286   002D48  32E8               	rrcf	wreg,f,c
 10287   002D4A  32E8               	rrcf	wreg,f,c
 10288   002D4C  0B07               	andlw	7
 10289   002D4E  0D02               	mullw	2
 10290   002D50  50F3               	movf	243,w,c
 10291   002D52  0FB4               	addlw	low _tris_register
 10292   002D54  6ED9               	movwf	fsr2l,c
 10293   002D56  6ADA               	clrf	fsr2h,c
 10294   002D58  CFDE F005          	movff	postinc2,??_gpio_pin_direction_initialize+3
 10295   002D5C  CFDD F006          	movff	postdec2,??_gpio_pin_direction_initialize+4
 10296   002D60  C005  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
 10297   002D64  C006  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
 10298   002D68  5004               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
 10299   002D6A  16DF               	andwf	indf2,f,c
 10300                           
 10301                           ;HAL/GPIO/hal_gpio.c: 58:                 break;
 10302   002D6C  EF00  F017         	goto	l4917
 10303   002D70                     l4911:
 10304                           
 10305                           ;HAL/GPIO/hal_gpio.c: 62:                 (*tris_register[pin_config->Port] |= ( (uint8)
      +                           1 << pin_config->Pin));
 10306   002D70  5001               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
 10307   002D72  6ED9               	movwf	fsr2l,c
 10308   002D74  6ADA               	clrf	fsr2h,c
 10309   002D76  50DF               	movf	223,w,c
 10310   002D78  0B07               	andlw	7
 10311   002D7A  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
 10312   002D7C  0E01               	movlw	1
 10313   002D7E  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
 10314   002D80  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
 10315   002D82  EFC5  F016         	goto	u5004
 10316   002D86                     u5005:
 10317   002D86  90D8               	bcf	status,0,c
 10318   002D88  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
 10319   002D8A                     u5004:
 10320   002D8A  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
 10321   002D8C  EFC3  F016         	goto	u5005
 10322   002D90  5001               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
 10323   002D92  6ED9               	movwf	fsr2l,c
 10324   002D94  6ADA               	clrf	fsr2h,c
 10325   002D96  30DF               	rrcf	223,w,c
 10326   002D98  32E8               	rrcf	wreg,f,c
 10327   002D9A  32E8               	rrcf	wreg,f,c
 10328   002D9C  0B07               	andlw	7
 10329   002D9E  0D02               	mullw	2
 10330   002DA0  50F3               	movf	243,w,c
 10331   002DA2  0FB4               	addlw	low _tris_register
 10332   002DA4  6ED9               	movwf	fsr2l,c
 10333   002DA6  6ADA               	clrf	fsr2h,c
 10334   002DA8  CFDE F004          	movff	postinc2,??_gpio_pin_direction_initialize+2
 10335   002DAC  CFDD F005          	movff	postdec2,??_gpio_pin_direction_initialize+3
 10336   002DB0  C004  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
 10337   002DB4  C005  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
 10338   002DB8  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 10339   002DBA  12DF               	iorwf	indf2,f,c
 10340                           
 10341                           ;HAL/GPIO/hal_gpio.c: 64:                 break;
 10342   002DBC  EF00  F017         	goto	l4917
 10343   002DC0                     l4915:
 10344   002DC0  5001               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
 10345   002DC2  6ED9               	movwf	fsr2l,c
 10346   002DC4  6ADA               	clrf	fsr2h,c
 10347   002DC6  BEDF               	btfsc	indf2,7,c
 10348   002DC8  EFE8  F016         	goto	u5011
 10349   002DCC  EFEB  F016         	goto	u5010
 10350   002DD0                     u5011:
 10351   002DD0  0E01               	movlw	1
 10352   002DD2  EFEC  F016         	goto	u5020
 10353   002DD6                     u5010:
 10354   002DD6  0E00               	movlw	0
 10355   002DD8                     u5020:
 10356   002DD8  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
 10357   002DDA  6A03               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
 10358                           
 10359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10360                           ; Switch size 1, requested type "simple"
 10361                           ; Number of cases is 1, Range of values is 0 to 0
 10362                           ; switch strategies available:
 10363                           ; Name         Instructions Cycles
 10364                           ; simple_byte            4     3 (average)
 10365                           ;	Chosen strategy is simple_byte
 10366   002DDC  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 10367   002DDE  0A00               	xorlw	0	; case 0
 10368   002DE0  B4D8               	btfsc	status,2,c
 10369   002DE2  EFF5  F016         	goto	l7429
 10370   002DE6  EF89  F016         	goto	l4907
 10371   002DEA                     l7429:
 10372                           
 10373                           ; Switch size 1, requested type "simple"
 10374                           ; Number of cases is 2, Range of values is 0 to 1
 10375                           ; switch strategies available:
 10376                           ; Name         Instructions Cycles
 10377                           ; simple_byte            7     4 (average)
 10378                           ;	Chosen strategy is simple_byte
 10379   002DEA  5002               	movf	??_gpio_pin_direction_initialize^0,w,c
 10380   002DEC  0A00               	xorlw	0	; case 0
 10381   002DEE  B4D8               	btfsc	status,2,c
 10382   002DF0  EF8D  F016         	goto	l4909
 10383   002DF4  0A01               	xorlw	1	; case 1
 10384   002DF6  B4D8               	btfsc	status,2,c
 10385   002DF8  EFB8  F016         	goto	l4911
 10386   002DFC  EF89  F016         	goto	l4907
 10387   002E00                     l4917:
 10388                           
 10389                           ;HAL/GPIO/hal_gpio.c: 75:     return Ret;
 10390   002E00  5007               	movf	gpio_pin_direction_initialize@Ret^0,w,c
 10391   002E02  0012               	return		;funcret
 10392   002E04                     __end_of_gpio_pin_direction_initialize:
 10393                           	callstack 0
 10394                           
 10395                           	psect	rparam
 10396   000000                     
 10397                           	psect	config
 10398                           
 10399                           ; Padding undefined space
 10400   300000                     	org	3145728
 10401   300000  FF                 	db	255
 10402                           
 10403                           ;Config register CONFIG1H @ 0x300001
 10404                           ;	Oscillator Selection bits
 10405                           ;	FOSC = HS, HS oscillator
 10406                           ;	Fail-Safe Clock Monitor Enable bit
 10407                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10408                           ;	Internal/External Oscillator Switchover bit
 10409                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10410   300001                     	org	3145729
 10411   300001  02                 	db	2
 10412                           
 10413                           ;Config register CONFIG2L @ 0x300002
 10414                           ;	Power-up Timer Enable bit
 10415                           ;	PWRTEN = OFF, PWRT disabled
 10416                           ;	Brown-out Reset Enable bits
 10417                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10418                           ;	Brown Out Reset Voltage bits
 10419                           ;	BORV = 18, VBOR set to 1.8 V nominal
 10420   300002                     	org	3145730
 10421   300002  1F                 	db	31
 10422                           
 10423                           ;Config register CONFIG2H @ 0x300003
 10424                           ;	Watchdog Timer Enable bit
 10425                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 10426                           ;	Watchdog Timer Postscale Select bits
 10427                           ;	WDTPS = 32768, 1:32768
 10428   300003                     	org	3145731
 10429   300003  1E                 	db	30
 10430                           
 10431                           ; Padding undefined space
 10432   300004                     	org	3145732
 10433   300004  FF                 	db	255
 10434                           
 10435                           ;Config register CONFIG3H @ 0x300005
 10436                           ;	CCP2 MUX bit
 10437                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10438                           ;	PORTB A/D Enable bit
 10439                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10440                           ;	Low-Power Timer1 Oscillator Enable bit
 10441                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10442                           ;	HFINTOSC Fast Start-up
 10443                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 10444                           ;	MCLR Pin Enable bit
 10445                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10446   300005                     	org	3145733
 10447   300005  8B                 	db	139
 10448                           
 10449                           ;Config register CONFIG4L @ 0x300006
 10450                           ;	Stack Full/Underflow Reset Enable bit
 10451                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10452                           ;	Single-Supply ICSP Enable bit
 10453                           ;	LVP = ON, Single-Supply ICSP enabled
 10454                           ;	Extended Instruction Set Enable bit
 10455                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10456                           ;	Background Debugger Enable bit
 10457                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10458   300006                     	org	3145734
 10459   300006  85                 	db	133
 10460                           
 10461                           ; Padding undefined space
 10462   300007                     	org	3145735
 10463   300007  FF                 	db	255
 10464                           
 10465                           ;Config register CONFIG5L @ 0x300008
 10466                           ;	Code Protection Block 0
 10467                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10468                           ;	Code Protection Block 1
 10469                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10470                           ;	Code Protection Block 2
 10471                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10472                           ;	Code Protection Block 3
 10473                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10474   300008                     	org	3145736
 10475   300008  0F                 	db	15
 10476                           
 10477                           ;Config register CONFIG5H @ 0x300009
 10478                           ;	Boot Block Code Protection bit
 10479                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10480                           ;	Data EEPROM Code Protection bit
 10481                           ;	CPD = OFF, Data EEPROM not code-protected
 10482   300009                     	org	3145737
 10483   300009  C0                 	db	192
 10484                           
 10485                           ;Config register CONFIG6L @ 0x30000A
 10486                           ;	Write Protection Block 0
 10487                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10488                           ;	Write Protection Block 1
 10489                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10490                           ;	Write Protection Block 2
 10491                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10492                           ;	Write Protection Block 3
 10493                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 10494   30000A                     	org	3145738
 10495   30000A  0F                 	db	15
 10496                           
 10497                           ;Config register CONFIG6H @ 0x30000B
 10498                           ;	Configuration Register Write Protection bit
 10499                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10500                           ;	Boot Block Write Protection bit
 10501                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10502                           ;	Data EEPROM Write Protection bit
 10503                           ;	WRTD = OFF, Data EEPROM not write-protected
 10504   30000B                     	org	3145739
 10505   30000B  E0                 	db	224
 10506                           
 10507                           ;Config register CONFIG7L @ 0x30000C
 10508                           ;	Table Read Protection Block 0
 10509                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10510                           ;	Table Read Protection Block 1
 10511                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10512                           ;	Table Read Protection Block 2
 10513                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10514                           ;	Table Read Protection Block 3
 10515                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10516   30000C                     	org	3145740
 10517   30000C  0F                 	db	15
 10518                           
 10519                           ;Config register CONFIG7H @ 0x30000D
 10520                           ;	Boot Block Table Read Protection bit
 10521                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10522   30000D                     	org	3145741
 10523   30000D  40                 	db	64
 10524                           tosu	equ	0xFFF
 10525                           tosh	equ	0xFFE
 10526                           tosl	equ	0xFFD
 10527                           stkptr	equ	0xFFC
 10528                           pclatu	equ	0xFFB
 10529                           pclath	equ	0xFFA
 10530                           pcl	equ	0xFF9
 10531                           tblptru	equ	0xFF8
 10532                           tblptrh	equ	0xFF7
 10533                           tblptrl	equ	0xFF6
 10534                           tablat	equ	0xFF5
 10535                           prodh	equ	0xFF4
 10536                           prodl	equ	0xFF3
 10537                           indf0	equ	0xFEF
 10538                           postinc0	equ	0xFEE
 10539                           postdec0	equ	0xFED
 10540                           preinc0	equ	0xFEC
 10541                           plusw0	equ	0xFEB
 10542                           fsr0h	equ	0xFEA
 10543                           fsr0l	equ	0xFE9
 10544                           wreg	equ	0xFE8
 10545                           indf1	equ	0xFE7
 10546                           postinc1	equ	0xFE6
 10547                           postdec1	equ	0xFE5
 10548                           preinc1	equ	0xFE4
 10549                           plusw1	equ	0xFE3
 10550                           fsr1h	equ	0xFE2
 10551                           fsr1l	equ	0xFE1
 10552                           bsr	equ	0xFE0
 10553                           indf2	equ	0xFDF
 10554                           postinc2	equ	0xFDE
 10555                           postdec2	equ	0xFDD
 10556                           preinc2	equ	0xFDC
 10557                           plusw2	equ	0xFDB
 10558                           fsr2h	equ	0xFDA
 10559                           fsr2l	equ	0xFD9
 10560                           status	equ	0xFD8

Data Sizes:
    Strings     53
    Constant    16
    Data        48
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     78      88
    BANK0           160     64     132
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> Password_text(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(1) Largest target is 8
		 -> key1(BANK0[8]), key1$keypad_col_pins(BANK0[4]), key1$keypad_row_pins(BANK0[4]), lcd1(BANK0[6]), 
		 -> lcd1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(1) Largest target is 8
		 -> key1(BANK0[8]), key1$keypad_row_pins(BANK0[4]), lcd1(BANK0[6]), lcd1$lcd_data(BANK0[4]), 
		 -> led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_read_logic@logic	PTR enum E3232 size(1) Largest target is 1
		 -> keypad_get_value@column_logic(COMRAM[1]), 

    gpio_pin_read_logic@pin_config	PTR const struct . size(1) Largest target is 8
		 -> key1(BANK0[8]), key1$keypad_col_pins(BANK0[4]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(1) Largest target is 8
		 -> key1(BANK0[8]), key1$keypad_row_pins(BANK0[4]), lcd1(BANK0[6]), lcd1$lcd_data(BANK0[4]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_off@pin_obj(COMRAM[1]), led_on@pin_obj(COMRAM[1]), 

    keypad_get_value@obj	PTR const struct . size(1) Largest target is 8
		 -> key1(BANK0[8]), 

    keypad_get_value@value	PTR unsigned char  size(1) Largest target is 4
		 -> Keypad_Value(BANK0[4]), 

    keypad_initialize@obj	PTR const struct . size(1) Largest target is 8
		 -> key1(BANK0[8]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlhl[1]), LATB(BITBIGSFRlhh[1]), LATC(BITBIGSFRlhh[1]), LATD(BITBIGSFRlhh[1]), 
		 -> LATE(BITBIGSFRlhh[1]), 

    lcd_4bit_initialze@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_data@str_data	PTR unsigned char  size(2) Largest target is 20
		 -> Password_text(BANK0[6]), STR_6(CODE[8]), STR_7(CODE[20]), STR_8(CODE[2]), 
		 -> STR_9(CODE[2]), 

    lcd_4bit_send_string_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_data_pos@str_data	PTR unsigned char  size(2) Largest target is 6
		 -> Password_text(BANK0[6]), STR_8(CODE[2]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bit@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    led_initialize@led	PTR const struct . size(1) Largest target is 1
		 -> led_1(COMRAM[1]), 

    led_on@led	PTR const struct . size(1) Largest target is 1
		 -> led_1(COMRAM[1]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> Password_text(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> Password_text(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllll[1]), PORTB(BITBIGSFRlhl[1]), PORTC(BITBIGSFRlhl[1]), PORTD(BITBIGSFRlhl[1]), 
		 -> PORTE(BITBIGSFRlhl[1]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1439$buffer	PTR unsigned char  size(2) Largest target is 0

    S1439$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> Password_text(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[5]), 
		 -> STR_5(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> convert_uint16_to_string@temp_str(BANK0[6]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_10(CODE[4]), STR_13(CODE[4]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllll[1]), TRISB(BITBIGSFRhlll[1]), TRISC(BITBIGSFRhlll[1]), TRISD(BITBIGSFRhlll[1]), 
		 -> TRISE(BITBIGSFRhlll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[5]), 
		 -> STR_5(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[5]), 
		 -> STR_5(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[5]), 
		 -> STR_5(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _led_on->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Welcom->_lcd_4bit_send_string_data
    _Set_Password->_lcd_4bit_send_string_data_pos
    _lcd_4bit_send_string_data_pos->_lcd_4bit_send_string_data
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_string_data->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data->_lcd_send_4bit
    _keypad_get_value->_gpio_pin_write_logic
    _Read_Password_EEPROM->_DATAEE_ReadByte
    _APP_Init->_lcd_4bit_initialze
    _led_initialize->_gpio_pin_initialize
    _lcd_4bit_initialze->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bit
    _lcd_send_4bit->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_convert_uint16_to_string
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  175401
                           _APP_Init
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _Read_Password_EEPROM
                  _SYSTEM_Initialize
                       _Set_Password
                             _Welcom
           _convert_uint16_to_string
              _lcd_4bit_send_command
      _lcd_4bit_send_string_data_pos
                             _led_on
 ---------------------------------------------------------------------------------
 (1) _led_on                                               4     3      1    2724
                                              8 COMRAM     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            11     8      3   38253
                                             53 BANK0     11     8      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   36181
                                             65 COMRAM    13    13      0
                                             47 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   34957
                                             64 COMRAM     1     1      0
                                             44 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3   34460
                                             53 COMRAM    11     8      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1582
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   25284
                                             45 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3413
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     9      3    5479
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3309
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1177
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5    1487
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _Welcom                                               3     3      0   22331
                                             24 COMRAM     3     3      0
              _lcd_4bit_send_command
          _lcd_4bit_send_string_data
 ---------------------------------------------------------------------------------
 (1) _Set_Password                                        13    11      2   50689
                                             30 COMRAM    13    11      2
                             ___wmul
                   _keypad_get_value
              _lcd_4bit_send_command
          _lcd_4bit_send_string_data
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_data_pos                        6     1      5   23731
                                             24 COMRAM     6     1      5
          _lcd_4bit_send_string_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  6     3      3   12797
                                             17 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string_data                            7     4      3   10146
                                             17 COMRAM     7     4      3
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2    9356
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (2) _keypad_get_value                                     8     6      2    3442
                                              8 COMRAM     8     6      2
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                  7     5      2     330
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1142
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Password_EEPROM                                 7     5      2     297
                                              2 COMRAM     7     5      2
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     272
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3     697
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _APP_Init                                             0     0      0   24315
                  _keypad_initialize
                 _lcd_4bit_initialze
                     _led_initialize
 ---------------------------------------------------------------------------------
 (2) _led_initialize                                       4     3      1    3853
                                             11 COMRAM     4     3      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialze                                   4     3      1   16181
                                             17 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   12092
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bit                                        6     4      2    3293
                                              8 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    2899
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _keypad_initialize                                    4     3      1    4281
                                             11 COMRAM     4     3      1
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    3622
                                              8 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    2503
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        7     6      1     353
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_Init
     _keypad_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
     _lcd_4bit_initialze
       _gpio_pin_initialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bit
           _gpio_pin_write_logic
     _led_initialize
       _gpio_pin_initialize
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _Read_Password_EEPROM
     _DATAEE_ReadByte
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Set_Password
     ___wmul
     _keypad_get_value
       _gpio_pin_read_logic
       _gpio_pin_write_logic
     _lcd_4bit_send_command
     _lcd_4bit_send_string_data
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
         _lcd_send_4bit
     _lcd_4bit_send_string_data_pos
       _lcd_4bit_send_string_data
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
   _Welcom
     _lcd_4bit_send_command
     _lcd_4bit_send_string_data
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
   _lcd_4bit_send_command
   _lcd_4bit_send_string_data_pos
   _led_on
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      84       5       82.5%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4E      58       1       92.6%
BITBIGSFRhllhhh     28      0       0      39        0.0%
BITBIGSFRhlh        1D      0       0      38        0.0%
BITBIGSFRllll       1C      0       0      46        0.0%
BITBIGSFRhhh         7      0       0      36        0.0%
BITBIGSFRhllhll      5      0       0      41        0.0%
BITBIGSFRhllhlh      4      0       0      40        0.0%
BITBIGSFRlhh         4      0       0      43        0.0%
BITBIGSFRlhl         4      0       0      44        0.0%
BITBIGSFRhlll        4      0       0      42        0.0%
BITBIGSFRhhl         2      0       0      37        0.0%
BITBIGSFRlllh        1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      47        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Oct 04 21:43:15 2024

                         ?_lcd_send_4bit 0009                             ___fldiv@aexp 0019  
                           ___fldiv@bexp 0018                             ___fldiv@sign 0011  
                                     l21 3F56                                       l35 363A  
                                     l73 4072                                       l68 3550  
                                     l93 3940                                       l78 4014  
                           ___awdiv@sign 0006                      ___wmul@multiplicand 0003  
                                    l100 4168                                      l231 3AA0  
                                    l304 3888                                      l402 451C  
                                    l318 3DB4                                      l190 3FB6  
                                    l168 3D3A                                      l195 4282  
                                    l292 3044                                      l460 4234  
                                    l540 3704                                      l533 44F0  
                                    l461 4240                                      l550 4376  
                                    l279 2E02                                      l464 4508  
                                    l297 3046                                      l561 3E8C  
                                    l385 44AA                                      l458 4226  
                                    l810 37C8                                      l547 315A  
                                    l566 3E22                                      l399 4512  
                                    l823 39F0                                      l579 44D0  
                                    l844 331E                                      l853 43E6  
                                    l838 3B4A                                      l849 3364  
                                    l876 3260            gpio_pin_initialize@pin_config 0009  
                   keypad_initialize@obj 000C                     keypad_initialize@ret 000D  
                                    _abs 43E8                                      _pad 3E8E  
                                    _ret 0057      __end_of_lcd_4bit_send_enable_signal 4284  
            _lcd_4bit_send_enable_signal 4242                             ___awmod@sign 0006  
                                    wreg 0FE8                             ___flmul@aexp 000E  
                           ___flmul@bexp 0013                             ___flmul@sign 000D  
                           ___flmul@temp 0018                             ___flmul@prod 0014  
              ?_convert_uint16_to_string 0095             lcd_4bit_send_string_data@Ret 0017  
           lcd_4bit_send_string_data@lcd 0012                             ___fltol@exp1 000A  
                                   l1200 21AC                                     l1210 22DC  
                                   l1202 2224                                     l1203 2212  
                                   l1107 1C20                                     ?_abs 0007  
                                   l1300 2B78                                     l1124 1D3A  
                                   l1116 1EF0                                     l1108 1C0E  
                                   l1133 1E0A                                     l1109 1BD4  
                                   l1302 2B80                                     l1134 1DF8  
                                   l1303 2BC6                                     l1161 26B4  
                                   l1314 2CC0                                     l1330 1214  
                                   l1163 2514                                     l1172 255A  
                                   l1404 42C2                                     l1149 41FC  
                                   l1325 1A30                                     l1422 441A  
                                   l1174 25D2                                     l1166 24D8  
                                   l1414 3462                                     l1175 25C0  
                                   l1431 2A8C                                     l1263 43AE  
                                   l1256 447A                                     l1328 13CE  
                                   l1193 1FB6                                     l1442 40C8  
                                   l1370 3C92                                     l1419 4402  
                                   l1460 3BF4                                     l1292 3EA4  
                                   l1428 2B48                                     l1197 231A  
                                   l1358 1818                                     l1374 3C9A  
                                   l1382 2936                                     l4031 2F5A  
                                   l1471 451E                                     l1296 3EF2  
                                   l1448 4118                                     l4041 2FF2  
                                   l4033 2F7A                                     l4035 2F82  
                                   l4027 2F2A                                     l1468 4302  
                                   l4037 2F92                                     l4029 2F3E  
                                   l1477 433C                                     l4039 2FE2  
                                   l5031 3D4C                                     l5033 3D68  
                                   l5113 3EF4                                     l5201 3480  
                                   l5035 3D88                                     l5123 3F14  
                                   l5115 3F04                                     l5211 34A6  
                                   l5203 3498                                     l5051 382A  
                                   l5043 37CA                                     l5037 3D90  
                                   l5029 3D3C                                     l5125 3F1E  
                                   l5141 3F54                                     l5117 3F0C  
                                   l5221 34EE                                     l5213 34A8  
                                   l5053 3832                                     l5045 37DE  
                                   l5061 3A06                                     l6021 3B4C  
                                   l6101 1B5A                                     l5039 3DB2  
                                   l5135 3F34                                     l5127 3F20  
                                   l5231 3528                                     l5223 34F8  
                                   l5215 34B8                                     l5055 3886  
                                   l5047 37EE                                     l5151 357A  
                                   l5071 3A50                                     l5063 3A0E  
                                   l6031 3BC4                                     l6023 3B5C  
                                   l6111 1B6E                                     l6103 1B5E  
                                   l5137 3F42                                     l5129 3F30  
                                   l4601 3FA4                                     l5233 3534  
                                   l5225 3504                                     l5217 34C8  
                                   l5209 349C                                     l5049 380A  
                                   l5145 3552                                     l5065 3A14  
                                   l5241 411A                                     l6025 3B6C  
                                   l6201 1DF0                                     l6121 1BCC  
                                   l6105 1B62                                     l6113 1B72  
                                   l6041 1A4E                                     l7001 1852  
                                   l5139 3F44                                     l4611 425A  
                                   l4603 3FB4                                     l5235 3540  
                                   l5227 3510                                     l5219 34D4  
                                   l5331 4498                                     l5171 35BC  
                                   l5163 358E                                     l5147 3562  
                                   l5091 38B8                                     l5067 3A28  
                                   l5075 3A64                                     l5059 39F2  
                                   l5251 4166                                     l5243 412A  
                                   l6027 3B76                                     l6211 1E6E  
                                   l6131 1C02                                     l6123 1BE2  
                                   l6115 1B76                                     l6107 1B66  
                                   l6043 1A5E                                     l6051 1A88  
                                   l6035 1A32                                     l7003 185A  
                                   l7011 187A                                     l4613 4268  
                                   l5229 351C                                     l5237 354E  
                                   l5501 4214                                     l5341 44F8  
                                   l5333 449E                                     l5325 447C  
                                   l5181 35E4                                     l5173 35CE  
                                   l5165 359C                                     l5157 358A  
                                   l5149 3572                                     l5093 38C4  
                                   l5085 388A                                     l5069 3A3C  
                                   l5077 3A9E                                     l5245 413C  
                                   l6029 3B92                                     l6301 242E  
                                   l6221 1EB4                                     l6205 1E1A  
                                   l6213 1E70                                     l6141 1C52  
                                   l6133 1C0C                                     l6125 1BEE  
                                   l6117 1BA0                                     l6109 1B6A  
                                   l6061 1AB8                                     l6053 1A98  
                                   l6045 1A6E                                     l6037 1A3E  
                                   l7021 1900                                     l7013 188C  
                                   l7005 186A                                     l7101 27D0  
                                   ?_pad 000F                                     l4615 4270  
                                   l4607 4242                                     l5511 4220  
                                   l5503 4216                                     l5351 4504  
                                   l5343 44FC                                     l5335 44A8  
                                   l5327 4494                                     l5191 3628  
                                   l5183 35F4                                     l5167 359E  
                                   l5095 38FE                                     l5087 389E  
                                   l5247 4144                                     l6311 246C  
                                   l6303 243E                                     l6231 1EDE  
                                   l6223 1EC2                                     l6215 1E80  
                                   l6207 1E26                                     l6151 1C8E  
                                   l6143 1C62                                     l6135 1C2E  
                                   l6127 1BF2                                     l6119 1BBC  
                                   l6071 1AF8                                     l6063 1AC6  
                                   l6055 1A9E                                     l6047 1A7E  
                                   l6039 1A4C                                     l7031 197A  
                                   l7023 1934                                     l7015 189E  
                                   l7007 186E                                     l7111 2852  
                                   l4617 4280                                     l4609 4252  
                                   l5361 3E3C                                     l5513 4224  
                                   l5505 4218                                     l5353 4506  
                                   l5345 44FE                                     l5337 4514  
                                   l5329 4496                                     l5185 3614  
                                   l5169 35AE                                     l5193 3638  
                                   l5097 3900                                     l5089 38B0  
                                   l5249 4154                                     l5521 3652  
                                   l6241 42DE                                     l6321 24B4  
                                   l6313 247C                                     l6305 243E  
                                   l6401 1F3E                                     l6233 1EE0  
                                   l6225 1EC8                                     l6217 1E90  
                                   l6209 1E34                                     l6161 1CD4  
                                   l6153 1C9C                                     l6145 1C70  
                                   l6137 1C3E                                     l6129 1C00  
                                   l6081 1B32                                     l6073 1AFA  
                                   l6065 1AC8                                     l6057 1AB0  
                                   l6049 1A80                                     l7041 19E6  
                                   l7033 1982                                     l7025 193C  
                                   l7017 18A2                                     l7009 1874  
                                   l7105 27D8                                     l5601 3E20  
                                   l5363 3E6E                                     l5515 44D2  
                                   l5507 421A                                     l5347 4500  
                                   l5339 44F2                                     l5187 3616  
                                   l5179 35D2                                     l5099 393E  
                                   l7211 3092                                     l7203 3048  
                                   l5531 367E                                     l5523 366C  
                                   l6243 42E2                                     l6331 2502  
                                   l6323 24C8                                     l6315 248C  
                                   l6251 231C                                     l6411 1F6E  
                                   l6403 1F44                                     l6227 1ECA  
                                   l6219 1EB0                                     l6171 1D50  
                                   l6163 1D08                                     l6155 1C9E  
                                   l6147 1C7E                                     l6091 1B46  
                                   l6083 1B36                                     l6067 1AD8  
                                   l6075 1B02                                     l6059 1AB2  
                                   l7043 19F6                                     l7035 1990  
                                   l7019 18A8                                     l7027 1940  
                                   l7051 3BF6                                     l7115 287A  
                                   l7107 280A                                     l7131 2914  
                                   l4901 2CC2                                     l5197 3464  
                                   l5365 3E7E                                     l5357 3E24  
                                   l5509 421C                                     l5349 4502  
                                   l6245 44AC                                     l5189 3626  
                                   l7213 30A2                                     l7221 30EA  
                                   l7205 304C                                     l5533 3698  
                                   l5517 363C                                     l6237 42C4  
                                   l6341 254A                                     l6333 2512  
                                   l6325 24D6                                     l6317 249C  
                                   l6309 2452                                     l6261 2358  
                                   l6253 2328                                     l6501 22AA  
                                   l6421 1FA6                                     l6413 1F70  
                                   l6405 1F54                                     l6229 1ED0  
                                   l6181 1D8C                                     l6173 1D60  
                                   l6165 1D0A                                     l6157 1CA8  
                                   l6149 1C8A                                     l6093 1B4A  
                                   l6085 1B3A                                     l6077 1B12  
                                   l6069 1AE8                                     l7045 1A0C  
                                   l7037 19C0                                     l7029 195E  
                                   l7061 3C64                                     l7053 3BFE  
                                   l7125 28DC                                     l7117 28A4  
                                   l7109 282A                                     l7301 2E92  
                                   l4911 2D70                                     l4903 2CD6  
                                   l4591 3F74                                     l5199 3478  
                                   l5367 3E80                                     l5359 3E34  
                                   l6247 44C8                                     l7223 30FA  
                                   l7215 30BC                                     l7207 3062  
                                   l5551 36E8                                     l5543 36AE  
                                   l5535 369A                                     l5519 363C  
                                   l6239 42D0                                     l6351 258A  
                                   l6343 2558                                     l6335 2524  
                                   l6327 24E2                                     l6319 24A4  
                                   l6271 2388                                     l6263 2368  
                                   l6255 2336                                     l6511 2300  
                                   l6503 22C4                                     l6431 1FF6  
                                   l6423 1FC6                                     l6415 1F80  
                                   l6407 1F5A                                     l6191 1DB8  
                                   l6183 1D8E                                     l6167 1D1A  
                                   l6159 1CAE                                     l6095 1B4E  
                                   l6087 1B3E                                     l6079 1B24  
                                   l7047 1A14                                     l7039 19CE  
                                   l7055 3C20                                     l7063 3C6C  
                                   l7119 28B2                                     l7127 2908  
                                   l7071 26EC                                     l7151 428C  
                                   l7311 2EC6                                     l7303 2E9A  
                                   l4905 2CF2                                     l5369 3E8A  
                                   l7225 3152                                     l7217 30D2  
                                   l7209 3080                                     l5545 36BC  
                                   l5537 36AA                                     l5529 3670  
                                   l7161 4454                                     l6601 39E8  
                                   l6361 25FC                                     l6353 25B8  
                                   l6337 253A                                     l6345 256A  
                                   l6329 2500                                     l6281 23BE  
                                   l6273 238E                                     l6265 236A  
                                   l6257 2338                                     l6505 22E0  
                                   l6513 2306                                     l6441 2046  
                                   l6433 2000                                     l6425 1FD6  
                                   l6417 1F90                                     l6409 1F60  
                                   l6185 1D9C                                     l6177 1D74  
                                   l6193 1DBA                                     l6169 1D2A  
                                   l6097 1B52                                     l6089 1B42  
                                   l6521 41C8                                     l7057 3C28  
                                   l7081 2738                                     l7073 26F0  
                                   l7065 26B6                                     l7153 429C  
                                   l7313 2ED4                                     l7305 2EA6  
                                   l4915 2DC0                                     l4907 2D12  
                                   l4587 3F58                                     l4931 4070  
                                   l5491 450A                                     l7219 30D4  
                                   l5547 36D6                                     l7163 445E  
                                   l6531 3720                                     l6371 2674  
                                   l6363 2626                                     l6347 2578  
                                   l6339 2540                                     l6291 23FE  
                                   l6283 23CE                                     l6275 239C  
                                   l6259 2348                                     l6267 2372  
                                   l6611 3B0E                                     l6515 230A  
                                   l6507 22F0                                     l6451 2088  
                                   l6443 2052                                     l6435 2016  
                                   l6419 1FA0                                     l6187 1DA4  
                                   l6179 1D7E                                     l6195 1DC8  
                                   l6099 1B56                                     l7059 3C44  
                                   l7083 2754                                     l7075 2712  
                                   l7067 26D8                                     l7155 42B8  
                                   l7171 4388                                     l7315 2EE8  
                                   l7307 2EA8                                     l4909 2D1A  
                                   l4917 2E00                                     l4597 3F78  
                                   l4589 3F6C                                     l4925 4016  
                                   l5493 41FE                                     l5581 433E  
                                   l4941 4012                                     l5549 36D8  
                                   l7165 4460                                     l6541 3746  
                                   l6533 3724                                     l6525 3706  
                                   l6701 3EC0                                     l6381 26AA  
                                   l6373 2690                                     l6357 25E2  
                                   l6365 262A                                     l6349 257C  
                                   l6293 240E                                     l6285 23D0  
                                   l6277 239E                                     l6269 2382  
                                   l6613 3B1E                                     l6605 3AA2  
                                   l6621 3262                                     l6509 22FE  
                                   l6461 20EA                                     l6453 2098  
                                   l6445 2060                                     l6437 2022  
                                   l6429 1FEA                                     l6197 1DCC  
                                   l6189 1DA8                                     l7421 27EC  
                                   l7093 27A6                                     l7085 2770  
                                   l7077 271A                                     l7069 26E0  
                                   l7149 4284                                     l7173 4390  
                                   l7181 3CB2                                     l7317 2F00  
                                   l7309 2EB8                                     l4599 3FA2  
                                   l4927 4026                                     l5495 4206  
                                   l5583 4352                                     l4935 3FB8  
                                   l7159 444C                                     l6551 377C  
                                   l6543 3758                                     l6535 3732  
                                   l6527 370A                                     l6703 3EC4  
                                   l6375 2694                                     l6367 2644  
                                   l6359 25EE                                     l6295 2416  
                                   l6279 23AE                                     l6287 23D8  
                                   l6615 3B42                                     l6607 3AD0  
                                   l6631 32EC                                     l6623 3290  
                                   l6471 2192                                     l6463 2106  
                                   l6455 20B2                                     l6447 206C  
                                   l6439 203A                                     l6391 1EFE  
                                   l6199 1DDA                                     l6519 41B8  
                                   l6711 3366                                     l7423 288E  
                                   l7095 27B0                                     l7087 2788  
                                   l7079 272E                                     l7175 43A2  
                                   l7167 4378                                     l7191 3CF0  
                                   l7183 3CBA                                     l5591 3DC6  
                                   l7319 2F18                                     l4929 402E  
                                   l5497 420C                                     l5585 436E  
                                   l4937 3FC8                                     l6553 3792  
                                   l6545 3760                                     l6561 37A8  
                                   l6537 373A                                     l6529 3718  
                                   l6705 3EE2                                     l6801 2BCE  
                                   l6377 26A2                                     l6369 265A  
                                   l6297 241A                                     l6289 23E8  
                                   l6617 3B48                                     l6609 3AE0  
                                   l6633 32FE                                     l6625 32A0  
                                   l6481 21CE                                     l6473 219C  
                                   l6465 2130                                     l6457 20C2  
                                   l6449 207C                                     l6393 1F0C  
                                   l6713 3386                                     l7425 28FA  
                                   l7097 27C2                                     l7089 2792  
                                   l7169 4380                                     l7193 3D08  
                                   l7185 3CC6                                     l5593 3DCE  
                                   l7281 2E18                                     l5499 4210  
                                   l5579 433E                                     l4939 3FD0  
                                   l7427 3A78                                     l6563 37B8  
                                   l6555 379A                                     l6547 3768  
                                   l6539 373E                                     l6571 3946  
                                   l6707 43E8                                     l6811 2C1C  
                                   l6803 2BD8                                     l6379 26A8  
                                   l6635 330C                                     l6627 32CE  
                                   l6491 2240                                     l6483 21DC  
                                   l6475 21AA                                     l6467 2166  
                                   l6459 20DE                                     l6395 1F0E  
                                   l6643 43B0                                     l6651 315C  
                                   l6715 33C4                                     l6723 3404  
                                   l7099 27C8                                     l7195 3D1C  
                                   l7187 3CCA                                     l7179 3C9C  
                                   l5595 3E00                                     l7291 2E4A  
                                   l7283 2E1C                                     l7429 2DEA  
                                   l6565 37C0                                     l6557 379C  
                                   l6549 3776                                     l6581 3976  
                                   l6573 3954                                     l6709 43F6  
                                   l6821 2C8E                                     l6805 2BDE  
                                   l6813 2C38                                     l6637 335C  
                                   l6629 32DE                                     l6493 224E  
                                   l6485 220A                                     l6477 21BC  
                                   l6469 2174                                     l6397 1F1E  
                                   l6389 1EF2                                     l6645 43C6  
                                   l6661 31B2                                     l6653 3172  
                                   l6725 3416                                     l6717 33EC  
                                   l6741 4096                                     l6733 4304  
                                   l6901 129C                                     l7197 3D1E  
                                   l7189 3CE2                                     l5597 3E10  
                                   l5589 3DB6                                     l7293 2E5A  
                                   l7285 2E20                                     l7277 2E04  
                                   l6559 37A2                                     l6591 39BC  
                                   l6583 3988                                     l6575 395C  
                                   l6823 2C94                                     l6815 2C52  
                                   l6807 2C10                                     l6639 3362  
                                   l6495 2278                                     l6479 21CA  
                                   l6399 1F2E                                     l6647 43D6  
                                   l6663 31C2                                     l6719 33F8  
                                   l6751 29C2                                     l6735 430C  
                                   l6911 135C                                     l6903 12CE  
                                   l6831 104E                                     l7199 3D38  
                                   l5599 3E12                                     l7295 2E6C  
                                   l7287 2E2E                                     l7279 2E14  
                                   l6593 39C4                                     l6585 3990  
                                   l6577 3960                                     l6569 3942  
                                   l6825 2CA4                                     l6817 2C64  
                                   l6809 2C16                                     l6489 2234  
                                   l6497 227C                                     l6673 31EC  
                                   l6665 31C6                                     l6657 3186  
                                   l6729 345A                                     l6753 29D0  
                                   l6761 2AB0                                     l6745 2938  
                                   l6737 4074                                     l6921 13F0  
                                   l6905 130C                                     l6841 109E  
                                   l6833 105E                                     l7289 2E3E  
                                   l7297 2E74                                     l6595 39CA  
                                   l6587 3998                                     l6579 396E  
                                   l6819 2C7E                                     l6499 2296  
                                   l6691 3250                                     l6683 3214  
                                   l6675 31F6                                     l6667 31D4  
                                   l6659 31B0                                     l6763 2AEC  
                                   l6747 2958                                     l6739 4082  
                                   l6931 1428                                     l6923 13FA  
                                   l6907 1320                                     l6915 139C  
                                   l6851 10DA                                     l6843 10A6  
                                   l6835 106C                                     l7299 2E86  
                                   l6589 39A6                                     l6597 39D0  
                                   l6685 3220                                     l6677 3200  
                                   l6765 2B00                                     l6757 2A40  
                                   l6749 29AE                                     l6781 40FA  
                                   l6773 40CA                                     l6941 1472  
                                   l6933 1440                                     l6925 1402  
                                   l6917 13D6                                     l6909 1354  
                                   l6861 1120                                     l6845 10B6  
                                   l6853 10DE                                     l6837 1070  
                                   l6829 1048                                     l6599 39E0  
                                   l6695 3E8E                                     l6791 2B98  
                                   l6687 3230                                     l6767 2B28  
                                   l6759 2A7C                                     l6775 40DE  
                                   l6783 40FE                                     l6943 1486  
                                   l6951 157C                                     l6935 1452  
                                   l6927 1408                                     l6919 13E4  
                                   l6863 1128                                     l6855 1104  
                                   l6871 1162                                     l6847 10C6  
                                   l6839 1094                                     l6697 3E9C  
                                   l6793 2B9E                                     l6785 2B4A  
                                   l6689 3240                                     l6769 2B38  
                                   l6777 40EA                                     l6961 1648  
                                   l6953 159A                                     l6945 14EA  
                                   l6929 141A                                     l6937 145A  
                                   l6881 11AC                                     l6873 1188  
                                   l6865 113C                                     l6857 1116  
                                   l6849 10D2                                     l6699 3EB0  
                                   l6795 2BAE                                     l6787 2B6C  
                                   l6779 40EE                                     l6971 16F8  
                                   l6963 1658                                     l6955 15CE  
                                   l6947 1542                                     l6939 1462  
                                   l6891 11DE                                     l6875 119A  
                                   l6867 1146                                     l6859 111A  
                                   l6797 2BBA                                     l6789 2B88  
                                   l6981 175C                                     l6973 172C  
                                   l6965 1668                                     l6957 1600  
                                   l6949 1576                                     l6877 119E  
                                   l6799 2BC2                                     l6991 180E  
                                   l6983 1762                                     l6975 1740  
                                   l6967 169C                                     l6959 1616  
                                   l6895 1224                                     l6879 11A4  
                                   l6993 182A                                     l6985 176A  
                                   l6969 16F2                                     l6977 1744  
                                   l6897 122A                                     l6889 11C4  
                                   l6995 1838                                     l6987 1776  
                                   l6979 1754                                     l6899 125E  
                                   l6997 1848                                     l6989 17EE  
                                   l6999 184C                                     STR_1 103F  
                                   STR_2 103F                                     STR_4 102D  
                                   STR_5 1032                                     STR_6 1025  
                                   STR_7 1011                                     STR_8 1042  
                                   STR_9 1044                                     _LATA 0F89  
                                   _LATB 0F8A                                     _LATC 0F8B  
                                   _LATD 0F8C                                     _LATE 0F8D  
                                   u5010 2DD6                                     u5011 2DD0  
                                   u5020 2DD8                                     u5004 2D8A  
                                   u3500 2F5A                                     u5100 3D4C  
                                   u5005 2D86                                     u3501 2F56  
                                   u5101 3D48                                     u3510 2F7A  
                                   u5110 3D68                                     u5030 4026  
                                   u3511 2F76                                     u5111 3D64  
                                   u5031 4022                                     u3520 2F92  
                                   u5120 3D88                                     u5040 3FC8  
                                   u5200 38B0                                     u6000 3B5C  
                                   u3521 2F8E                                     u5121 3D84  
                                   u5041 3FC4                                     u5201 38AC  
                                   u6001 3B58                                     u5130 37DE  
                                   u5210 38F6                                     u6010 3B6C  
                                   u5131 37DA                                     u6011 3B68  
                                   u3540 2FF2                                     u5140 37EE  
                                   u5300 35AE                                     u5220 392E  
                                   u6020 3B92                                     u6100 1AE8  
                                   u3541 2FEE                                     u5141 37EA  
                                   u5301 35AA                                     u6021 3B8E  
                                   u6101 1AE4                                     u3534 2FAC  
                                   u4510 3FB4                                     u5150 380A  
                                   u5310 35F4                                     u5230 393E  
                                   u6030 3BC4                                     u6110 1B24  
                                   u3535 2FA8                                     u4511 3FB0  
                                   u5151 3806                                     u5311 35F0  
                                   u5231 393A                                     u6031 3BC0  
                                   u6111 1B20                                     u4520 4252  
                                   u4504 3F90                                     u5160 382A  
                                   u5320 3626                                     u7000 3B42  
                                   u6200 1C3E                                     u6120 1B32  
                                   u6040 1A4C                                     u4521 424E  
                                   u4505 3F8C                                     u5161 3826  
                                   u5321 3622                                     u5217 38EC  
                                   u7001 3B3E                                     u6201 1C3A  
                                   u6121 1B2E                                     u6041 1A48  
                                   u3554 300C                                     u3490 2F3E  
                                   u5250 3F04                                     u5330 3638  
                                   u7010 3290                                     u6210 1C70  
                                   u6130 1BA0                                     u6050 1A5E  
                                   u3555 3008                                     u3491 2F3A  
                                   u5251 3F00                                     u5331 3634  
                                   u5227 3924                                     u7011 328C  
                                   u6211 1C6C                                     u6131 1B9C  
                                   u6051 1A5A                                     u5260 3F30  
                                   u5340 3478                                     u5180 3A06  
                                   u7020 32CE                                     u6300 1DB8  
                                   u6220 1C7E                                     u6140 1BB8  
                                   u6060 1A6E                                     u7100 31E8  
                                   u5261 3F2C                                     u5341 3474  
                                   u5181 3A02                                     u7021 32CA  
                                   u6301 1DB4                                     u6221 1C7A  
                                   u6141 1BB2                                     u6061 1A6A  
                                   u7101 31E4                                     u5270 3F54  
                                   u5350 34B8                                     u5174 387A  
                                   u5190 389E                                     u7030 32EC  
                                   u6310 1DC8                                     u6230 1C9C  
                                   u6150 1BBA                                     u6070 1AB0  
                                   u7110 3210                                     u5271 3F50  
                                   u5351 34B4                                     u5175 3876  
                                   u5191 389A                                     u7031 32E8  
                                   u6311 1DC4                                     u6231 1C98  
                                   u6071 1AAC                                     u7111 320C  
                                   u5440 3E34                                     u5280 3562  
                                   u5360 412A                                     u7040 330C  
                                   u6400 1EB0                                     u6320 1DDA  
                                   u6240 1CD4                                     u6160 1BE2  
                                   u6080 1AC6                                     u7120 3230  
                                   u7200 3416                                     u5441 3E30  
                                   u5281 355E                                     u5361 4126  
                                   u7041 3308                                     u6401 1EAC  
                                   u6321 1DD6                                     u6241 1CD0  
                                   u6161 1BDE                                     u6081 1AC2  
                                   u7121 322C                                     u7201 3412  
                                   u4490 3F6C                                     u5610 4234  
                                   u5290 3572                                     u5370 413C  
                                   u7050 335C                                     u6410 1EC2  
                                   u6330 1DF0                                     u6250 1D1A  
                                   u6170 1C00                                     u6090 1AD8  
                                   u7130 3240                                     u4491 3F68  
                                   u5611 4230                                     u5291 356E  
                                   u5371 4138                                     u7051 3358  
                                   u6411 1EBE                                     u6331 1DEC  
                                   u6251 1D16                                     u6171 1BFC  
                                   u6091 1AD4                                     u7131 323C  
                                   u7140 3E9C                                     u6500 23FE  
                                   u7060 43C6                                     u6420 1EDE  
                                   u6340 1E06                                     u6260 1D50  
                                   u6180 1C20                                     u7220 3450  
                                   u7300 2A3C                                     u7141 3E98  
                                   u6501 23FA                                     u7061 43C2  
                                   u6421 1EDA                                     u6341 1E02  
                                   u6261 1D4C                                     u6181 1C1C  
                                   u7221 344A                                     u7301 2A38  
                                   u5630 36AA                                     u6430 4302  
                                   u7150 3EE2                                     u6510 243E  
                                   u6350 1E1A                                     u6270 1D60  
                                   u6190 1C2E                                     u7070 3172  
                                   u7230 3452                                     u7310 2A60  
                                   u5455 3E7C                                     u5631 36A6  
                                   u8007 3688                                     u6431 42FE  
                                   u7151 3EDE                                     u6511 243A  
                                   u6351 1E16                                     u6271 1D5C  
                                   u6191 1C2A                                     u7071 316E  
                                   u7215 3428                                     u5640 36E8  
                                   u7160 43F6                                     u7400 2B98  
                                   u6600 25B8                                     u6520 24B4  
                                   u6440 2336                                     u6360 1E34  
                                   u6280 1D8C                                     u7080 31A6  
                                   u7320 2A7C                                     u7240 433C  
                                   u5457 3E7E                                     u5625 423E  
                                   u5641 36E4                                     u8017 36C6  
                                   u7161 43F2                                     u7401 2B94  
                                   u6601 25B4                                     u6521 24B0  
                                   u6441 2332                                     u6361 1E30  
                                   u6281 1D88                                     u7321 2A78  
                                   u7241 4338                                     u5626 4240  
                                   u7410 2BAE                                     u6610 25CE  
                                   u6530 24D6                                     u6450 2348  
                                   u6370 1E6E                                     u6290 1D9C  
                                   u7090 31D4                                     u7170 33A6  
                                   u7330 2AD0                                     u7250 4082  
                                   u8027 30DE                                     u7411 2BAA  
                                   u6611 25CA                                     u6531 24D2  
                                   u6451 2344                                     u6371 1E6A  
                                   u6291 1D98                                     u7091 31D0  
                                   u7315 2A56                                     u7251 407E  
                                   u7420 2C52                                     u6620 25E2  
                                   u6540 2500                                     u6460 2358  
                                   u6700 1F6E                                     u6380 1E80  
                                   u7180 33C4                                     u7340 2AEC  
                                   u7260 2980                                     u7500 1116  
                                   u8037 35C2                                     u7421 2C4E  
                                   u6621 25DE                                     u6541 24FC  
                                   u6461 2354                                     u6701 1F6A  
                                   u6381 1E7C                                     u7085 319C  
                                   u7181 33C0                                     u7341 2AE8  
                                   u7501 1112                                     u7430 2C64  
                                   u6630 25FC                                     u6550 2524  
                                   u6470 239C                                     u6710 1F80  
                                   u6390 1E90                                     u7190 33EC  
                                   u7350 2B28                                     u7270 29AE  
                                   u7510 1188                                     u5670 3DC6  
                                   u8047 34BE                                     u7431 2C60  
                                   u6631 25F8                                     u6551 2520  
                                   u6471 2398                                     u6711 1F7C  
                                   u6391 1E8C                                     u7191 33E8  
                                   u7175 339C                                     u7351 2B24  
                                   u7335 2AC6                                     u7271 29AA  
                                   u7511 1184                                     u5671 3DC2  
                                   u4960 2CD6                                     u7440 2C7E  
                                   u6640 2644                                     u6560 253A  
                                   u6480 23AE                                     u6800 2220  
                                   u6720 1F90                                     u7280 29D0  
                                   u7360 4118                                     u7600 141A  
                                   u7520 119A                                     u4961 2CD2  
                                   u8057 34DA                                     u7441 2C7A  
                                   u6641 2640                                     u6561 2536  
                                   u6481 23AA                                     u6801 221C  
                                   u6721 1F8C                                     u7281 29CC  
                                   u7265 2976                                     u7361 4114  
                                   u7601 1416                                     u7521 1196  
                                   u4970 2CF2                                     u7450 2C8E  
                                   u7370 2B5A                                     u6650 2674  
                                   u6570 2558                                     u6490 23BE  
                                   u6810 2234                                     u6730 1FC6  
                                   u7610 1428                                     u7530 1210  
                                   u4971 2CEE                                     u8067 34F0  
                                   u7451 2C8A                                     u7371 2B54  
                                   u6651 2670                                     u6571 2554  
                                   u6491 23BA                                     u6811 2230  
                                   u6731 1FC2                                     u7611 1424  
                                   u7531 120C                                     u4980 2D12  
                                   u6900 3792                                     u7380 2B5C  
                                   u6660 26A2                                     u6580 2578  
                                   u6820 224E                                     u6740 1FD6  
                                   u7700 182A                                     u7620 1452  
                                   u7540 129C                                     u7460 106C  
                                   u4981 2D0E                                     u8077 426A  
                                   u6901 378E                                     u6661 269E  
                                   u6581 2574                                     u6821 224A  
                                   u6741 1FD2                                     u7701 1826  
                                   u7621 144E                                     u7541 1298  
                                   u7461 1068                                     u5685 3E0E  
                                   u6910 37B8                                     u7390 2B6C  
                                   u6590 258A                                     u6830 2296  
                                   u6750 2150                                     u6670 1F0C  
                                   u7710 1838                                     u7630 159A  
                                   u7550 12CE                                     u7470 10B6  
                                   u6911 37B4                                     u7391 2B68  
                                   u6591 2586                                     u6831 2292  
                                   u6671 1F08                                     u7295 29E4  
                                   u7711 1834                                     u7631 1596  
                                   u7551 12CA                                     u7471 10B2  
                                   u5687 3E10                                     u6920 3954  
                                   u6840 22C4                                     u6760 21AA  
                                   u6680 1F1E                                     u7296 29EE  
                                   u7720 188C                                     u7640 1600  
                                   u7560 130C                                     u7480 10C6  
                                   u7800 26D8                                     u6921 3950  
                                   u6841 22C0                                     u6761 21A6  
                                   u6681 1F1A                                     u7297 29FE  
                                   u7721 1888                                     u7641 15FC  
                                   u7561 1308                                     u7481 10C2  
                                   u7801 26D4                                     u4994 2D34  
                                   u6930 396E                                     u6850 22FE  
                                   u6770 21CA                                     u6690 1F2E  
                                   u7730 195E                                     u7650 1648  
                                   u7570 1398                                     u7490 1104  
                                   u7810 2712                                     u4995 2D30  
                                   u6931 396A                                     u6851 22FA  
                                   u6771 21C6                                     u6755 2146  
                                   u6691 1F2A                                     u7731 195A  
                                   u7651 1644                                     u7571 1394  
                                   u7491 1100                                     u7811 270E  
                                   u7900 30BC                                     u6860 3718  
                                   u6940 3988                                     u6780 21DC  
                                   u7740 197A                                     u7660 1658  
                                   u7580 13CE                                     u7820 2754  
                                   u7901 30B8                                     u6861 3714  
                                   u6941 3984                                     u6781 21D8  
                                   u7741 1976                                     u7661 1654  
                                   u7581 13CA                                     u7821 2750  
                                   u7910 30FA                                     u6870 3732  
                                   u6950 39A6                                     u6790 220A  
                                   u7750 19E0                                     u7670 16F2  
                                   u7590 13E4                                     u7830 2770  
                                   u7911 30F6                                     u6871 372E  
                                   u6951 39A2                                     u6791 2206  
                                   u7751 19DA                                     u7671 16EE  
                                   u7591 13E0                                     u7831 276C  
                                   u6880 3758                                     u6960 39BC  
                                   u7760 19E2                                     u7680 1740  
                                   u7840 2826                                     u6881 3754  
                                   u6961 39B8                                     u7681 173C  
                                   u7841 2822                                     u6890 3776  
                                   u6970 39E0                                     u7770 19F6  
                                   u7690 17EE                                     u7850 42B8  
                                   u6891 3772                                     u6971 39DC  
                                   u7771 19F2                                     u7691 17EA  
                                   u7851 42B4                                     u7860 447A  
                                   u6980 3AD0                                     u7780 3C20  
                                   u7861 4476                                     u6981 3ACC  
                                   u7781 3C1C                                     u6990 3B0E  
                                   u7790 3C92                                     u7870 3CB2  
                                   u6991 3B0A                                     u7791 3C8E  
                                   u7871 3CAE                                     u7960 2E3E  
                                   u7881 3CC0                                     u7961 2E3A  
                                   u7890 3D38                                     u7970 2E86  
                                   u7891 3D34                                     u7971 2E82  
                                   u7980 2F18                                     u7981 2F14  
                                   u7997 365C                                     _WPUB 0F7C  
          ??_lcd_4bit_send_enable_signal 000A                                     abs@a 0007  
                                   _lcd1 00C6                                     _dbuf 0100  
                                   _key1 00BE                                     _labs 4074  
                                   _main 2E04                                     _dtoa 2B4A  
                                   _prec 0051                                     pad@i 0015  
                                   pad@p 0012                                     fsr0h 0FEA  
                                   fsr1h 0FE2                                     indf0 0FEF  
                                   fsr2h 0FDA                                     fsr0l 0FE9  
                                   indf1 0FE7                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                 __end_of_led_initialize 3E8E             keypad_get_value@rows_counter 000F  
                          ___fpclassifyf 3366                                     prodh 0FF4  
                                   prodl 0FF3                                     start 0000  
                        ___fldiv@new_exp 0012                             ___param_bank 0000  
                  _lcd_4bit_send_command 4016                                    ??_abs 0009  
                   _gpio_pin_write_logic 2F2A                         __end_of_APP_Init 44F2  
                                  ??_pad 0014            __end_of_OSCILLATOR_Initialize 451E  
                          ___fltol@sign1 0009                                    ?_labs 0001  
                        __end_of___fladd 1EF2                                    ?_main 0001  
                                  ?_dtoa 0017                          __end_of___fldiv 26B6  
                        __end_of___awdiv 37CA                          __end_of___flneg 43E8  
                                  _EEADR 0FA9                _lcd_4bit_send_string_data 388A  
                                  STR_10 1037                                    STR_13 103B  
                        __end_of___awmod 39F2                          __end_of___flmul 231C  
                        __end_of___flsub 41FE                          __end_of___fltol 3262  
                                  _ANSEL 0F7E                          ___awdiv@divisor 0003  
                        ___awdiv@counter 0005                             vfpfcnvrt@fmt 0037  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
              lcd_4bit_set_cursor@coulmn 0014                 __end_of_keypad_get_value 363C  
                        _DATAEE_ReadByte 44F2                                    _led_1 0058  
                                  _flags 0055                      read_prec_or_width@c 0009  
                    read_prec_or_width@n 000A                                    _fputc 3B4C  
                                  _fputs 42C4                                    labs@a 0001  
                                  pad@fp 000F                                    _width 004F  
                                  _putch 451E                                    dtoa@d 0018  
                                  dtoa@i 0021                                    dtoa@p 001E  
                                  dtoa@s 0020                                    dtoa@w 001C  
                                  tablat 0FF5    __end_of_lcd_4bit_send_string_data_pos 416A  
          _lcd_4bit_send_string_data_pos 411A                                    status 0FD8  
                        __end_of_sprintf 43B0                           ?___fpclassifyf 0001  
                        ?_led_initialize 000C           ?_gpio_pin_direction_initialize 0001  
                        ??_lcd_send_4bit 000B                          __initialization 416A  
                    keypad_get_value@obj 0009                      keypad_get_value@ret 000C  
                           __end_of_labs 40CA                             __end_of_main 2F2A  
                           __end_of_dtoa 2CC2            gpio_pin_read_logic@pin_config 0001  
                  ?_gpio_pin_write_logic 0001                 gpio_pin_read_logic@logic 0002  
                                 ??_labs 0005                                   ??_main 004F  
                                 ??_dtoa 001A                            __activetblptr 0002  
  lcd_4bit_send_string_data_pos@str_data 001C               __end_of_read_prec_or_width 3C9C  
                                 ?_fputc 0001                                   ?_fputs 0009  
                                 _EEADRH 0FAA                                   _EEDATA 0FA8  
                                 _EECON2 0FA7                         ___awdiv@dividend 0001  
                                 ?_putch 0001                                   _ANSELH 0F7F  
                                 _TABLAT 0FF5                                   _OSCCON 0FD3  
           __end_of_Read_Password_EEPROM 4378                            _tris_register 00B4  
                 ?_lcd_4bit_send_command 000F                                   _Welcom 363C  
                           vfprintf@cfmt 0041                                   ___flge 3262  
                                 ___fleq 3AA2                                ??___fladd 0009  
                                 ___wmul 44AC                                ??___fldiv 0009  
                              ??___awdiv 0005                                ??___flneg 0005  
                              ??___awmod 0005                                ??___flmul 0009  
                              ??___flsub 0022                                ??___fltol 0005  
                                 _efgtoa 1048                                   _led_on 3DB6  
                                 _floorf 2938                                   _memcpy 40CA  
                   read_prec_or_width@ap 0008                                   _memset 444C  
                                 clear_0 4190                                   clear_1 419C  
                                 clear_2 41A8                    led_initialize@pin_obj 000F  
                       ___awdiv@quotient 0007                          ___awmod@divisor 0003  
                       lcd_send_4bit@Ret 000D                                   isa$std 0001  
                       lcd_send_4bit@lcd 0009                          ___awmod@counter 0005  
                                 pad@buf 0010         Read_Password_EEPROM@Return_Value 0008  
                                 dtoa@fp 0017                  __end_of_DATAEE_ReadByte 450A  
                                 _strcpy 4304                                   fputc@c 0001  
                                 fputs@c 000C                                   fputs@i 000D  
                                 fputs@s 0009                            led_on@pin_obj 000C  
                        ___fpclassifyf@e 0009                          ___fpclassifyf@u 000B  
                        ___fpclassifyf@x 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                                   putch@c 0001  
                       __end_of_vfprintf 42C4                                ??_sprintf 0042  
                             ___flge@ff1 001A                               ___flge@ff2 001E  
                        ??___fpclassifyf 0005                        _SYSTEM_Initialize 450A  
                             ___fleq@ff1 0001                               ___fleq@ff2 0005  
                              ?_APP_Init 0001                               __accesstop 0060  
                __end_of__initialization 41AE                               ___flneg@f1 0001  
                     ?_SYSTEM_Initialize 0001                            ___rparam_used 0001  
                             ___fltol@f1 0001                            ?_Set_Password 001F  
                      led_initialize@led 000C                        led_initialize@ret 000E  
                _lcd_4bit_send_char_data 3FB8           ?_lcd_4bit_send_string_data_pos 0019  
                 ??_gpio_pin_write_logic 0003                           __pcstackCOMRAM 0001  
                           __pidataBANK0 441C                      ??_SYSTEM_Initialize 0001  
                       _DATAEE_WriteByte 41FE                            __end_of_fputc 3BF6  
                          __end_of_fputs 4304                            __end_of_putch 4520  
               lcd_4bit_send_command@Ret 0011                 lcd_4bit_send_command@lcd 000F  
                                ??_fputc 0004                __end_of_SYSTEM_Initialize 4514  
                                ??_fputs 000C                                  ??_putch 0001  
                             __pbssBANK0 00D0                               __pbssBANK1 0100  
                             ??_APP_Init 0016                           ??_Set_Password 0021  
                                ?_Welcom 0001                                  ?___flge 001A  
                                ?___fleq 0001                                  ?___wmul 0001  
                                ?_efgtoa 002E                                  ?_led_on 0009  
            convert_uint16_to_string@Ret 009E                                  ?_floorf 001A  
                                ?_memcpy 0001              convert_uint16_to_string@str 0097  
                                ?_memset 0001                                  ?_strcpy 0001  
                       ?_DATAEE_ReadByte 0001                     _Read_Password_EEPROM 433E  
                                _TBLPTRH 0FF7                                  _TBLPTRL 0FF6  
                                _TBLPTRU 0FF8                                  _OSCTUNE 0F9B  
                      ?_keypad_get_value 0009                         ??_led_initialize 000D  
                     ??_keypad_get_value 000B                               _btn_values 1001  
      __end_of_lcd_4bit_send_string_data 3942                     DATAEE_WriteByte@bAdd 0001  
    lcd_4bit_send_string_data_pos@coulmn 001B                ??_lcd_4bit_send_char_data 0011  
                                __Hparam 0000                                  __Lparam 0000  
                    _gpio_pin_initialize 3D3C                                  ___fladd 1A32  
                                ___fldiv 231C                      _gpio_pin_read_logic 37CA  
                                ___awdiv 3706                                  ___flneg 43B0  
                                ___awmod 3942                                  ___flmul 1EF2  
                                ___flsub 41B8                                  ___fltol 315C  
               keypad_initialize@num_col 000F                                ?_vfprintf 008C  
                           __psmallconst 1000                 keypad_initialize@num_row 000E  
                                __pcinit 416A                                  __ramtop 1000  
                                __ptext0 2E04                                  __ptext1 3DB6  
                                __ptext2 3C9C                                  __ptext3 4378  
                                __ptext4 4284                                  __ptext5 26B6  
                                __ptext6 3BF6                                  __ptext7 1048  
                                __ptext8 4304                                  __ptext9 40CA  
                  ?_Read_Password_EEPROM 0003          ??_gpio_pin_direction_initialize 0002  
               _convert_uint16_to_string 3C9C                    _OSCILLATOR_Initialize 4514  
                  read_prec_or_width@fmt 0007                         ___awmod@dividend 0001  
               ??_PIN_MANAGER_Initialize 0001                                  efgtoa@c 0033  
                                efgtoa@d 006B                                  efgtoa@e 006F  
                                efgtoa@f 002F                                  efgtoa@g 0082  
                                efgtoa@h 0079                                  efgtoa@i 0077  
                                efgtoa@l 007D                                  efgtoa@m 006D  
                                efgtoa@n 0086                                  efgtoa@p 0062  
                                efgtoa@t 0064                                  efgtoa@u 0088  
                                efgtoa@w 0071                     ?_gpio_pin_initialize 0009  
                   ?_gpio_pin_read_logic 0001                                  _sprintf 4378  
                   end_of_initialization 41AE                                  floorf@e 0028  
                                floorf@m 0024                                  floorf@u 002A  
                                floorf@x 001A               __end_of_lcd_4bit_initialze 3552  
                                memcpy@d 0008                                  memcpy@n 0005  
                                memcpy@s 000A                                  fputc@fp 0003  
                                memset@c 0002                                  memset@n 0004  
                                memset@p 0006                            _Password_text 00DE  
                          __Lmediumconst 0000                                  fputs@fp 000B  
           keypad_get_value@cols_counter 0010                       _read_prec_or_width 3BF6  
                ??_lcd_4bit_send_command 0011                        __end_of_vfpfcnvrt 2938  
                             efgtoa@mode 0069                               efgtoa@sign 0081  
                  __end_of_lcd_send_4bit 3FB8                                  postdec1 0FE5  
                                postdec2 0FDD                      ?_read_prec_or_width 0007  
                                postinc0 0FEE                                  postinc1 0FE6  
                                postinc2 0FDE                         vfpfcnvrt@convarg 003B  
                             ??_vfprintf 0041                                  strcpy@d 0005  
      lcd_4bit_send_string_data@str_data 0013          __end_of_lcd_4bit_send_char_data 4016  
             lcd_4bit_send_char_data@Ret 0011                              ___fladd@grs 0010  
           keypad_get_value@column_logic 000D                     __end_of_Set_Password 315C  
             lcd_4bit_send_char_data@lcd 000F                    ??_gpio_pin_initialize 000A  
                  ??_gpio_pin_read_logic 0003                     ??_read_prec_or_width 0009  
                            ___fldiv@grs 0014                              ___fldiv@rem 000D  
               __end_of_DATAEE_WriteByte 4242              lcd_4bit_initialze@l_counter 0014  
                            ___flmul@grs 000F                      _lcd_4bit_set_cursor 39F2  
                  keypad_get_value@count 000E                    keypad_get_value@value 000A  
                         __end_of_Welcom 3706            convert_uint16_to_string@F3475 00D0  
                         __end_of___flge 3366                           __end_of___fleq 3B4C  
                            vfpfcnvrt@ap 0038                              vfpfcnvrt@cp 0040  
                            vfpfcnvrt@fp 0036                           __end_of___wmul 44D2  
                         __end_of_efgtoa 1A32                   ??_Read_Password_EEPROM 0005  
                         __end_of_led_on 3E24                           __end_of_floorf 2B4A  
                         __end_of_memcpy 411A                   ?_OSCILLATOR_Initialize 0001  
                             floorf@F521 00D6                 Set_Password@Return_Value 0029  
                         __end_of_memset 447C                   Welcom@l_welcom_counter 001B  
                         __end_of_strcpy 433E                      start_initialization 416A  
           ?_lcd_4bit_send_enable_signal 0009                     ?_lcd_4bit_set_cursor 0012  
          convert_uint16_to_string@value 0095                              __end_of_abs 441C  
                            __end_of_pad 3EF4    __end_of_gpio_pin_direction_initialize 2E04  
          _gpio_pin_direction_initialize 2CC2                             _lat_register 00A0  
                  __end_of___fpclassifyf 3464                             _Keypad_Value 00CC  
                    DATAEE_ReadByte@bAdd 0001                                 ??_Welcom 0019  
                            vfprintf@fmt 008D                                 ??___flge 0022  
                               ??___fleq 0009                                 ??___wmul 0005  
                               ??_efgtoa 0034                                 ??_led_on 000A  
                            __pdataBANK0 00A0                                 ??_floorf 001E  
                               ??_memcpy 0007                                 ??_memset 0006  
                  Set_Password@l_Counter 002B                               memset@dest 0001  
           lcd_4bit_send_command@command 0010                                 ??_strcpy 0004  
                              ___fladd@a 0005                                ___fladd@b 0001  
                              ___fldiv@a 0005                                ___fldiv@b 0001  
                              ___flmul@a 0005                                ___flmul@b 0001  
                            __pbssCOMRAM 004F                    ??_lcd_4bit_set_cursor 0015  
                              ___flsub@a 001E                                ___flsub@b 001A  
                          __pcstackBANK0 0060           gpio_pin_write_logic@pin_config 0001  
                            _efgtoa$1580 0066                   _PIN_MANAGER_Initialize 447C  
                              _dtoa$1549 001A               ??_convert_uint16_to_string 004F  
                               ?___fladd 0001                                 ?___fldiv 0001  
                               ?___awdiv 0001                                 ?___flneg 0001  
                               ?___awmod 0001                                 ?___flmul 0001  
                               ?___flsub 001A                                 ?___fltol 0001  
              gpio_pin_write_logic@logic 0002                              __smallconst 1000  
                               ?_sprintf 008F                                 _APP_Init 44D2  
       convert_uint16_to_string@temp_str 0098                           ___wmul@product 0005  
             ?_lcd_4bit_send_string_data 0012                             _Set_Password 3048  
          __end_of_lcd_4bit_send_command 4074                                 _PIR2bits 0FA1  
       gpio_pin_direction_initialize@Ret 0007     convert_uint16_to_string@Data_Counter 009F  
                     _lcd_4bit_initialze 3464                                _vfpfcnvrt 26B6  
                      ___wmul@multiplier 0001                      ?_lcd_4bit_initialze 0012  
gpio_pin_direction_initialize@pin_config 0001                   gpio_pin_initialize@Ret 000B  
                              led_on@led 0009                                led_on@ret 000B  
                  DATAEE_WriteByte@bData 0003                  gpio_pin_write_logic@Ret 0008  
                             vfpfcnvrt@c 003F                              _INTCON2bits 0FF1  
               ?_lcd_4bit_send_char_data 000F                                copy_data0 417E  
                      _keypad_initialize 3EF4                        ?_DATAEE_WriteByte 0001  
                 gpio_pin_read_logic@Ret 0007                       ?_keypad_initialize 000C  
                     ??_DATAEE_WriteByte 0004                     ??_lcd_4bit_initialze 0013  
                             _EECON1bits 0FA6                            _Program_Count 0056  
                               _Password 0053                                 __Hrparam 0000  
       lcd_4bit_send_string_data_pos@Ret 001E         lcd_4bit_send_string_data_pos@lcd 0019  
       lcd_4bit_send_string_data_pos@row 001A                                memcpy@tmp 0007  
                             vfprintf@ap 008E                                 __Lrparam 0000  
                             vfprintf@fp 008C                      ??_keypad_initialize 000D  
                ??_OSCILLATOR_Initialize 0001                   lcd_4bit_set_cursor@Ret 0017  
                 lcd_4bit_set_cursor@lcd 0012                               ?_vfpfcnvrt 0036  
                 lcd_4bit_set_cursor@row 0013              __end_of_gpio_pin_initialize 3DB6  
                     __end_of_btn_values 1011              __end_of_gpio_pin_read_logic 388A  
                     ___fpclassifyf@F465 00DA                               sprintf@fmt 0090  
              __end_of_keypad_initialize 3F58                                 __ptext10 4074  
                               __ptext11 2938                                 __ptext20 231C  
                               __ptext12 3366                                 __ptext21 2B4A  
                               __ptext13 315C                                 __ptext30 363C  
                               __ptext22 3E8E                                 __ptext14 41B8  
                               __ptext31 3048                                 __ptext23 42C4  
                               __ptext15 1A32                                 __ptext40 447C  
                               __ptext32 411A                                 __ptext24 3B4C  
                               __ptext16 43B0                                 __ptext41 4514  
                               __ptext33 39F2                                 __ptext25 451E  
                               __ptext17 1EF2                                 __ptext50 4242  
                               __ptext42 433E                                 __ptext34 388A  
                               __ptext26 43E8                                 __ptext18 3262  
                               __ptext51 3EF4                                 __ptext43 44F2  
                               __ptext35 3FB8                                 __ptext27 3942  
                               __ptext19 3AA2                                 __ptext52 3D3C  
                               __ptext44 41FE                                 __ptext36 3552  
                               __ptext28 3706                                 __ptext53 2F2A  
                               __ptext45 44D2                                 __ptext37 37CA  
                               __ptext29 444C                                 __ptext54 2CC2  
                               __ptext46 3E24                                 __ptext38 44AC  
                               __ptext47 3464                                 __ptext39 450A  
                               __ptext48 4016                                 __ptext49 3F58  
            DATAEE_WriteByte@GIEBitValue 0004                               strcpy@dest 0001  
                      ??_DATAEE_ReadByte 0003                         _keypad_get_value 3552  
                               efgtoa@fp 002E                                 efgtoa@ne 0060  
                               efgtoa@pp 0068                                 efgtoa@ou 0073  
       __end_of_convert_uint16_to_string 3D3C                                 isa$xinst 0000  
                     lcd_send_4bit@value 000A                                 _vfprintf 4284  
     lcd_4bit_send_string_data@l_counter 0018                               _INTCONbits 0FF2  
                               memcpy@d1 0001                                 memcpy@s1 0003  
           __end_of_gpio_pin_write_logic 3048                                sprintf@ap 0042  
         lcd_4bit_send_enable_signal@Ret 000A           lcd_4bit_send_enable_signal@lcd 0009  
                ?_PIN_MANAGER_Initialize 0001                                strcpy@src 0003  
                 lcd_send_4bit@l_counter 000E                              efgtoa@nmode 006A  
                          _lcd_send_4bit 3F58                              ??_vfpfcnvrt 0039  
            __end_of_lcd_4bit_set_cursor 3AA2                                 sprintf@f 0043  
                               sprintf@s 008F          ??_lcd_4bit_send_string_data_pos 001E  
                          ___fladd@signs 000D                            _port_register 00AA  
         __end_of_PIN_MANAGER_Initialize 44AC                             ___fladd@aexp 000E  
                           ___fladd@bexp 000F              lcd_4bit_send_char_data@data 0010  
            ??_lcd_4bit_send_string_data 0015                           _led_initialize 3E24  
                  lcd_4bit_initialze@Ret 0015                    lcd_4bit_initialze@lcd 0012  
